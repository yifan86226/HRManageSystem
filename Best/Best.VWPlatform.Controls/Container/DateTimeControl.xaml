<UserControl x:Class="Best.VWPlatform.Controls.Container.DateTimeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:local="clr-namespace:Best.VWPlatform.Controls.Container"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="150"
             Name="Self">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:Int32ToStringConverter x:Key="Int32ToString"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <ComboBox Grid.Row="0" Name="DateTimePickerComboBox" DropDownClosed="ComboBox_DropDownClosed"
                  Tag="{Binding ElementName=Self, Path=SelectedDateTimeString, Mode=oneWay}" ItemContainerStyle="{StaticResource x_DefaultComboBoxItem}">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBox">
                                <Grid>
                                    <Grid.Resources>
                                        <Style x:Key="comboToggleStyle" TargetType="ToggleButton">
                                            <Setter Property="Foreground" Value="#FF333333"/>
                                            <Setter Property="Background" Value="#FF1F3B53"/>
                                            <Setter Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                        <GradientStop Color="#FF718597" Offset="0.375"/>
                                                        <GradientStop Color="#FF617584" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Padding" Value="3"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal"/>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundOverlay">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay" d:IsOptimized="True"/>
                                                                            <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundOverlay">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled" >
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundDisable">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundChecklay">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse1">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Collapsed</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked"/>
                                                                    <VisualState x:Name="Indeterminate"/>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusVisualElement">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused" />
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Rectangle x:Name="rectangle" Fill="White" Grid.Row="1" Visibility="Collapsed"/>
                                                            <Rectangle x:Name="Background" RadiusX="10" RadiusY="10" StrokeThickness="0" Fill="{StaticResource x_BlackBackBrush}" Grid.RowSpan="2"/>
                                                            <Grid Grid.RowSpan="2">
                                                                <Rectangle x:Name="BackgroundOverlay" RadiusX="10" RadiusY="10" Stroke="{StaticResource x_DefaultCheckBoxBrush}" Fill="Black" Visibility="Collapsed"/>
                                                                <Rectangle x:Name="BackgroundChecklay" RadiusX="10" RadiusY="10" Stroke="{StaticResource x_DefaultCheckBoxBrush}" Fill="Black" Visibility="Collapsed"/>
                                                            </Grid>
                                                            <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0" Grid.RowSpan="2" Width="14" Height="14">
                                                                <Ellipse x:Name="ellipse" StrokeThickness="0" Visibility="Collapsed">
                                                                    <Ellipse.Fill>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FF61D7FF" Offset="0"/>
                                                                            <GradientStop Color="#FF14B1FB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Ellipse.Fill>
                                                                </Ellipse>
                                                                <Ellipse x:Name="ellipse1" StrokeThickness="0" Visibility="Collapsed">
                                                                    <Ellipse.Fill>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FF61D7FF" Offset="0"/>
                                                                            <GradientStop Color="#FF14B1FB" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Ellipse.Fill>
                                                                </Ellipse>
                                                                <ContentPresenter
    											x:Name="contentPresenter"
    											Content="{TemplateBinding Content}"
    											ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Grid>
                                                            <Rectangle x:Name="FocusVisualElement" RadiusX="10" Margin="1"  RadiusY="10" Stroke="{StaticResource x_DefaultCheckBoxBrush}" Visibility="Collapsed" IsHitTestVisible="false" Grid.RowSpan="2" Fill="Black" />
                                                            <Rectangle x:Name="BackgroundDisable" RadiusX="10" RadiusY="10" Fill="#5BFFFFFF" StrokeThickness="0" Visibility="Collapsed" Grid.RowSpan="2"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <ToggleButton x:Name="ToggleButton" Grid.Column="2" Style="{StaticResource comboToggleStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0" HorizontalContentAlignment="Right" 
                                              Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="False" ClickMode="Press">
                                        <Path x:Name="BtnArrow" Height="5" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right">
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="BtnArrowColor" Color="White"/>
                                            </Path.Fill>
                                        </Path>
                                    </ToggleButton>

                                    <TextBox x:Name="ContentSite"  Text="{TemplateBinding Tag}" Width="129" Height="31" CaretBrush="White" Background="#00000000" Foreground="#FFFFA400" BorderBrush="#00000000"
                                                      Margin="0,0,20,0" VerticalAlignment="Center" HorizontalAlignment="Left" MouseDoubleClick="ContentSite_MouseDoubleClick" TextChanged="ContentSite_TextChanged" />
                                    
                                    <Popup x:Name="Popup" AllowsTransparency="True" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom"
                                           Focusable="False" PopupAnimation="Slide">
                                        <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" Background="White" CornerRadius="5" BorderThickness="1">
                                            <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Foreground="Black" Margin="0,3">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.Style>
 
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <DatePicker x:Name="DatePickerObj" Grid.Column="0" Width="100" IsTodayHighlighted="True" VerticalContentAlignment="Center" Background="White"/>
                <Border Grid.Column="1" CornerRadius="5" Padding="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Name="TimePickerObj">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="23"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="23"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="23"/>
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" Name="TextBox_Hours" GotFocus="TextBox_Hours_GotFocus"  BorderBrush="Transparent"
                                     VerticalAlignment ="Center" HorizontalContentAlignment="Center">
                                <TextBox.Text>
                                    <Binding ElementName="Self" Path="SelectedHour" Converter="{StaticResource Int32ToString}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:TimeValidationRule MaxValue="23"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock Grid.Column="1" Text=":" VerticalAlignment ="Center"/>
                            <TextBox Grid.Column="2" Name="TextBox_Minutes" GotFocus="TextBox_Minutes_GotFocus" BorderBrush="Transparent"
                                     VerticalAlignment ="Center" HorizontalContentAlignment="Center">
                                <TextBox.Text>
                                    <Binding ElementName="Self" Path="SelectedMinute" Converter="{StaticResource Int32ToString}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:TimeValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock Grid.Column="3" Text=":" VerticalAlignment ="Center"/>
                            <TextBox Grid.Column="4" Name="TextBox_Seconds" GotFocus="TextBox_Seconds_GotFocus" BorderBrush="Transparent"
                                     VerticalAlignment ="Center" HorizontalContentAlignment="Center">
                                <TextBox.Text>
                                    <Binding ElementName="Self" Path="SelectedSecond" Converter="{StaticResource Int32ToString}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:TimeValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </Grid>
                        <Grid Grid.Column="1" Height="20" Width="20" VerticalAlignment ="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Button Name="BTN_IncreaseTime" Grid.Row="0" Height="10" Click="BTN_IncreaseTime_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Path Name="path" Fill="Silver" Data="M 5,10 L 15,10 L 10,5 L 5,10" Width="10" Height="8" Stretch="Fill"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="path" Property="Fill" Value="Black"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Name="BTN_DecrementTime" Grid.Row="1" Height="10" Click="BTN_DecrementTime_Click">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Path Name="path" Fill="Silver" Data="M 5,5 L 10,10 L 15,5 L 5,5" Width="10" Height="8" Stretch="Fill"/>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="path" Property="Fill" Value="Black"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </ComboBox>
    </Grid>
</UserControl>
