<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:Controls="clr-namespace:DevExpress.Xpf.Editors.Controls;assembly=DevExpress.Xpf.Core.v13.2" 
                    xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    xmlns:best="clr-namespace:Best.VWPlatform.Controls.Common" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
                    
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    
                    xmlns:local="clr-namespace:Best.VWPlatform.Common.Converters;assembly=Best.VWPlatform.Common" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Best.VWPlatform.Resources;component/Themes/Default.xaml" />
        <ResourceDictionary Source="/Best.VWPlatform.Resources;component/Themes/DefaultTemplate.xaml" />
        <ResourceDictionary Source="/Best.VWPlatform.Controls;component/Themes/Common/TextEditWithUnit.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  TextEditStyleNumeric NumericEditDX的TextEdit控件  -->
    <local:TextEditDoubleToStringConverter x:Key="xTextEditDoubleToStringConverter" />
    <Custom:TextBoxPaddingConverter x:Key="TextEditTextBoxPaddingConverterNumeric" />

    <Style x:Key="dxe:BaseEditNumeric" TargetType="dxe:BaseEdit">
        <Setter Property="ErrorToolTipContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontFamily="{StaticResource x_DefaultNormalFontFamily}" Foreground="Red" Text="{Binding ErrorContent}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TrimmedTextToolTipContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Content}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="UseLayoutRounding" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <ControlTemplate x:Key="TextEditThemeKey_BorderTemplateNumeric" TargetType="ContentControl">
        <Grid x:Name="RootElement">
            <Grid Background="#7B000000">
                <ContentPresenter />
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BaseTextBlockInplaceStyleNumeric" TargetType="TextBlock" />
    <Style x:Key="TextEditThemeKey_TextBlockInplaceStyleNumeric" BasedOn="{StaticResource BaseTextBlockInplaceStyleNumeric}" TargetType="TextBlock">
        <Setter Property="Custom:EditorMarginHelper.Margin" Value="0,0,0,0,0,0,0,0" />
    </Style>

    <ControlTemplate x:Key="TextEditThemeKey_DisplayInplaceTemplateNumeric">
        <TextBlock x:Name="PART_Editor" Style="{StaticResource TextEditThemeKey_TextBlockInplaceStyleNumeric}" dx:FocusHelper2.Focusable="False" />
    </ControlTemplate>

    <Style x:Key="ScrollBarThemeKey_ScrollingCornerStyleNumeric" TargetType="Border">
        <Setter Property="Background" Value="#FFE9E9E9" />
    </Style>

    <ControlTemplate x:Key="EditorListBoxThemeKey_ScrollViewerTemplateNumeric" TargetType="ScrollViewer">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}" UseLayoutRounding="True">
            <Grid.Resources>
                <Custom:ScrollContentPresenterMarginCorrector x:Key="ScrollContentPresenterMarginCorrector" />
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter x:Name="ScrollContentPresenter" Grid.Row="0" Grid.Column="0" Margin="{Binding Padding, Converter={StaticResource ScrollContentPresenterMarginCorrector}, RelativeSource={RelativeSource TemplatedParent}}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar x:Name="VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar x:Name="HorizontalScrollBar" Grid.Row="1" Grid.Column="0" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="Corner" Grid.Row="1" Grid.Column="1" Style="{StaticResource ScrollBarThemeKey_ScrollingCornerStyleNumeric}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="BaseTextStyleNumeric" TargetType="TextBox">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="best:TextBoxHelper.AutoSelectAll" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rectangle1_Copy" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rectangle1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle1_Copy" Stroke="#7F14B1FB" Visibility="Collapsed" />
                            <Rectangle x:Name="rectangle1" Stroke="#FF14B1FB" Visibility="Collapsed" />
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Padding="{Binding Padding, Converter={StaticResource TextEditTextBoxPaddingConverterNumeric}, RelativeSource={RelativeSource TemplatedParent}}" 
                                          Template="{StaticResource EditorListBoxThemeKey_ScrollViewerTemplateNumeric}" UseLayoutRounding="True" dx:FocusHelper2.Focusable="False" />
                            <Rectangle x:Name="rectangle" Fill="Transparent" StrokeThickness="0" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="#00000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextEditThemeKey_TextStyleNumeric" BasedOn="{StaticResource BaseTextStyleNumeric}" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FFFFA400" />
    </Style>

    <ControlTemplate x:Key="TextEditThemeKey_EditTemplateNumeric">
        <TextBox x:Name="PART_Editor" Margin="0" Background="#00000000" CaretBrush="White" Style="{StaticResource TextEditThemeKey_TextStyleNumeric}" />
    </ControlTemplate>

    <ControlTemplate x:Key="TextEditThemeKey_TemplateNumeric" TargetType="dxe:TextEdit">
        <ContentControl x:Name="PART_Root" Template="{TemplateBinding ActualBorderTemplate}" dx:FocusHelper2.Focusable="False">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.9" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter" />
                <dxe:EditorControl x:Name="PART_Content" Grid.Column="1" Template="{TemplateBinding ActualEditorControlTemplate}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="TextEditStyleNumeric" BasedOn="{StaticResource dxe:BaseEditNumeric}" TargetType="dxe:TextEdit">
        <Setter Property="BorderTemplate" Value="{StaticResource TextEditThemeKey_BorderTemplateNumeric}" />
        <Setter Property="EditTemplate" Value="{StaticResource TextEditThemeKey_EditTemplateNumeric}" />
        <Setter Property="Template" Value="{StaticResource TextEditThemeKey_TemplateNumeric}" />
    </Style>

    <!--  Region NumericEditDX  -->
    <Style TargetType="best:NumericEditDX">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="best:NumericEditDX">
                    <Border Height="40" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Storyboard x:Key="x_storyboardkey" x:Name="x_storyboard1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="x_stackPanel1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-35" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="x_textBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-35" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="x_storyboardkey1" x:Name="x_storyboard2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="x_stackPanel1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-35" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="x_textBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-35" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Border.Resources>
                        <StackPanel Width="{TemplateBinding Width}">
                            <StackPanel x:Name="x_stackPanel1">
                                <StackPanel.RenderTransform>
                                    <TranslateTransform />
                                </StackPanel.RenderTransform>
                                <Grid x:Name="x_valueTip" Height="20" HorizontalAlignment="Left">
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="ValidationToolTipTemplate">
                                            <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                <Grid.RenderTransform>
                                                    <TranslateTransform x:Name="xform" X="-25" />
                                                </Grid.RenderTransform>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="OpenStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0" />
                                                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                                                                </Storyboard>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Closed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Open">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" />
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
                                                <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
                                                <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
                                                <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />
                                                <Border Background="#FFDC000C" CornerRadius="2" />
                                                <Border CornerRadius="2">
                                                    <TextBlock MaxWidth="250" Margin="8,4,8,4" Foreground="White" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" UseLayoutRounding="false" />
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="Padding" Value="0" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBox">
                                                        <Grid>
                                                            <Grid.Resources>
                                                                <Style x:Key="comboToggleStyle" TargetType="ToggleButton">
                                                                    <Setter Property="Foreground" Value="#FF333333" />
                                                                    <Setter Property="Background" Value="#FF1F3B53" />
                                                                    <Setter Property="BorderBrush">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                <GradientStop Offset="0" Color="#FFA3AEB9" />
                                                                                <GradientStop Offset="0.375" Color="#FF8399A9" />
                                                                                <GradientStop Offset="0.375" Color="#FF718597" />
                                                                                <GradientStop Offset="1" Color="#FF617584" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="BorderThickness" Value="1" />
                                                                    <Setter Property="Padding" Value="3" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="ToggleButton">
                                                                                <Grid>
                                                                                    <VisualStateManager.VisualStateGroups>
                                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                                            <VisualState x:Name="Normal" />
                                                                                            <VisualState x:Name="MouseOver">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Pressed" />
                                                                                            <VisualState x:Name="Disabled" />
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                                            <VisualState x:Name="Checked">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unchecked" />
                                                                                            <VisualState x:Name="Indeterminate" />
                                                                                        </VisualStateGroup>
                                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                                            <VisualState x:Name="Focused">
                                                                                                <Storyboard>
                                                                                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                                                <Visibility>Visible</Visibility>
                                                                                                            </DiscreteObjectKeyFrame.Value>
                                                                                                        </DiscreteObjectKeyFrame>
                                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                                </Storyboard>
                                                                                            </VisualState>
                                                                                            <VisualState x:Name="Unfocused" />
                                                                                        </VisualStateGroup>
                                                                                    </VisualStateManager.VisualStateGroups>
                                                                                    <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" RadiusX="3" RadiusY="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                                                                                    <Rectangle x:Name="BackgroundGradient" Margin="0" Fill="#5B000000" RadiusX="0" RadiusY="0" Stroke="Transparent" StrokeThickness="0" />
                                                                                    <Rectangle x:Name="Highlight" Margin="{TemplateBinding BorderThickness}" IsHitTestVisible="false" Stroke="#FF14B1FB" StrokeThickness="1" Visibility="Collapsed" />
                                                                                    <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Stroke="#7F14B1FB" StrokeThickness="1" Visibility="Collapsed" />
                                                                                    <Rectangle x:Name="BackgroundOverlay" Stroke="#FF14B1FB" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Grid.Resources>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Collapsed</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnArrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.88" d:IsOptimized="True" />
                                                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.6" d:IsOptimized="True" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Collapsed</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Collapsed</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="FocusedDropDown">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="ValidationStates">
                                                                    <VisualState x:Name="Valid" />
                                                                    <VisualState x:Name="InvalidUnfocused">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="InvalidFocused">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <System:Boolean>True</System:Boolean>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Border x:Name="ContentPresenterBorder">
                                                                <Grid>
                                                                    <ToggleButton x:Name="DropDownToggle" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Right" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource comboToggleStyle}">
                                                                        <Path x:Name="BtnArrow" Width="8" Height="4" Margin="0,0,6,0" HorizontalAlignment="Right" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Uniform">
                                                                            <Path.Fill>
                                                                                <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333" />
                                                                            </Path.Fill>
                                                                        </Path>
                                                                    </ToggleButton>
                                                                    <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" TextBlock.FontWeight="Bold" TextBlock.Foreground="{TemplateBinding Foreground}" />
                                                                </Grid>
                                                            </Border>
                                                            <Rectangle x:Name="DisabledVisualElement" Fill="Black" IsHitTestVisible="false" Opacity="0" />
                                                            <Rectangle x:Name="FocusVisualElement" Margin="1" IsHitTestVisible="false" Opacity="0" RadiusX="2" RadiusY="2" Stroke="#FF6DBDD1" StrokeThickness="1" />
                                                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                                                <ToolTipService.ToolTip>
                                                                    <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                                                        <ToolTip.Triggers>
                                                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <System:Boolean>true</System:Boolean>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </EventTrigger>
                                                                        </ToolTip.Triggers>
                                                                    </ToolTip>
                                                                </ToolTipService.ToolTip>
                                                                <Grid Width="12" Height="12" Margin="1,-4,-4,0" HorizontalAlignment="Right" VerticalAlignment="Top" Background="Transparent">
                                                                    <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" />
                                                                    <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" />
                                                                </Grid>
                                                            </Border>
                                                            <Popup x:Name="Popup" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                                                <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                                                            <GradientStop Offset="1" Color="#FFFEFEFE" />
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                    <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Foreground="Black" Padding="1">
                                                                        <ItemsPresenter />
                                                                    </ScrollViewer>
                                                                </Border>
                                                            </Popup>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <dxe:TextEdit x:Name="x_tipTextBox" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="#00000000" BorderThickness="0" Foreground="#FFFFA801" MaskType="RegEx" 
                                                  MaskUseAsDisplayFormat="True" Padding="1,0" Style="{StaticResource TextEditStyleNumeric}" Text="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource xTextEditDoubleToStringConverter}}" />
                                    <ComboBox x:Name="x_cbbUnits" Grid.Column="1" Foreground="White" ItemContainerStyle="{StaticResource x_DefaultComboBoxItem}" ItemsSource="{Binding}" Padding="2,0" SelectedItem="{Binding Unit, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                                
                                <Slider x:Name="x_slider" Width="{TemplateBinding Width}" Height="18" Margin="1,1,1,0" VerticalAlignment="Top" VerticalContentAlignment="Top" 
                                        Maximum="{Binding MaxValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Minimum="{Binding MinValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        RenderTransformOrigin="0.5,0.5" Style="{StaticResource x_DefaultSliderWithPath}" 
                                        Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </StackPanel>

                            <best:TextEditWithUnit x:Name="x_textBox" Width="{TemplateBinding Width}" Height="26" Margin="0,4,0,4" HorizontalContentAlignment="Right" Foreground="#FFFFA801" MaskType="RegEx" Padding="0" RenderTransformOrigin="0.5,0.5" 
                                                   Text="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource xTextEditDoubleToStringConverter}}" 
                                                   UnitText="{Binding SelectedItem, ElementName=x_cbbUnits}">
                                <best:TextEditWithUnit.RenderTransform>
                                    <TranslateTransform />
                                </best:TextEditWithUnit.RenderTransform>
                            </best:TextEditWithUnit>
                            <!--
                                <best:TextEditWithUnit x:Name="x_textBox" HorizontalContentAlignment="Right" Margin="0,4,0,4" Padding="0" Text="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource xTextEditDoubleToStringConverter}}"
                                UnitText="{Binding Unit, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MaskType="RegEx" Width="{TemplateBinding Width}" Height="26" RenderTransformOrigin="0.5,0.5" Foreground="#FFFFA801" Style="{StaticResource TextEditWithUnitStyleNumeric}">
                                <best:TextEditWithUnit.RenderTransform>
                                <TranslateTransform />
                                </best:TextEditWithUnit.RenderTransform>
                                </best:TextEditWithUnit>
                            -->
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  EndRegion  -->


    <ControlTemplate x:Key="TextEditControlTemplate1" TargetType="{x:Type dxe:TextEdit}">
        <ContentControl x:Name="PART_Root" Focusable="False" dx:FocusHelper2.Focusable="False" Custom:ControlHelper.ShowFocusedState="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" Template="{TemplateBinding ActualBorderTemplate}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter"/>
                <dxe:EditorControl x:Name="PART_Content" Grid.Column="1" Focusable="False" Template="{TemplateBinding ActualEditorControlTemplate}"/>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="BorderTemplate1" TargetType="{x:Type ContentControl}">
        <Grid x:Name="combobox_container" Height="Auto" Width="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusedElement"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FocusedElement" Background="#FF4882D8" CornerRadius="4" Margin="-2" Opacity="0"/>
            <Border x:Name="TextEditBorder" CornerRadius="3" Margin="0" Padding="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1.003" StartPoint="0.5,-0.003">
                        <GradientStop Color="#FF233B6C" Offset="0"/>
                        <GradientStop Color="#FF5C84C1" Offset="1"/>
                        <GradientStop Color="#FF5373AF" Offset="0.178"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Grid Height="Auto" SnapsToDevicePixels="False" Width="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="top_shadow" CornerRadius="2,2,0,0" HorizontalAlignment="Stretch" Height="Auto" Margin="0" Grid.Row="0" SnapsToDevicePixels="True" VerticalAlignment="Stretch">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFCFD7E7" Offset="0"/>
                                <GradientStop Color="#FFE6EAF2" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border x:Name="bottom_fill" CornerRadius="0,0,2,2" Margin="0,-1,0,0" Grid.Row="1" SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0.002">
                                <GradientStop Color="#FFE6EAF2" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border x:Name="content" BorderThickness="0" Background="{x:Null}" CornerRadius="2" Margin="0" Opacity="1" Padding="0" Grid.RowSpan="2">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DisplayTemplate1">
        <TextBlock x:Name="PART_Editor" Focusable="False" dx:FocusHelper2.Focusable="False" Margin="4,2" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}">
				<Custom:EditorMarginCorrector.Corrector>
					<Custom:EditorMarginCorrector ErrorMargin="2,2,4,2" Margin="4,2"/>
				</Custom:EditorMarginCorrector.Corrector>
        </TextBlock>
    </ControlTemplate>

    <ControlTemplate x:Key="EditNonEditableTemplate1">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="EditTemplate1">
        <TextBox x:Name="PART_Editor" Margin="2" Custom:EditorMarginHelper.Margin="2,2,2,2,0,2,2,2" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}">
            <Custom:EditorMarginCorrector.Corrector>
                <Custom:EditorMarginCorrector ErrorMargin="0,2,2,2" Margin="2"/>
            </Custom:EditorMarginCorrector.Corrector>
        </TextBox>
    </ControlTemplate>

    <DataTemplate x:Key="ErrorTooltipContentTemplate1">
        <TextBlock Text="{Binding ErrorContent}"/>
    </DataTemplate>

    <DataTemplate x:Key="TrimmedTextToolTipContentTemplate1">
        <TextBlock Text="{Binding Content}"/>
    </DataTemplate>

</ResourceDictionary>