<UserControl xmlns:Template="clr-namespace:CO_IA.UI.PlanDatabase.Template"
             x:Class="CO_IA.UI.PlanDatabase.Template.TemplateManageModule"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:commonControls="clr-namespace:AT_BC.Common.Controls;assembly=AT_BC.Common"
             xmlns:clientConverter="clr-namespace:CO_IA.Client.Converters;assembly=CO_IA.Client"
             xmlns:extClient="clr-namespace:AT_BC.Client.Extensions.Controls;assembly=AT_BC.Client.Extensions.v5.0"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:client="clr-namespace:CO_IA.Client;assembly=CO_IA.Client"
             xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AT_BC.Common;component/Converters/ConverterTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="BackButton"
                   TargetType="Button">
                <Setter Property="Background"
                        Value="#FF1F3B53" />
                <Setter Property="Foreground"
                        Value="#FF000000" />
                <Setter Property="Padding"
                        Value="3" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9"
                                          Offset="0" />
                            <GradientStop Color="#FF8399A9"
                                          Offset="0.375" />
                            <GradientStop Color="#FF718597"
                                          Offset="0.375" />
                            <GradientStop Color="#FF617584"
                                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 To="0.75"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 To="1"
                                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 Storyboard.TargetName="path" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path x:Name="path"
                                      Data="M0.5,0.5 L41.5,0.5 L41.5,41.5 z"
                                      Stretch="Fill"
                                      StrokeThickness="1"
                                      UseLayoutRounding="False"
                                      Fill="#FF167ADD"
                                      Opacity="0.4" />
                                <Path Data="M23.9319,1.54288 L14.1661,8.83308 L24.0482,16.4087 L22.8334,11.833 C22.8334,11.833 37.0786,8.62608 37.2446,26.8764 C38.9958,9.75108 31.2511,6.04115 23.0001,5.66647 C23.0001,5.66647 23.9319,1.54288 23.9319,1.54288 z"
                                      Fill="White"
                                      Stretch="Fill"
                                      StrokeThickness="1"
                                      UseLayoutRounding="False"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top"
                                      Width="24"
                                      Height="24"
                                      Margin="0,3,3,0" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <clientConverter:ActivityTypeIDToIconConverter x:Key="ActivityTypeIDToIconConverter" />
            <Style x:Key="RadioButtonStyle1"
                   TargetType="{x:Type RadioButton}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2"
                                                   SnapsToDevicePixels="True"
                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                   StrokeThickness="1"
                                                   StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="BorderBrush"
                        Value="#FF707070" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="rectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="rectangle1">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="rectangle2">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="0.995" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="1"
                                           Fill="White"
                                           Stroke="#FFB9B9B9" />
                                <Rectangle x:Name="rectangle"
                                           Grid.ColumnSpan="1"
                                           Fill="#FFD4EBFF"
                                           Stroke="#FF6FBBFF"
                                           Opacity="0" />
                                <Rectangle x:Name="rectangle1"
                                           Grid.ColumnSpan="1"
                                           Fill="#FFB3DCFF"
                                           Stroke="#FF319EFF"
                                           Opacity="0" />
                                <Rectangle x:Name="rectangle2"
                                           StrokeThickness="0"
                                           Fill="#FF5AB1FF"
                                           Opacity="0" />
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Grid.Column="0"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent"
                                         Value="True">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Margin="14,0,0,0"
                                                                       SnapsToDevicePixels="True"
                                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                                       StrokeThickness="1"
                                                                       StrokeDashArray="1 2" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True" />
                                <Trigger Property="IsEnabled"
                                         Value="False" />
                                <Trigger Property="IsPressed"
                                         Value="True" />
                                <Trigger Property="IsChecked"
                                         Value="True" />
                                <Trigger Property="IsChecked"
                                         Value="{x:Null}" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height"
                        Value="24" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="5,2" />
            </Style>
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Border BorderThickness="0,0,2,0"
                Grid.RowSpan="2"
                BorderBrush="{DynamicResource ModuleToolBar.BorderBrush}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="32" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="32" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="65" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Grid.RowSpan="2"
                       x:Name="imageTest"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Source="{Binding ActivityType, Converter={StaticResource ActivityTypeIDToIconConverter}}"
                       Stretch="None">
                    <!--<Image.ToolTip>
                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                            <Image Source="{Binding Source}" />
                        </ToolTip>
                    </Image.ToolTip>-->
                </Image>
                <TextBlock Grid.Column="2"
                           VerticalAlignment="Center"
                           x:Name="textBlockActivityType" />
                <TextBox x:Name="txtActivityName"
                         Text="{Binding Path=Name,Mode=TwoWay}"
                         Grid.Column="2"
                         Grid.Row="1"
                         HorizontalAlignment="Stretch"
                         TextWrapping="Wrap"
                         VerticalAlignment="Center" />
                <TextBlock Text="活动简称："
                           HorizontalAlignment="Center"
                           Grid.Row="2"
                           VerticalAlignment="Center" />
                <TextBox x:Name="txtShortHand"
                         Text="{Binding Path=ShortHand,Mode=TwoWay}"
                         Grid.Row="2"
                         Grid.Column="2"
                         HorizontalAlignment="Stretch"
                         TextWrapping="Wrap"
                         VerticalAlignment="Center" />
                <TextBlock Text="活动地区："
                           Grid.Row="3"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <dxe:ComboBoxEdit Grid.Row="3"
                                  x:Name="comboBoxEditArea"
                                  EditValue="{Binding AreaCode}"
                                  Grid.Column="2"
                                  DisplayMember="Value"
                                  ValueMember="Key"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center" />

                <TextBlock Text="创建人："
                           Grid.Row="4"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <TextBlock  Grid.Row="4"
                            Text="{Binding Path=Creator,Mode=TwoWay}"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center" />
                <TextBlock Text="创建时间："
                           Grid.Row="5"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                <TextBlock Text="{Binding CreateTime, StringFormat={x:Static client:Utility.DateFormatString}}"
                           Grid.Row="5"
                           Grid.Column="2"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Center" />
                <TextBlock Text="活动简介："
                           HorizontalAlignment="Center"
                           Grid.Row="6"
                           VerticalAlignment="Center" />
                <TextBox  AcceptsReturn="True"
                          AcceptsTab="True"
                          Text="{Binding Path=Description,Mode=TwoWay}"
                          Grid.Row="7"
                          Grid.ColumnSpan="3"
                          HorizontalAlignment="Stretch"
                          TextWrapping="Wrap"
                          VerticalAlignment="Stretch" />
                <Button x:Name="buttonSaveActivity"
                        Content="保存"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Width="60"
                        Click="buttonSaveActivity_Click"
                        Grid.Row="8"
                        Grid.Column="2">
                </Button>
            </Grid>
        </Border>
        <Border Grid.Column="1"
                BorderBrush="{DynamicResource ModuleToolBar.BorderBrush}" BorderThickness="0,0,0,1">
            <StackPanel HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        VerticalAlignment="Center">
                <RadioButton Content="组织机构"
                             IsChecked="True"
                             x:Name="radioButtonOrg" Margin="10,0,0,0"
                             Style="{StaticResource RadioButtonStyle1}" />
                <RadioButton Content="活动区域" Margin="10,0,0,0"
                             x:Name="radioButtonLocationEquipment"
                             Style="{StaticResource RadioButtonStyle1}" />
            </StackPanel>
        </Border>
        <Grid Grid.Column="1"
              Grid.Row="1"
              Margin="1"
              Background="White"
              Visibility="{Binding ElementName=radioButtonOrg, Path=IsChecked, Converter={StaticResource nullableBoolToVisibilityConverter}}">
            <Template:OrganizationTemplateControl x:Name="organizationTemplateControl" />
        </Grid>
        <Grid Grid.Column="1"
              Grid.Row="1"
              Margin="1"
              Visibility="{Binding ElementName=radioButtonLocationEquipment, Path=IsChecked, Converter={StaticResource nullableBoolToVisibilityConverter}}"
              Background="White">
            <Template:LocationTemplateControl x:Name="locationTemplate" />
        </Grid>
        <!--<dxwui:FlipView  Grid.Column="1" x:Name="flipView">
            <dxwui:FlipView.Items>
                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Rectangle Fill="Wheat" />
                    <TextBlock VerticalAlignment="Center"
                               FontSize="14"
                               FontWeight="SemiBold"
                               Text="组织机构" Margin="10,0"/>
                    <Template:OrganizationTemplate Grid.Row="1"/>
                </Grid>
                <Template:OrganizationTemplate Background="White"/>
            </dxwui:FlipView.Items>
        </dxwui:FlipView>-->
        <!--<dxdo:DockLayoutManager FloatingMode="Desktop"
                                IsSynchronizedWithCurrentItem="True"
                                x:Name="layoutRoot" Grid.Column="1" Visibility="Collapsed">
            <dxdo:DockLayoutManager.Resources>
                <Style TargetType="dxdo:DocumentPanel">
                    <Setter Property="ClosingBehavior"
                            Value="ImmediatelyRemove" />
                    <Setter Property="AllowClose"
                            Value="False" />
                    <Setter Property="AllowDrag"
                            Value="False" />
                </Style>
            </dxdo:DockLayoutManager.Resources>
            <dxdo:LayoutGroup ItemWidth="3*"
                              DestroyOnClosingChildren="True"
                              AllowFloat="False"
                              x:Name="layoutGroup">
                <dxdo:LayoutGroup.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground"
                                Value="Black" />
                    </Style>
                </dxdo:LayoutGroup.Resources>
                <dxdo:DocumentGroup ClosePageButtonShowMode="NoWhere"
                                    DestroyOnClosingChildren="False"
                                    x:Name="documentGroup"
                                    ShowControlBox="False"
                                    ShowDropDownButton="False"
                                    AllowRestore="False"
                                    ShowRestoreButton="False"
                                    AllowHide="False"
                                    AllowExpand="False">
                    <dxdo:DocumentPanel Caption="组织管理"
                                        x:Name="documentOrg"
                                        AllowActivate="{Binding IsNew, Converter={StaticResource boolReverseConverter}}">
                        <Template:OrganizationTemplate />
                    </dxdo:DocumentPanel>
                    <dxdo:DocumentPanel Caption="地点管理"
                                        x:Name="documentLocation"
                                        AllowActivate="{Binding IsNew, Converter={StaticResource boolReverseConverter}}">
                    </dxdo:DocumentPanel>
                    <dxdo:DocumentPanel Caption="频率预案"
                                        x:Name="documentEquipment"
                                        AllowActivate="{Binding IsNew, Converter={StaticResource boolReverseConverter}}">
                    </dxdo:DocumentPanel>
                </dxdo:DocumentGroup>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>-->

        <Grid Background="White"
              Opacity="0.5"
              Grid.RowSpan="2"
              Grid.Column="1"
              Visibility="{Binding IsNew, Converter={StaticResource boolToVisibilityConverter}}"
              d:IsHidden="True">
        </Grid>
        <Button VerticalAlignment="Top"
                Grid.Column="1"
                Grid.RowSpan="2"
                Style="{StaticResource BackButton}"
                HorizontalAlignment="Right"
                Height="42"
                Width="42"
                Click="buttonGoback_Click"
                d:IsHidden="True" />
    </Grid>
</UserControl>
