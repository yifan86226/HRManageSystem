<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PT_SV_PR.Portable</name>
    </assembly>
    <members>
        <member name="T:PT_BS_Service.Core.BeRestServiceAttribute">
            <summary>
            Rest服务属性,当存在该属性该服务将被标记为Rest服务
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.LogCategoryNames">
            <summary>
            平台提供的特殊常量定义
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.LogCategoryNames.AppServer">
            <summary>
            应用程序服务器
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.PlatformProductInfo">
            <summary>
            平台产品信息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.PlatformFullName">
            <summary>
            平台系统的全称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.PlatformVersion">
            <summary>
            平台版本
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_PlatformManager">
            <summary>
            产品名称-平台管理程序
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_PlatformInit">
            <summary>
            产品名称-平台初始化及维护程序
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_WCFTestServer">
            <summary>
            产品名称-WCF测试服务器
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_BaseServer">
            <summary>
            产品名称-WCF服务器
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_SubsystemRegFileManager">
            <summary>
            产品名称-业务系统注册文件管理工具
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_DeploymentTool">
            <summary>
            产品名称-布署工具集
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_AppserverUpdateCore">
            <summary>
            产品名称-服务器升级控制内核
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.PlatformProductInfo.ProductName_AppserverUpdatePackager">
            <summary>
            产品名称-服务器升级包发布工具
            </summary>
        </member>
        <member name="M:PT.Profile.Definition.PlatformProductInfo.GetProductBuildTime(System.String)">
            <summary>
            获取产品最后编译时间
            </summary>
            <param name="productName">产品名称</param>
            <returns>编译时间</returns>
        </member>
        <member name="T:PT.Profile.Definition.ServerRuntimeClassNames">
            <summary>
            常量值集合-服务器运行时参数分类名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_GDIntegrate">
            <summary>
            平台服务-广东云平台集成
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_Backlog">
            <summary>
            平台服务-日志开关-流程待办
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_Mail">
            <summary>
            平台服务-日志开关-邮件
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_SM">
            <summary>
            平台服务-日志开关-短信
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_WorkItem">
            <summary>
            平台服务-日志开关-工作提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_Org">
            <summary>
            平台服务-日志开关-组织机构
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_News">
            <summary>
            平台服务-日志开关-通知动态
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_MessageDelegate">
            <summary>
            平台服务-日志开关-消息代理
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_LogSwitch_MessageDelegateSend">
            <summary>
            平台服务-日志开关-消息代理发送设置
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.AppFramework">
            <summary>
            应用服务框架
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.AppFramework_Trace_SingleMethodTrace">
            <summary>
            应用服务框架-状态跟踪
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.AppFramework_Trace_SummaryRequest">
            <summary>
            应用服务框架-综合统计
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.AppFramework_PluginService">
            <summary>
            应用服务框架-插件服务
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.AppFramework_ServerMessageHub">
            <summary>
            应用服务框架-通用消息枢纽
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService">
            <summary>
            平台服务
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PolyManage">
            <summary>
            平台服务-策略管理
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.PlatformService_SM">
            <summary>
            平台服务-短信服务
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.MessageDelegate">
            <summary>
            平台服务-消息代理
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.TestCase">
            <summary>
            平台服务-测试用例
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeClassNames.OAExtend">
            <summary>
            OA扩展功能
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.ServerRuntimeVariableNames">
            <summary>
            常量值集合-服务器运行时参数名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_SummaryClientRequest">
            <summary>
            运行时相关参数-服务调用统计开关
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_SingleMehtodTrace">
            <summary>
            应用服务运行时相关参数-开启函数跟踪功能开关
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_Var_SingleMehtodNameTrace">
            <summary>
            应用服务运行时参数-跟踪函数名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_Var_MaxTraceItems">
            <summary>
            应用服务运行时参数-保留调用记录的最大数目
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_SingleMehtodTraceInput">
            <summary>
            应用服务运行时参数-是否记录输入参数
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_Var_SingleMehtodTraceInputDataLevel">
            <summary>
            应用服务运行时参数-输入参数记录层次深度
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_SingleMehtodTraceOutput">
            <summary>
            应用服务运行时参数-是否记录输出结果
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_Var_SingleMehtodTraceOutputDataLevel">
            <summary>
            应用服务运行时参数-输出参数记录层次深度
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_SingleMehtodTraceDBRequest">
            <summary>
            应用服务运行时参数-是否记录数据库封装过程
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_ServerMessageHub_Debug">
            <summary>
            应用服务运行时相关参数-通用消息枢纽-调试类消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_ServerMessageHub_Filing">
            <summary>
            应用服务运行时相关参数-通用消息枢纽-备案类消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_ServerMessageHub_Warn">
            <summary>
            应用服务运行时相关参数-通用消息枢纽-警告类消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_ServerMessageHub_Error">
            <summary>
            应用服务运行时相关参数-通用消息枢纽-错误类消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.RTM_SW_ServerMessageHub_Fatal">
            <summary>
            应用服务运行时相关参数-通用消息枢纽-异常类消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenGDIntegrate">
            <summary>
            平台运行时参数-广东云平台集成日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.ORG_SW_LogWhenChanged">
            <summary>
            平台运行时参数-组织机构变化时是否写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.ORG_SW_LogWhenOrgSyn">
            <summary>
            平台运行时参数-组织机构同步时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenQuery">
            <summary>
            平台运行时参数-待办查询时写跟踪日志文件
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenCountNotify">
            <summary>
            平台运行时参数-待办数量变化收到通知时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenNotify">
            <summary>
            平台运行时参数-待办事项变化收到通知时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_Val_LogWhenNotifyFilter">
            <summary>
            平台运行时参数-待办事项变化收到通知时写日志通知类型
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenDelete">
            <summary>
            平台运行时参数-个人待办事项删除时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenUpdate">
            <summary>
            平台运行时参数-个人待办事项变更时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenCreate">
            <summary>
            平台运行时参数-个人待办事项创建时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.BACKLOG_SW_LogWhenSendMessage">
            <summary>
            平台运行时参数-待办事项发送Jabber消息时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.WORKITEM_SW_LogWhenCreate">
            <summary>
            平台运行时参数-工作提醒创建是否写跟踪日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.WORKITEM_SW_LogWhenDelete">
            <summary>
            平台运行时参数-工作提醒创建是否写跟踪日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.WORKITEM_SW_LogWhenSendMessage">
            <summary>
            平台运行时参数-工作提醒推送消息时是否写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.SM_SW_LogWhenSendSM">
            <summary>
            平台运行时参数-短信发送时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.SM_SW_LogWhenReceiveSM">
            <summary>
            平台运行时参数-短信回执时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.News_SW_LogWhenNotify">
            <summary>
            平台运行时参数-动态事务通知时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.News_SW_LogWhenCountNotify">
            <summary>
            平台运行时参数-动态事务数量通知时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.News_SW_LogWhenDelete">
            <summary>
            平台运行时参数-动态事务删除时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.News_SW_LogWhenSendMessage">
            <summary>
            平台运行时参数-动态事务推送消息时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.Mail_SW_LogWhenUnReadNotify">
            <summary>
            平台运行时参数-邮件未读状态变化时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_SW_LogWhenSendMessage">
            <summary>
            平台运行时参数-发送消息时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_SW_AllowSendMessage">
            <summary>
            平台运行时参数-允许平台转发消息
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_SW_LogWhenReceivedMessage">
            <summary>
            平台运行时参数-收到消息时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_SW_LogWhenConnectStatusChanged">
            <summary>
            平台运行时参数-连接状态变化时写日志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_Var_ReplaceTargetUserIdWhenSend">
            <summary>
            平台运行时参数-消息代理-替换目标用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_Var_FilterTargetUserIdWhenLog">
            <summary>
            平台运行时参数-消息代理-过滤目标用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServerRuntimeVariableNames.MD_SW_AllowSendMessageWhenOffline">
            <summary>
            平台运行时参数-离线用户也发消息
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.SubsystemIds">
            <summary>
            业务系统ID集合
            </summary>
        </member>
        <member name="T:PT.Profile.Interface.IOrganization">
            <summary>
            组织机构接口-扩展部门属性
            </summary>
            <summary>
            组织机构接口
            </summary>
            <summary>
            组织机构接口-扩展用户属性
            </summary>
            <summary>
            在线统计接口
            </summary>
            <summary>
            组织机构接口
            </summary>
            <summary>
            组织机构接口
            </summary>
            <summary>
            组织机构接口
            </summary>
            <summary>
            组织机构接口
            </summary>
            <summary>
            组织机构接口
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.CreateDeptPropertyCategory(PT.Profile.Types.DeptPropertyCategory)">
            <summary>
            创建部门属性分类
            </summary>
            <param name="dpc">部门属性分类</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.DeleteDeptPropertyCategory(System.String)">
            <summary>
            删除部门属性分类
            </summary>
            <param name="categoryName">分类名称</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.UpdateDeptPropertyCategory(PT.Profile.Types.DeptPropertyCategory)">
            <summary>
            更新部门属性分类,更新除分类名称外的字段
            </summary>
            <param name="dpc">部门属性分类</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptPropertyCategories">
            <summary>
            获取所有部门属性分类列表
            </summary>
            <returns>部门属性分类列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.SetDeptProperty(PT.Profile.Types.DeptProperty)">
            <summary>
            更新或创建部门属性值
            </summary>
            <param name="dp">部门属性</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptProperties">
            <summary>
            获取所有部门属性列表
            </summary>
            <returns>部门属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptPropertiesByCategoryName(System.String)">
            <summary>
            根据分类获取该分类的部门属性列表
            </summary>
            <param name="categoryName">部门属性分类名称</param>
            <returns>部门属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptPropertiesByDeptId(System.String)">
            <summary>
            根据部门Id获取属性列表
            </summary>
            <param name="deptId">部门Id</param>
            <returns>部门属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptProperty(System.String,System.String)">
            <summary>
            获取部门扩展属性
            </summary>
            <param name="categoryName">部门扩展属性分类名称</param>
            <param name="deptId">部门Id</param>
            <returns>部门扩展属性值</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptInfosByDeptProperty(System.String,System.String)">
            <summary>
            根据部门扩展属性分类 + 部门扩展属性值过滤得到符合条件部门信息列表
            </summary>
            <param name="categoryName">用于过滤的部门属性分类名称</param>
            <param name="propertyValue">用于过滤的部门属性值</param>
            <returns>部门信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetLeaderRelations">
            <summary>
            所有用户的直接上级关系对照列表（泛微使用）
            </summary>
            <returns>上级关系对照列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.Relation_GetSuperiorByNameAndUserId(System.String,System.String)">
            <summary>
            根据用户id获取某个关系的上级用户信息
            </summary>
            <param name="relationName">关系名称</param>
            <param name="userId">用户id</param>
            <returns>关系的上级用户信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.Relation_SetSuperior(System.String,System.String,System.String)">
            <summary>
            设置用户某个关系的上级领导
            </summary>
            <param name="relationName">关系名称</param>
            <param name="userId">用户id</param>
            <param name="superiorUserId">上级用户id,传递空则设置为无上级</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.Relation_GetAllRelations">
            <summary>
            获取所有关联关系信息
            </summary>
            <returns>关系关联信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.Relation_GetRelationsByName(System.String)">
            <summary>
            获取某个关系名称对应的所有关联信息
            </summary>
            <returns>关联关系信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.Relation_UpdateOldRelations">
            <summary>
            升级旧的人员关系
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.CreateUserPropertyCategory(PT.Profile.Types.UserPropertyCategory)">
            <summary>
            创建用户属性分类
            </summary>
            <param name="upc">用户属性分类</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.DeleteUserPropertyCategory(System.String)">
            <summary>
            删除用户属性分类
            </summary>
            <param name="categoryName">分类名称</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.UpdateUserPropertyCategory(PT.Profile.Types.UserPropertyCategory)">
            <summary>
            更新用户属性分类,更新除分类名称外的字段
            </summary>
            <param name="upc">用户属性分类</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserPropertyCategories">
            <summary>
            获取所有用户属性分类列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.SetUserProperty(PT.Profile.Types.UserProperty)">
            <summary>
            更新用户属性值
            </summary>
            <param name="up">用户属性</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserProperties">
            <summary>
            获取所有用户属性列表
            </summary>
            <returns>用户属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserPropertiesByCategoryName(System.String)">
            <summary>
            根据分类获取该分类的用户属性列表
            </summary>
            <param name="categoryName">用户属性分类名称</param>
            <returns>用户属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserPropertiesByUserId(System.String)">
            <summary>
            根据用户Id获取属性列表
            </summary>
            <param name="userId">用户Id</param>
            <returns>用户属性列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserProperty(System.String,System.String)">
            <summary>
            获取用户扩展属性
            </summary>
            <param name="categoryName">用户属性分类名称</param>
            <param name="userId">用户Id</param>
            <returns>用户属性</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserInfosByUserProperty(System.String,System.String)">
            <summary>
            根据用户属性分类 + 用户扩展属性值过滤得到符合条件用户信息列表
            </summary>
            <param name="categoryName">用于过滤的用户属性分类名称</param>
            <param name="propertyValue">用于过滤的用户属性值</param>
            <returns>用户信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserOnlines">
            <summary>
            获取所有人员当前登录信息(只取最后一次登录)
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserOnlineTimes(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取参数指定人员,指定时间段的登录信息
            </summary>
            <param name="userId">用户标识</param>
            <param name="fromDate">查询起始日期</param>
            <param name="toDate">查询终止日期</param>
            <returns>指定时间段内的用户登录信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserUnReadMailStatus(System.String)">
            <summary>
            根据用户id获取用户是否有未读邮件信息
            </summary>
            <param name="userID">用户id</param>
            <returns>是否有未读邮件信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.SetUserUnReadMailStatus(System.String,System.Boolean)">
            <summary>
            根据用户id设置用户是否有未读邮件信息
            </summary>
            <param name="userID">用户id</param>
            <param name="mailStatus">是否有未读邮件信息</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeployedProvinceAreaCode">
            <summary>
            获取当前所部署的省级行政区代码
            </summary>
            <returns>4位省级行政区代码</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.CreateDept(PT.Profile.Types.DeptInfo)">
            <summary>
            建立新部门，将指定的DeptInfo增加到数据库中。
            </summary>
            <param name="deptInfo">要增加到数据库中的DeptInfo。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.UpdateDept(PT.Profile.Types.DeptInfo)">
            <summary>
            修改部门信息，对指定的DeptInfo数据进行修改。不修改部门标识、显示顺序。
            </summary>
            <param name="deptInfo">要修改的DeptInfo。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.DeleteDept(System.String)">
            <summary>
            删除指定部门。部门的下属部门及部门内的人员关系一起删除。
            </summary>
            <param name="deptID">删除部门的部门标识。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptInfosByParentDeptID(System.String,System.Boolean)">
            <summary>
            获取指定部门的下属部门信息。
            </summary>
            <param name="parentDeptID">部门标识。PT.Profile.Definition.SpecialIDs.DeptRootID是根部门标识。</param>
            <param name="descendantDept">是否第归获取多层子部门。</param>
            <returns>部门信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptInfos">
            <summary>
            获取所有部门信息。
            </summary>
            <returns>部门信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptInfo(System.String)">
            <summary>
            获取指定部门的部门信息。
            </summary>
            <param name="deptID">部门标识。</param>
            <returns>部门信息或Null。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetRelativeParentDeptInfos(System.String)">
            <summary>
            获取指定部门的部门信息及关联的所有上级部门信息。
            </summary>
            <param name="deptID">部门标识。</param>
            <returns>部门信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDuties">
            <summary>
            获取组织机构中曾经录入过的职务列表。
            </summary>
            <returns>部门职务列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptMembersByDeptID(System.String,System.Boolean)">
            <summary>
            获取指定部门下的全部部门成员信息。
            </summary>
            <param name="deptID">部门标识。</param>
            <param name="descendantDept">是否第归获取多层子部门下的用户。</param>
            <returns>部门成员信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptMembers">
            <summary>
            获取全部部门成员信息。
            </summary>
            <returns>部门成员信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetDeptMemberByUserID(System.String)">
            <summary>
            获取指定用户关联的部门成员信息。
            </summary>
            <param name="userID">用户标识。</param>
            <returns>部门成员信息或Null。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.CreateDeptMember(PT.Profile.Types.DeptMember)">
            <summary>
            向部门分配用户及设置用户在部门内的职务、身份等。
            </summary>
            <param name="deptMember">向部门分配的用户信息。</param>
            <returns>如果向部门分配用户成功返回值为1；否则为0。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.UpdateDeptMember(PT.Profile.Types.DeptMember)">
            <summary>
            调整用户在部门内的部门成员信息。例如，调整职务。
            </summary>
            <param name="deptMember">用户信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.DeleteDeptMember(PT.Profile.Types.DeptMember)">
            <summary>
            将部门成员从部门中移除。
            </summary>
            <param name="deptMember">移除的部门成员信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.WeaverGetOrgChangedFlag(System.Int32)">
            <summary>
            获取组织机构变化标记 。
            </summary>
            <param name="orgType">指定要查询哪种组织机构对象变化了。0:部门,1:用户,2:部门成员</param>
            <returns>true:对应组织机构类型有改变,false:对应组织机构类型无改变</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.WeaverSetOrgChangedFlag(System.Int32)">
            <summary>
            设置组织机构变化标记为false 。
            </summary>
            <param name="orgType">指定要设置哪种组织机构对象变化标记为false。0:部门,1:用户,2:部门成员</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetPlatformUserIDViaWeaverUserID(System.Int32)">
            <summary>
            根据OA用户ID获取平台用户ID。
            </summary>
            <param name="oaUserID">oa用户ID</param>
            <returns>平台用户ID</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUser(System.String)">
            <summary>
            根据用户id获取用户信息
            </summary>
            <param name="userID">用户id</param>
            <returns>用户信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserJIDMaps(PT.Toolkit.Portable.Collections.StringList)">
            <summary>
            根据用户id获取用户JID映射信息
            </summary>
            <param name="userIds">用户id列表</param>
            <returns>用户JID列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserBySafePlatformCode(System.String)">
            <summary>
            根据安全平台用户代码获取用户信息
            </summary>
            <param name="AAAACode">安全平台用户代码</param>
            <returns>用户信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUsers">
            <summary>
            获取组织机构中的所有用户
            </summary>
            <returns>用户信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.FilterUsers(PT.Toolkit.Portable.ProtoParamList,System.String)">
            <summary>
            使用表达式过滤用户并返回结果
            </summary>
            <param name="dynamicParams">需要动态提供的参数信息,例如:表达式包含审批上级判断,则动态参数需提供CurrentUserId的值</param>
            <param name="polyExp">策略表达式</param>
            <returns>符合条件的用户信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetUserPicture(System.String)">
            <summary>
            获取指定用户的照片。
            </summary>
            <param name="userID">用户的用户标识。</param>
            <returns>如果获取成功返回用户照片信息；否则返回Null。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.UpdateUser(PT.Profile.Types.UserInfo)">
            <summary>
            修改用户信息，对指定的UserInfo数据进行修改。
            </summary>
            <param name="userInfo">要修改的UserInfo。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.CreateUserAndDeptMember(PT.Profile.Types.UserInfo,PT.Profile.Types.DeptMember)">
            <summary>
            创建用户并添加到部门
            </summary>
            <param name="userInfo">创建用户</param>
            <param name="deptMember">部门成员信息</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.DeleteUser(System.String)">
            <summary>
            删除用户
            </summary>
            <param name="userId">userId</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.ChangeUserPassword(System.String,System.String)">
            <summary>
            修改用户密码，对指定用户修改密码。
            </summary>
            <param name="userID">用户的用户标识。</param>
            <param name="password">修改后的密码。密码不能为Null或者String.Empty。</param>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetEducations">
            <summary>
            获取学历列表。
            </summary>
            <returns>学历列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.GetPersonalConfig(System.String,System.String)">
            <summary>
            获取个人配置
            </summary>
            <param name="userID">用户ID</param>
            <param name="categoryName">配置分类名称，此名称自定义</param>
            <returns>配置信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.IOrganization.SavePersonalConfig(System.String,System.String,System.String)">
            <summary>
            保存个人配置
            </summary>
            <param name="userID">用户ID</param>
            <param name="categoryName">配置分类名称，此名称自定义</param>
            <param name="configContent">配置信息</param>
        </member>
        <member name="T:PT.Profile.Interface.IPlatformMessage">
            <summary>
            门户组件按标签页查看是否已读状态接口
            </summary>
            <summary>
            综合业务接口,广东综合跳转接口
            </summary>
            <summary>
            综合业务接口,待办事项,消息处理,jabber消息推送封装
            </summary>
            <summary>
            综合业务接口,待办事项,消息处理,jabber消息推送封装
            </summary>
            <summary>
            综合业务接口,待办事项,消息处理,jabber消息推送封装
            </summary>
            <summary>
            短信服务封装
            </summary>
            <summary>
            综合业务接口,待办事项,消息处理,jabber消息推送封装
            </summary>
            <summary>
            综合业务接口,待办事项,消息处理,jabber消息推送封装
            </summary>
            <summary>
            短信服务封装
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.GetAllUnReadMessageAcceptInfos(System.String)">
            <summary>
            获取某用户所有组件未读状态信息列表
            </summary>
            <param name="UserId">用户Id</param>
            <returns>符合条件的未读状态列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.CompleteUnReadMessageAcceptInfo(System.String,PT.Profile.Types.MessageAcception)">
            <summary>
            完成某个用户+某个组件+组件栏目分类标识的一项未查看信息，将其设置为已查看状态
            </summary>
            <param name="UserId">平台UserId</param>
            <param name="messageAcception">组件查看信息</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.GetComplexJumpUrl(System.String,System.String,System.String)">
            <summary>
            获取综合跳转项的实际跳转地址
            </summary>
            <param name="ItemId">跳转项Id</param>
            <param name="ItemType">工作暂存，通知公告，流程待办</param>
            <returns>实际跳转地址,返回空串或null说明匹配失败</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WaverNewsNotify(PT.Profile.Types.NewsNotify)">
            <summary>
            即时消息接口
            </summary>
            <param name="nn">即时通知内容</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WaverUnReadNewsCountNotify(System.String,System.Int32)">
            <summary>
            未读通知公告数量变化通知接口
            </summary>
            <param name="userGuid">.OA用户Id</param>
            <param name="unReadNewsCount">未读通知和公告数量</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WaverNewsDeleteNotify(System.String)">
            <summary>
            即时消息通知删除回调接口
            </summary>
            <param name="newsID">即时通知ID</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryNewsItems(PT.Profile.Types.NewsItemQueryCondition)">
            <summary>
            查询符合条件的新闻动态
            </summary>
            <param name="nqc">查询条件</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.StickNewsItem(System.String,System.Boolean)">
            <summary>
            设置动态通知项的置顶标记
            </summary>
            <param name="itemId">通知项Id</param>
            <param name="setTop">是否置顶</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.GetUnReadNewsCount(System.String)">
            <summary>
            未读通知公告数量获取
            </summary>
            <param name="userGuid">用户Guid</param>
            <returns>未读通知公告数数量</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.CreateWorkItem(PT.Profile.Types.WorkItem)">
            <summary>
            创建一项工作提醒
            </summary>
            <param name="workItem">工作提醒</param>
            <returns>创建的工作提醒ID</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.CompleteWorkItem(System.String)">
            <summary>
            完成一项工作提醒，设置工作提醒状态为已办结
            </summary>
            <param name="itemID">工作提醒ID</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.UpdateWorkItem(PT.Profile.Types.WorkItem)">
            <summary>
            更新一项工作提醒，设置更新工作提醒的标题和入口页面，工作提醒项Id必须是已存在的，更新范围只包括工作提醒的标题和入口页面
            </summary>
            <param name="workItem">工作提醒信息</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.SetWorkItemNotifiedStatus(System.String,System.String)">
            <summary>
            设置某个用户的某个工作提醒项的已提醒标记
            </summary>
            <param name="itemID">工作提醒项Id</param>
            <param name="userId">用户Id</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.DeleteWorkItem(System.String)">
            <summary>
            删除一项工作提醒，删除后不可恢复
            </summary>
            <param name="itemID">工作提醒ID</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryWorkItemsPortal(System.String,System.DateTime,System.DateTime)">
            <summary>
            门户查询符合条件的工作提醒
            </summary>
            <param name="pUserID">用户JID</param>
            <param name="pStartTime">开始时间</param>
            <param name="pStopTime">截止时间</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryWorkItems(PT.Profile.Types.WorkItemQueryCondition)">
            <summary>
            根据条件查询工作提醒项
            </summary>
            <param name="wqc">工作提醒查询条件</param>
            <returns>符合条件工作提醒项列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.SendJabberMessage(System.String,System.String,System.String)">
            <summary>
            向Jabber服务器发送消息
            </summary>
            <param name="pTargetAppId">应用ID</param>
            <param name="pToUserId">目标用户ID</param>
            <param name="pData">传输的消息对象Json字符串或其他字符串格式数据（如：XML字符串）,json类型的字符串，可以使用 Newtonsoft.Json.dll 的 JsonConvert.SerializeObject(.net对象) 来生成。</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.SendJabberMessageUsingPoly(System.String,System.String,System.String)">
            <summary>
            通过策略决定接受者并向Jabber服务器发送消息
            </summary>
            <param name="pTargetAppId">应用ID</param>
            <param name="receiverPoly">目标用户选择策略表达式</param>
            <param name="pData">传输的消息对象Json字符串或其他字符串格式数据（如：XML字符串）,json类型的字符串，可以使用 Newtonsoft.Json.dll 的 JsonConvert.SerializeObject(.net对象) 来生成。</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.SendSMViaPhone(PT.Profile.Types.SMSendInfoViaPhone)">
            <summary>
            通过接收者号码发送短信
            0	发送短信成功
            -1	发送失败
            -2	参数不能为空
            -3	用户无效
            -500	服务器异常
            </summary>
            <param name="smsInfoPhone">短信信息</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.SendSMViaIdentity(PT.Profile.Types.SMSendInfoViaIdentity)">
            <summary>
            通过接收者身份发送短信
            </summary>
            <param name="smsInfoIdentity">短信信息</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.OnReceiveSM(PT.Profile.Types.SMReceiveInfo)">
            <summary>
            短信接收通知
            </summary>
            <param name="smReceiveInfo">短信接收内容</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WaverBacklogItemNotify(PT.Profile.Types.BacklogItemNotify)">
            <summary>
            工作流待办事项通知接口
            </summary>
            <param name="bn">待办事项内容</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WaverBacklogItemCountNotify(System.String,System.Int32)">
            <summary>
            工作流待办事项数量通知接口
            </summary>
            <param name="userGuid">字符串的OA UserId</param>
            <param name="todoWorkCount">待办数量</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryBacklogItems(PT.Profile.Types.BacklogItemQueryCondition)">
            <summary>
            查询符合条件的待办或已办信息
            </summary>
            <param name="bqc">查询条件</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryNoticeBacklogItems(PT.Profile.Types.BacklogItemQueryCondition)">
            <summary>
            查询符合条件的通知流程信息
            </summary>
            <param name="bqc">查询条件</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.QueryTodoBacklogsCount(System.String)">
            <summary>
            查询待办信息数量
            </summary>
            <param name="userGuid">平台用户Guid</param>
            <returns>待办数量</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.CreateWorkflow(PT.Profile.Types.WorkflowInfo,System.String)">
            <summary>
            创建流程
            </summary>
            <param name="workflowInfo">流程信息</param>
            <param name="userID">平台用户ID</param>
            <returns>流程ID</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.CreateBacklogItem(PT.Profile.Types.BacklogItemTable,System.Int32)">
            <summary>
            创建待办事项
            </summary>
            <param name="backlogItemTable">待办事项</param>
            <param name="IsRemind">创建后是否在门户提醒 0:不提醒 1:提醒 2:不提醒创建人,提醒其他人</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.DeleteBacklogItem(System.String,System.Int32)">
            <summary>
            删除待办事项
            </summary>
            <param name="backlogItemId">待办事项Id</param>
            <param name="IsRemind">删除后是否在门户提醒 0:不提醒 1:提醒 2:不提醒创建人,提醒其他人</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.UpdateBacklogItem(PT.Profile.Types.BacklogItemTable,System.Int32)">
            <summary>
            更新待办事项,更新内容包括发起者:SenderID,标题:ThemeMain,描述:ItemHint,状态:ItemStatus,更新时间:LaunchDate,结束时间:DealDate
            </summary>
            <param name="backlogItemTable">待办工作</param>
            <param name="IsRemind">修改后是否在门户提醒 0:不提醒 1:提醒 2:不提醒创建人,提醒其他人</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.GetBacklogItem(System.String)">
            <summary>
            获取待办事项
            </summary>
            <param name="backlogItemId">待办工作Id</param>
            <returns>待办事项</returns>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.ChangeWorkflowItemTitle(System.String,System.String,System.String)">
            <summary>
            更新流程待办事项标题
            </summary>
            <param name="requestId">流程实例Id</param>
            <param name="title">新标题</param>
            <param name="userId">基础平台用户Id</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.WeaverUnReadMailNotify(System.String,System.Int32)">
            <summary>
            未读邮件通知
            </summary>
            <param name="userGuid">接收邮件用户Guid</param>
            <param name="unReadMailsCount">未读邮件数量</param>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformMessage.GetUnReadMailsCount(System.String)">
            <summary>
            未读邮件数量获取
            </summary>
            <param name="userGuid">用户Guid</param>
            <returns>未读邮件数量</returns>
        </member>
        <member name="T:PT.Profile.Interface.ISubsystem">
            <summary>
            业务系统资源管理接口-网盘文件,即时文件传输,群共享文件,个人网盘
            </summary>
            <summary>
            业务系统资源管理接口-网盘文件夹,即时文件传输,群共享文件,个人网盘
            </summary>
            <summary>
            子系统服务接口-运行时管理服务注册相关
            </summary>
            <summary>
            子系统服务接口-调试功能调用
            </summary>
            <summary>
            子系统服务接口-策略管理服务注册相关
            </summary>
            <summary>
            业务系统资源管理接口-网盘文件,即时文件传输,群共享文件,个人网盘
            </summary>
            <summary>
            业务系统资源管理接口-传输事务管理
            </summary>
            <summary>
            子系统服务接口-门户菜单相关
            </summary>
            <summary>
            子系统服务接口-参数分类相关
            </summary>
            <summary>
            系统资源服务接口-文档相关
            </summary>
            <summary>
            业务系统资源管理接口
            </summary>
            <summary>
            子系统服务接口-权限相关
            </summary>
            <summary>
            子系统服务接口-业务分类相关
            </summary>
            <summary>
            子系统服务接口-物理机部署类相关
            </summary>
            <summary>
            子系统服务接口-参数相关
            </summary>
            <summary>
            子系统服务接口-参数分类相关
            </summary>
            <summary>
            子系统服务接口-服务相关
            </summary>
            <summary>
            子系统服务接口-服务部署类相关
            </summary>
            <summary>
            子系统服务接口-服务部署文件类相关
            </summary>
            <summary>
            子系统服务接口-模块相关
            </summary>
            <summary>
            子系统服务接口-子系统部署类相关
            </summary>
            <summary>
            系统资源服务接口-文档相关
            </summary>
            <summary>
            系统资源服务接口-文档相关
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateNetFolder(PT.Profile.Types.NetDisk.CreateNetFolderArg)">
            <summary>
            创建网盘文件夹
            </summary>
            <param name="createNetFolderArg">文件夹创建参数</param>
            <returns>如果成功,结果类中StringResult包含文件夹标识</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteNetFolder(PT.Profile.Types.NetDisk.DeleteNetFolderArg)">
            <summary>
            删除网盘文件夹
            </summary>
            <param name="deleteNetFolderArg">删除网盘文件夹参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.RenameNetFolder(PT.Profile.Types.NetDisk.RenameNetFolderArg)">
            <summary>
            网盘文件夹改名
            </summary>
            <param name="renameNetFolderArg">网盘文件夹重命名参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetNetFolders(PT.Profile.Types.NetDisk.GetNetFoldersArg)">
            <summary>
            获取指定文件夹下的子文件夹列表
            </summary>
            <param name="getNetFoldersArg">检索条件</param>
            <returns>如果成功,结果类中包含子文件夹列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.RuntimeManage_RegisterRuntimeAppServer(PT.Profile.Types.RuntimeAppServer)">
            <summary>
            注册或更新某个应用程序服务器运行时管理服务的信息
            </summary>
            <param name="rms">运行时应用程序服务器信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.RuntimeManage_GetRuntimeAppServers">
            <summary>
            获取运行时应用程序服务器信息
            </summary>
            <returns>运行时应用程序服务器的信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CallDebugFunction(System.String,System.String,System.String,System.Byte[])">
            <summary>
            调试功能调用
            </summary>
            <param name="funcName">功能名称</param>
            <param name="funcParams1">参数1</param>
            <param name="funcParams2">参数2</param>
            <param name="binData">二进制数据</param>
            <returns>调用结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CheckBusinessTablePoly(System.String)">
            <summary>
            检查有关业务表的策略表达式有效情况
            </summary>
            <param name="tableName">表名称</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateNetFile(PT.Profile.Types.NetDisk.CreateNetFileArg)">
            <summary>
            创建网盘文件
            </summary>
            <param name="createNetFileArg">文件创建参数</param>
            <returns>如果成功则返回结果StringResult中包含有效文件标识</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UploadNetFileContent(PT.Profile.Types.NetDisk.UploadNetFileContentArg)">
            <summary>
            上传网盘文件数据
            </summary>
            <param name="uploadNetFileContentArg">网盘文件数据上传参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CompleteUploadNetFileContent(PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg)">
            <summary>
            完成上传网盘文件数据
            </summary>
            <param name="completeUploadNetFileContentArg">完成上传网盘文件数据参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DownloadNetFileContent(PT.Profile.Types.NetDisk.DownloadNetFileContentArg)">
            <summary>
            下载网盘文件数据
            </summary>
            <param name="downloadNetFileContentArg">下载网盘文件数据参数</param>
            <returns>如果调用成功,则结果中包含数据内容</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteNetFile(PT.Profile.Types.NetDisk.DeleteNetFileArg)">
            <summary>
            删除网盘文件
            </summary>
            <param name="deleteNetFileArg">删除网盘文件参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.RenameNetFile(PT.Profile.Types.NetDisk.RenameNetFileArg)">
            <summary>
            网盘文件改名
            </summary>
            <param name="renameNetFileArg">网盘文件重命名参数</param>
            <returns>操作结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetNetFiles(PT.Profile.Types.NetDisk.GetNetFilesArg)">
            <summary>
            获取网盘文件夹下的文件列表
            </summary>
            <param name="getNetFilesArg">检索条件</param>
            <returns>如果调用成功,返回结果中包含子文件列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateOnlineNetTransfer(PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg)">
            <summary>
            发送方创建在线文件上传事务并获得一个事务Id
            </summary>
            <param name="arg">在线文件上传事务创建参数</param>
            <returns>如果成功则返回结果StringResult中包含有效事务标识</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.ResponseOnlineNetTransfer(System.String,System.Boolean)">
            <summary>
            回应发送方的在线文件传输事务(接收或拒绝)
            </summary>
            <param name="transferId">传输事务Id</param>
            <param name="agree">是否同意接收</param>
            <returns>服务返回结果标记调用是否成功</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetCreateOnlineNetTransferArg(System.String)">
            <summary>
            接收方收到在线文件传输消息后获取参数
            </summary>
            <param name="transferId">传输事务Id</param>
            <returns>返回创建参数或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.QueryOnlineNetTransferState(System.String)">
            <summary>
            获取传输事务当前状态
            </summary>
            <param name="transferId"></param>
            <returns>成功则结果的Int64Result包含当前事务场景状态 -1:无效 0:初始 1:收发进行中 2:传输结束 3:发送方取消 4:接收方取消 5:其他错误，
            StringResult包含收发状态 0:无命令，等待发送方操作  1:有命令，等待接收方操作 </returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.ReceiveOnlineNetTransferData(System.String)">
            <summary>
            获取发送方存放在缓冲区的一帧数据，获取后服务端缓冲收发状态不会自动变化，需调用一次SetOnlineNetTransferState进行更改
            </summary>
            <param name="transferId"></param>
            <returns>成功则结果的BinaryResult包含传输数据，
            Int64Result包含本次操作命令1:缓冲区有文件数据 2:创建文件 3:关闭文件 4:创建文件夹
            StringResult包含传输对象名称</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.SendOnlineNetTransferData(System.String,PT.Profile.Types.InvokeArg)">
            <summary>
            发送方向缓冲区存放一帧数据(最大512k=524288)，发送后服务端缓冲收发状态不会自动变化，需调用一次SetOnlineNetTransferState进行更改
            </summary>
            <param name="transferId">事务Id</param>
            <param name="arg">arg的BinaryValue包含传输数据，
            Int64Value包含本次操作命令1:向缓冲区写文件数据 2:创建文件 3:关闭文件 4:创建文件夹
            StringValue包含传输对象名称</param>
            <returns>发送结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.SetOnlineNetTransferState(PT.Profile.Types.InvokeArg)">
            <summary>
            发送方或接收方设置事务的收发状态（收发间隙调用，目的是防止收发双方并发访问缓冲）
            </summary>
            <param name="arg">arg的StringValue包含事务Id,Int64Value包含要改变成的事务收发状态</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CompleteOnlineNetTransfer(System.String)">
            <summary>
            发送方完成在线文件传输事务
            </summary>
            <param name="transferId">传输事务Id</param>
            <returns>服务返回结果标记调用是否成功</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CancelOnlineNetTransfer(System.String,System.String)">
            <summary>
            任意时刻双方都可取消本次事务
            </summary>
            <param name="transferId">传输事务Id</param>
            <param name="userId">取消操作的用户Id</param>
            <returns>服务返回结果标记调用是否成功</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreatePortalMenu(PT.Profile.Types.PortalMenu)">
            <summary>
            建立一个门户菜单
            </summary>
            <param name="portalMenu">门户菜单</param>
            <returns>执行成功则InvokeResult.Status=1,并且InvokeResult.StringResult包含创建的菜单Id
            否则InvokeResult.ExternMessage存放错误信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeletePortalMenu(System.String)">
            <summary>
            删除一个门户菜单
            </summary>
            <param name="menuId">门户菜单Id</param>
            <returns>执行成功则InvokeResult.Status=1,否则InvokeResult.ExternMessage存放错误信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdatePortalMenu(PT.Profile.Types.PortalMenu)">
            <summary>
            更新一个门户菜单
            </summary>
            <param name="portalMenu">门户菜单</param>
            <returns>执行成功则InvokeResult.Status=1,否则InvokeResult.ExternMessage存放错误信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetAllPortalMenus">
            <summary>
            获取所有门户菜单列表
            </summary>
            <returns>门户菜单列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsablePortalMenus(System.String)">
            <summary>
            获取某个用户可用的门户菜单列表
            </summary>
            <param name="userId">用户Id</param>
            <returns>门户菜单列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetPlatformConfigParam(System.String)">
            <summary>
            获取平台配置参数
            </summary>
            <param name="paramName">参数名称</param>
            <returns>平台配置参数值</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.SavePlatformConfigParam(System.String,System.String)">
            <summary>
            保存平台配置参数
            </summary>
            <param name="paramName">配置参数名称</param>
            <param name="paramValue">配置参数值</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GlobalSearchOADocs(PT.Profile.Types.GlobalSearchDocCondition)">
            <summary>
            根据关键字搜索文档标题信息
            </summary>
            <param name="searchCondition">文档检索条件</param>
            <returns>文档列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GlobalSearchOAMails(PT.Profile.Types.GlobalSearchMailCondition)">
            <summary>
            根据关键字搜索邮件标题信息
            </summary>
            <param name="searchCondition">邮件检索条件</param>
            <returns>邮件列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GlobalSearchOAWorkflows(PT.Profile.Types.GlobalSearchWorkflowCondition)">
            <summary>
            根据关键字搜索流程标题信息
            </summary>
            <param name="searchCondition">流程检索条件</param>
            <returns>流程列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.ImportSubsystem(System.String)">
            <summary>
            从大字符串导入或更新一个子系统信息
            </summary>
            <param name="subsystemXml">xml格式的系统信息</param>
            <returns>创建后的子系统信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.ExportSubsystem(System.String,System.String)">
            <summary>
            导出一个系统资源注册信息
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <param name="exportWithRoleIDs">需要导出的角色的ID集合，用逗号分隔</param>
            <returns>xml格式的系统信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSubsystem(PT.Profile.Types.Subsystem)">
            <summary>
            注册一个子系统信息
            </summary>
            <param name="subsystem">子系统信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSubsystem(PT.Profile.Types.Subsystem)">
            <summary>
            更新子系统信息
            </summary>
            <param name="subsystem">子系统信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSubsystem(System.String)">
            <summary>
            删除一个已注册子系统信息
            </summary>
            <param name="subsystemID">子系统Guid</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubsystems">
            <summary>
            获取所有子系统信息
            </summary>
            <returns>子系统信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubsystem(System.String)">
            <summary>
            根据ID获取某个子系统信息,不包含图片信息
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <returns>子系统信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubsystemImage(System.String)">
            <summary>
            获取子系统图片信息
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <returns>图片二进制数据或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubsystemImageSnapshotId">
            <summary>
            获取最新的子系统图片快照标记，所有子系统统一使用同一快照，使客户端调用可以及时刷新缓存
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSysAuthority(PT.Profile.Types.SysAuthority)">
            <summary>
            建立一个子系统权限
            </summary>
            <param name="sysAuthority">子系统权限</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSysAuthority(PT.Profile.Types.SysAuthority)">
            <summary>
            删除一个子系统权限
            </summary>
            <param name="sysAuthority">子系统权限</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysAuthority(PT.Profile.Types.SysAuthority)">
            <summary>
            更新一个子系统权限显示顺序
            </summary>
            <param name="sysAuthority">子系统权限</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysAuthoritiesBySubSystemID(System.String)">
            <summary>
            获取某个子系统的所有权限信息
            </summary>
            <param name="subsystemID">子系统ID</param>
            <returns>权限信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsableAuthoritiesBySubsystemID(System.String,System.String)">
            <summary>
            获取用户在子系统中的可用的权限信息，可用的权限信息是指权限集里指定了该权限而未明确否定该权限。
            </summary>
            <param name="userID">用户ID。</param>
            <param name="subsystemID">子系统标识。</param>
            <returns>可用的权限信息名称列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsableSysAuthorities(System.String)">
            <summary>
            获取用户在所有可用的权限信息，可用的权限信息是指权限集里指定了该权限而未明确否定该权限。
            </summary>
            <param name="userID">用户ID。</param>
            <returns>权限信息列表。</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysAuthorities">
            <summary>
            获取所有子系统的所有权限信息
            </summary>
            <returns>权限信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsablePortalComponents(System.String)">
            <summary>
            获取对应用户的所有有权使用的门户组件Id列表
            </summary>
            <returns>有权使用的门户组件Id列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUnusablePortalComponents(System.String)">
            <summary>
            获取对应用户的所有无权使用的门户组件Id列表
            </summary>
            <returns>无权使用的门户组件Id列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateBusinessSubject(PT.Profile.Types.BusinessSubject)">
            <summary>
            创建一个业务分类
            </summary>
            <param name="businessSubject">功能模块</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteBusinessSubject(System.String)">
            <summary>
            删除一个业务分类
            </summary>
            <param name="businessName">分类名称</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateBusinessSubject(PT.Profile.Types.BusinessSubject)">
            <summary>
            更新业务分类显示顺序和图片
            </summary>
            <param name="businessSubject">分类</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetBusinessSubjects">
            <summary>
            获取所有业务分类信息(不含图片信息)
            </summary>
            <returns>业务分类列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.WeaverGetBusinessGroups(System.String)">
            <summary>
            获取所有业务分类信息包括模块信息(泛微使用)
            </summary>
            <param name="UserID">一体化平台用户guid</param>
            <returns>业务分类列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetBusinessSubjectImage(System.String)">
            <summary>
            获取指定业务分类的图片信息
            </summary>
            <param name="businessName">分类名称</param>
            <returns>图片信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateMachineDeploy(PT.Profile.Types.MachineDeploy)">
            <summary>
            创建一个物理机信息
            </summary>
            <param name="md">物理机部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteMachineDeploy(System.String)">
            <summary>
            删除某个物理机信息
            </summary>
            <param name="machineIP">物理机IP</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateMachineDeploy(PT.Profile.Types.MachineDeploy)">
            <summary>
            更新某个物理机信息
            </summary>
            <param name="md">物理机部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetMachineDeploys">
            <summary>
            获取所有物理机信息
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParamsByClassName(System.String,System.String)">
            <summary>
            获取某个系统指定参数分类名称下的所有参数。
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <returns>参数列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParams(System.String)">
            <summary>
            获取某个参数分类下的所有参数
            </summary>
            <param name="paramClassID">参数分类ID</param>
            <returns>参数列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetOracleConnectionConfig(System.String,System.String)">
            <summary>
            从参数字典的数据库标准参数配置分支下获取连接配置
            </summary>
            <param name="subsystemID">子系统ID</param>
            <param name="dbClassName">数据库分类名称路径</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParamByClassName(System.String,System.String,System.String)">
            <summary>
            根据子系统ID,参数分类名称和参数名称获取参数。
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <param name="paramName">参数名称</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParam(System.String,System.String)">
            <summary>
            根据参数分类ID和参数名称获取参数。
            </summary>
            <param name="paramClassID">参数分类ID</param>
            <param name="paramName">参数名称</param>
            <returns>参数信息,参数不存在则返回null</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.EnsureGetSysParam(PT.Profile.Types.SysParam)">
            <summary>
            确保获得指定分类下的某个参数,如果不存在则创建
            </summary>
            <param name="sysParam">参数默认信息,其中的分类ID和参数名称必须正确填写</param>
            <returns>参数信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.EnsureGetSysParamByParamClassName(System.String,System.String,PT.Profile.Types.SysParam)">
            <summary>
            确保获得指定分类下的某个参数,分类或参数如果不存在则创建
            </summary>
            <param name="subsystemId">业务系统Id</param>
            <param name="paramClassPathName">参数分类路径</param>
            <param name="sysParam">参数默认信息,其中的分类ID无须填写</param>
            <returns>参数信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSysParam(PT.Profile.Types.SysParam)">
            <summary>
            创建一个子系统参数信息
            </summary>
            <param name="sysParam">子系统参数</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSysParam(System.String,System.String)">
            <summary>
            删除子系统参数
            </summary>
            <param name="paramClassID">参数分类ID</param>
            <param name="paramName">参数名称</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysParam(PT.Profile.Types.SysParam)">
            <summary>
            更新子系统参数
            </summary>
            <param name="sysParam"></param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysParamByParamClassName(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            更新子系统参数,不存在则自动创建
            </summary>
            <param name="subsystemId">业务系统Id</param>
            <param name="paramClassPathName">参数分类路径</param>
            <param name="paramName">参数名称</param>
            <param name="paramValue">参数值</param>
            <param name="paramDesc">参数说明</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParamClasses(System.String,System.String,System.Boolean)">
            <summary>
            获取给定的父节下所有子参数分类
            </summary>
            <param name="subsystemID">子系统ID,传递null或空串则忽略此过滤条件,只有在Root下才有不同子系统分类并存情况</param>
            <param name="parentParamClassID">父分类ID，子系统根ID可传PT.Profile.Definition.SpecialIDs.ParamClassRootID</param>
            <param name="descendantRetrieve">是否第归获取多级子分类</param>
            <returns>参数分类列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParamClassesByParentClassName(System.String,System.String,System.Boolean)">
            <summary>
            获取给定的父节点下所有子参数分类
            </summary>
            <param name="subsystemID">子系统ID</param>
            <param name="parentParamClassPathName">父节点参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <param name="descendantRetrieve">是否第归获取多级子分类</param>
            <returns>参数分类列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysParamClassByClassName(System.String,System.String)">
            <summary>
            获取某个子系统指定分类名称的分类信息。
            </summary>
            <param name="subsystemID">相关的注册系统</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <returns>分类信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.EnsureGetSysParamClass(System.String,System.String)">
            <summary>
            确保获得一个参数分类信息,如果不存在则创建
            </summary>
            <param name="subsystemID">子系统ID</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <returns>参数分类</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSysParamClass(PT.Profile.Types.SysParamClass)">
            <summary>
            创建参数分类
            </summary>
            <param name="sysParamClass">参数分类</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysParamClass(PT.Profile.Types.SysParamClass)">
            <summary>
            更新参数分类
            </summary>
            <param name="sysParamClass">参数分类</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSysParamClass(System.String)">
            <summary>
            删除一个参数分类
            </summary>
            <param name="paramClassID">参数分类ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSysService(PT.Profile.Types.SysService)">
            <summary>
            创建子系统的一个服务信息
            </summary>
            <param name="sv">服务信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSysService(System.String)">
            <summary>
            删除子系统的某个服务信息
            </summary>
            <param name="serviceID">服务Guid</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysService(PT.Profile.Types.SysService)">
            <summary>
            更新一个子系统的服务信息
            </summary>
            <param name="sv">服务信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysServicesBySysID(System.String)">
            <summary>
            获取某个子系统的所有服务信息
            </summary>
            <param name="subsystemID">子系统ID-Guid</param>
            <returns>服务信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysServices">
            <summary>
            获取所有服务信息
            </summary>
            <returns>服务信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysServiceByServiceID(System.String)">
            <summary>
            获取某个服务信息
            </summary>
            <param name="serviceID">服务Guid</param>
            <returns>服务信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateServiceDeploy(PT.Profile.Types.ServiceDeploy)">
            <summary>
            创建一个子系统服务部署信息
            </summary>
            <param name="sd">服务部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteServiceDeploy(System.String,System.String)">
            <summary>
            删除某个子系统服务部署信息
            </summary>
            <param name="machineIP">物理机IP</param>
            <param name="serviceID">子系统服务ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateServiceDeploy(PT.Profile.Types.ServiceDeploy)">
            <summary>
            更新某个子系统服务部署信息
            </summary>
            <param name="sd">服务部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetServiceDeploys">
            <summary>
            获取所有服务部署信息
            </summary>
            <returns>所有服务部署信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetServiceDeploysByServiceID(System.String)">
            <summary>
            根据服务ID获取该服务所有部署信息
            </summary>
            <param name="serviceID">服务ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSubModule(PT.Profile.Types.SubModule)">
            <summary>
            创建一个功能模块
            </summary>
            <param name="subModule">功能模块</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSubModule(System.String)">
            <summary>
            删除一个功能模块
            </summary>
            <param name="subModuleID">功能模块ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSubModule(PT.Profile.Types.SubModule)">
            <summary>
            更新功能模块
            </summary>
            <param name="subModule">功能模块</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModules(System.Boolean)">
            <summary>
            获取所有功能模块
            </summary>
            <param name="IsCotainImage">是否返回图片信息</param>
            <returns>功能模块列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModule(System.String,System.Boolean)">
            <summary>
            获取指定功能模块信息
            </summary>
            <param name="subModuleId">功能模块Id</param>
            <param name="IsCotainImage">是否返回图片信息</param>
            <returns>功能模块信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModulesBySubsystemID(System.String,System.Boolean)">
            <summary>
            获取指定子系统的所有功能模块
            </summary>
            <param name="subsystemID">子系统Guid</param>
            <param name="IsCotainImage">是否返回图片信息</param>
            <returns>功能模块列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModulesBySubjectName(System.String)">
            <summary>
            获取指定业务分类的所有功能模块(不含图片信息)
            </summary>
            <param name="subjectName">业务分类名称。</param>
            <returns>功能模块列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsableSubModules(System.String)">
            <summary>
            获取指定用户所有可用的PC端功能模块(不含图片信息)
            </summary>
            <param name="userID">用户ID</param>
            <returns>可用的PC端功能模块列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetUsableMobileSubModules(System.String)">
            <summary>
            获取指定用户所有可用的移动端功能模块(不含图片信息)
            </summary>
            <param name="userID">用户ID</param>
            <returns>可用的移动端功能模块列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModuleImage(System.String)">
            <summary>
            获取指定功能模块的图片信息
            </summary>
            <param name="subModuleID">功能模块ID</param>
            <returns>图片信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSubModuleImageSnapshotId">
            <summary>
            获取最新的子模块图片快照标记，所有子模块统一使用同一快照，使客户端调用可以及时刷新缓存
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateSysDeploy(PT.Profile.Types.SysDeploy)">
            <summary>
            创建一个子系统部署信息
            </summary>
            <param name="sd">子系统部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteSysDeploy(System.String,System.String)">
            <summary>
            删除某个子系统在某个物理机上的部署信息
            </summary>
            <param name="machineIP">物理机IP</param>
            <param name="subsystemID">子系统ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateSysDeploy(PT.Profile.Types.SysDeploy)">
            <summary>
            更新某个子系统部署信息
            </summary>
            <param name="sd">子系统部署信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysDeploysByIP(System.String)">
            <summary>
            根据物理机IP获取该物理机IP下所有子系统部署信息
            </summary>
            <param name="machineIP">物理机IP</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysDeploysBySysID(System.String)">
            <summary>
            根据子系统ID获取该子系统在不同物理机下部署信息
            </summary>
            <param name="subsystemID">子系统ID</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetSysDeploys">
            <summary>
            获取子系统部署信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.CreateDocumentInfo(PT.Profile.Types.DocumentInfo,System.String)">
            <summary>
            创建文档信息
            </summary>
            <param name="documentInfo">文档信息</param>
            <param name="userID">平台用户ID</param>
            <returns>0:失败,否则返回文档ID</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.UpdateDocumentInfo(PT.Profile.Types.DocumentInfo,System.String)">
            <summary>
            更新文档信息
            </summary>
            <param name="documentInfo">文档信息</param>
            <param name="userID">平台用户ID</param>
            <returns>1:成功, 0:失败</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetDocumentInfo(System.Int32,System.String)">
            <summary>
            根据文档ID获取文档信息(包含附件信息)
            </summary>
            <param name="docID">OA文档ID</param>
            <param name="userID">平台用户ID</param>
            <returns>文档信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.DeleteDocumentInfo(System.Int32,System.String)">
            <summary>
            删除文档信息(包含附件信息)
            </summary>
            <param name="docID">OA文档ID</param>
            <param name="userID">平台用户ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetDocumentInfoByName(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据文档名称获取文档信息(包含附件信息)
            </summary>
            <param name="mainDir">主目录名称</param>
            <param name="subDir">分目录名称</param>
            <param name="secDir">子目录名称</param>
            <param name="docName">文档标题，非文件名</param>
            <param name="userID">平台用户ID</param>
            <returns>文档信息</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.QueryDocumentInfosByDirectory(System.String,System.String,System.String,System.String)">
            <summary>
            根据目录名称获取目录下文档信息列表(不包含附件信息)
            </summary>
            <param name="mainDir">主目录名称</param>
            <param name="subDir">分目录名称</param>
            <param name="secDir">子目录名称</param>
            <param name="userID">平台用户ID</param>
            <returns>文档信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.QueryDocumentInfosByBooleanProperties(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            在指定的三层目录下的第三层里，根据bool类型查找文档信息列表(不包含附件信息)
            </summary>
            <param name="mainDir">主目录名称</param>
            <param name="subDir">分目录名称</param>
            <param name="secDir">子目录名称</param>
            <param name="propCondition">属性查询条件,举例 "[GD05][GD06]"</param>
            <param name="userID">平台用户ID</param>
            <returns>文档信息列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetOAWebserviceAddress_Workflow">
            <summary>
            获得OA工作流服务终节点地址,格式为 http://192.168.3.3:8005/Services/WorkflowService
            </summary>
            <returns>OA工作流服务终节点地址</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetOAWebServerAddress">
            <summary>
            获得OA网站基地址，返回格式为 192.168.3.3:8005
            </summary>
            <returns>OA网站基地址</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetOAWebServerDynamicEntry">
            <summary>
            获得OA网站公告页面跳转入口，返回格式为 gopage=%2fdocs%2fsearch%2fDocSearchView.jsp%3ffrom%3dnull%26date2during%3dnull%26showtype%3d0%26docpublishtype%3d%26isreply%3d%26frompage%3d%26doccreatedatefrom%3d%26doccreatedateto%3d%26displayUsage%3d0%26fromadvancedmenu%3d0%26infoId%3d0%26isMainOrSub%3d%26isNew%3d%26ownerid%3d%26subcompanyid%3d%26departmentid%3d%26containreply%3d%26maincategory%3d%26subcategory%3d%26seccategory%3d90%26dspreply%3d1
            </summary>
            <returns>OA网站公告页面跳转入口</returns>
        </member>
        <member name="M:PT.Profile.Interface.ISubsystem.GetOAWebServerBacklogEntry">
            <summary>
            获得OA网站待办页面跳转入口，返回格式为 gopage=%2fworkflow%2fsearch%2fWFSearchResult.jsp%3fstart%3d1%26iswaitdo%3d1%26viewType%3d1
            </summary>
            <returns>OA网站待办页面跳转入口</returns>
        </member>
        <member name="T:PT.Profile.Interface.IRuntimeManage">
            <summary>
            应用程序服务器运行时管理接口，每个应用容器都实现此接口来实现包括运行时状态统计，运行时服务升级，运行时参数管理
            </summary>
            <summary>
            分部接口-运行时功能调用接口
            </summary>
            <summary>
            分部接口-运行时控制台接口
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.GetAllServerRuntimeVariables">
            <summary>
            获取当前应用服务器所有运行时参数信息
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.UpdateServerRuntimeVariable(PT.Toolkit.Portable.Runtime.ServerRuntimeVariable)">
            <summary>
            设置当前应用服务器运行时参数值
            </summary>
            <param name="srv">参数</param>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.GetServerStartTime">
            <summary>
            获取当前应用服务器启动时间
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.ManageFunction(System.String,System.String,System.Byte[])">
            <summary>
            应用服务器功能管理
            </summary>
            <param name="funcName">功能名称</param>
            <param name="relStringValue">参考字符串</param>
            <param name="relByteValue">参考字节数组</param>
            <returns>返回值依据功能而不同</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.GetHelpers(System.String)">
            <summary>
            获取指定的帮助项信息
            </summary>
            <param name="helperIds">帮助Id,多个用逗号分隔,如果想获取全部则传空</param>
            <returns>RuntimeHelperList</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.GetAllServerRuntimeMethods">
            <summary>
            获取当前应用服务器所有运行时功能调用信息
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.GetAllServerRuntimeMethodParams(System.String,System.String)">
            <summary>
            获取当前应用服务器某个运行时功能调用参数信息
            </summary>
            <param name="className">归属类名称</param>
            <param name="methdName">功能调用名称</param>
            <returns>功能调用需要的参数列表</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.InvokeServerRuntimeMethod(System.String,System.String,PT.Toolkit.Portable.Runtime.ServerRuntimeMethodParamList)">
            <summary>
            执行一次运行时功能调用
            </summary>
            <param name="className">归属类名称</param>
            <param name="methdName">功能调用名称</param>
            <param name="methodParams">功能调用的参数列表</param>
            <returns>调用结果显示于控制台界面</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.RefereshServerRuntimeMethodParamsOnChange(System.String,System.String,System.String,PT.Toolkit.Portable.Runtime.ServerRuntimeMethodParamList)">
            <summary>
            当指定的参数变化时刷新参数列表
            </summary>
            <param name="className">归属类名称</param>
            <param name="methdName">功能调用名称</param>
            <param name="changingParamName">变动的参数名称</param>
            <param name="methodParams">功能调用的参数列表</param>
            <returns>调用结果显示于控制台界面</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.QueryConsoleLogs(PT.Profile.Types.ConsoleLogQueryCondition)">
            <summary>
            获取控制台信息
            </summary>
            <param name="clqc">查询条件</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRuntimeManage.ClearConsoleLogs">
            <summary>
            清掉服务端控制台信息
            </summary>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveErrorHandler">
            <summary>
            (UI上下文调用)传输错误方法,当引发此事件后,本次传输结束
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="arg">arg.StringVlue存放错误描述</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveCompleteHandler">
            <summary>
            (UI上下文调用)传输完成方法
            </summary>
            <param name="client">传输组件</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveProgressHandler">
            <summary>
            (UI上下文调用)传输进度方法
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="arg">arg.StringValue存放进度信息提示,arg.DoubleValue存放进度值,最小0,最大100</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveCreateFolderRequestHandler">
            <summary>
            (线程上下文调用)网盘文件夹创建请求事件,整个传输过程中每个文件只会请求一次
            调用方需根据请求信息创建文件并返回对该文件的一个可写入的流
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="folderName">请求创建的文件夹名称</param>
            <returns>成功则InvokeResult.Status=1</returns>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveCreateFileRequestHandler">
            <summary>
            (线程上下文调用)创建文件请求方法
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="filePathName">请求创建的文件名称</param>
            <returns>可写的流,用于接收数据</returns>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveCloseFileRequestHandler">
            <summary>
            (线程上下文调用)流关闭请求方法
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="streamToClose">请求关闭的流</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveSleepRequestHandler">
            <summary>
            (线程上下文调用)线程睡眠请求方法,可移植类库不支持睡眠函数,所以需要从外部调用
            </summary>
            <param name="receiveComponent">传输组件</param>
            <param name="sleepmillionseconds">客户端响应此事件需调用System.Threading.Thread.Sleep(sleepmillionseconds)</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferReceiveComponent">
            <summary>
            数据传输接收组件类
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.CurrentStream">
            <summary>
            当前操作的流
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.RSDelayMillionSeconds">
            <summary>
            收发间隙轮询时长
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.Tag">
            <summary>
            组件使用者存放自定义对象
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.ReceiverId">
            <summary>
            接收者Id
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.ReceiverName">
            <summary>
            接收者名称
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.SenderId">
            <summary>
            发送者Id
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.SenderName">
            <summary>
            发送者名称
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.TransferId">
            <summary>
            传输事务Id
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.CurrentReceivedLength">
            <summary>
            当前已接收数据大小
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.DirectoryNameToSave">
            <summary>
            接收路径
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.iSubsystemInterface">
            <summary>
            服务接口
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.TransferMessageDecoded">
            <summary>
            已解析Jabber消息内容并获得正确数据
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.firstReportProgress">
            <summary>
            第一次汇报进度,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.lastReportTime">
            <summary>
            上次进度报告时间,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.lastSendLength">
            <summary>
            上次为止已传输数据长度,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferReceiveComponent.lastSpeed">
            <summary>
            上次传输速度,用于计算传输速度
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.Init(Betx.Jabber.Portable.BeAppMessageContext,PT.Profile.Interface.ISubsystem)">
            <summary>
            初始化并解码jabber消息,将获得下载信息放在类成员里
            </summary>
            <param name="messageContext">Jabber消息</param>
            <param name="isubsystem">网盘接口</param>
            <returns>如果成功则InvokeResult.Status=1</returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.Init(System.String,PT.Profile.Interface.ISubsystem)">
            <summary>
            初始化并解码jabber消息,将获得下载信息放在类成员里
            </summary>
            <param name="contextString">Jabber消息</param>
            <param name="isubsystem">网盘接口</param>
            <returns>如果成功则InvokeResult.Status=1</returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.CheckEventsAttach(PT.Profile.Types.InvokeResult)">
            <summary>
            检查事件是否都已挂接
            </summary>
        </member>
        <!-- 对于成员“M:PT.Profile.NetDisk.TransferReceiveComponent.BeginReceive(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.CancelReceive">
            <summary>
            终止当前传输过程
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.DownlaodThreadProc(System.Object)">
            <summary>
            流程处理线程
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.GetSceneStateDesc(System.Int64,System.String)">
            <summary>
            获取当前传输状态描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.ProcessRSCommand">
            <summary>
            处理收发命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferReceiveComponent.CombinePath(System.String,System.String)">
            <summary>
            连接两个路径,解决System.IO.Path.Combine处理不正常的问题
            </summary>
            <param name="Path1">路径1</param>
            <param name="Path2">路径2</param>
            <returns>路径</returns>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnError">
            <summary>
            (UI上下文调用)传输错误事件,当引发此事件后,本次传输结束
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnComplete">
            <summary>
            (UI上下文调用)传输全部完成事件
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnProgress">
            <summary>
            (UI上下文调用)传输进度事件
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnCreateFileRequest">
            <summary>
            (线程上下文调用)传输流请求事件,整个传输过程中每个文件只会请求一次
            调用方需根据请求信息创建文件并返回对该文件的一个可写入的流
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnCloseFileRequest">
            <summary>
            (线程上下文调用)传输流关闭请求事件,客户端响应此事件关闭前一个打开的流,整个传输过程中每个文件只会请求一次 
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnCreateFolderRequest">
            <summary>
            (线程上下文调用)文件夹创建请求事件,整个传输过程中每个文件只会请求一次
            调用方需根据请求信息创建文件并返回对该文件的一个可写入的流
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferReceiveComponent.OnSleepRequest">
            <summary>
            (线程上下文调用)线程睡眠请求方法,可移植类库不支持睡眠函数,所以需要从外部调用,客户端响应此事件需调用System.Threading.Thread.Sleep(sleepmillionseconds)
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.Downloading">
            <summary>
            是否正在进行文件下载
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.Id">
            <summary>
            组件实例标识
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.TransferMode">
            <summary>
            传输模式 0:离线文件 1:在线文件
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.ObjectType">
            <summary>
            传输对象类型 1:文件 2:文件夹
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.ObjectName">
            <summary>
            传输对象(文件或文件夹)名称
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferReceiveComponent.TotalLength">
            <summary>
            传输数据总大小
            </summary>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendErrorHandler">
            <summary>
            (UI上下文调用)传输错误方法,当引发此事件后,本次传输结束
            </summary>
            <param name="sendComponent">传输组件</param>
            <param name="arg">arg.StringVlue存放错误描述</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendCompleteHandler">
            <summary>
            (UI上下文调用)传输完成方法
            </summary>
            <param name="sendComponent">传输组件</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendProgressHandler">
            <summary>
            (UI上下文调用)传输进度方法
            </summary>
            <param name="sendComponent">传输组件</param>
            <param name="arg">arg.StringValue存放进度信息提示,arg.DoubleValue存放进度值,最小0,最大100</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendOpenFileRequestHandler">
            <summary>
            (线程上下文调用)打开文件流请求方法
            </summary>
            <param name="sendComponent">传输组件</param>
            <param name="filePathName">请求打开的文件名称</param>
            <returns>可读的流,用于读取数据并发送</returns>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendCloseFileRequestHandler">
            <summary>
            (线程上下文调用)流关闭请求方法
            </summary>
            <param name="sendComponent">传输组件</param>
            <param name="streamToClose">请求关闭的流</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendSleepRequestHandler">
            <summary>
            (线程上下文调用)线程睡眠请求方法,可移植类库不支持睡眠函数,所以需要从外部调用
            </summary>
            <param name="sendComponent">传输组件</param>
            <param name="sleepmillionseconds">客户端响应此事件需调用System.Threading.Thread.Sleep(sleepmillionseconds)</param>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendComponent">
            <summary>
            数据传输发送组件类
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.MaxDataLengthPerFrame">
            <summary>
            每帧数据发送最大长度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.RSDelayMillionSeconds">
            <summary>
            收发间隙轮询时长
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.CurrentStream">
            <summary>
            当前操作的流
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.Tag">
            <summary>
            组件使用者存放自定义对象
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.TransferId">
            <summary>
            传输事务Id
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.CurrentSendLength">
            <summary>
            当前已发送数据大小
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.iSubsystemInterface">
            <summary>
            服务接口
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendArg">
            <summary>
            发送的相关参数
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.firstReportProgress">
            <summary>
            第一次汇报进度,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.lastReportTime">
            <summary>
            上次进度报告时间,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.lastSendLength">
            <summary>
            上次为止已传输数据长度,用于计算传输速度
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.lastSpeed">
            <summary>
            上次传输速度,用于计算传输速度
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.Init(PT.Profile.Interface.ISubsystem)">
            <summary>
            初始化并解码jabber消息,将获得下载信息放在类成员里
            </summary>
            <param name="isubsystem">网盘接口</param>
            <returns>如果成功则InvokeResult.Status=1</returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.TestGetJabberMessageContext">
            <summary>
            测试时使用,开始发送后生成消息串给接收组件调试用
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.CheckEventsAttach(PT.Profile.Types.InvokeResult)">
            <summary>
            检查事件是否都已挂接
            </summary>
        </member>
        <!-- 对于成员“M:PT.Profile.NetDisk.TransferSendComponent.BeginOfflineSend(PT.Profile.NetDisk.TransferSendArg)”忽略有格式错误的 XML 注释 -->
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.CurrentSendingObject">
            <summary>
            当前发送的对象
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.AssemblySendTask">
            <summary>
            编排发送任务
            </summary>
        </member>
        <!-- 对于成员“M:PT.Profile.NetDisk.TransferSendComponent.BeginOnlineSend(PT.Profile.NetDisk.TransferSendArg)”忽略有格式错误的 XML 注释 -->
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.CancelSend">
            <summary>
            终止当前传输过程
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.OnlineUplaodThreadProc(System.Object)">
            <summary>
            流程处理线程
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.GetSceneStateDesc(System.Int64,System.String)">
            <summary>
            获取当前传输状态描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.ProcessRSCommand">
            <summary>
            处理收发命令,远程无命令时进入此函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendComponent.CombinePath(System.String,System.String)">
            <summary>
            连接两个路径,解决System.IO.Path.Combine处理不正常的问题
            </summary>
            <param name="Path1">路径1</param>
            <param name="Path2">路径2</param>
            <returns>路径</returns>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnError">
            <summary>
            (UI上下文调用)传输错误事件,当引发此事件后,本次传输结束
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnComplete">
            <summary>
            (UI上下文调用)传输全部完成事件
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnProgress">
            <summary>
            (UI上下文调用)传输进度事件
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnOpenFileRequest">
            <summary>
            (线程上下文调用)打开文件流请求事件,整个传输过程中每个文件只会请求一次
            调用方需根据请求信息打开已存在文件并返回对该文件的一个可读取的流
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnCloseFileRequest">
            <summary>
            (线程上下文调用)传输流关闭请求事件,客户端响应此事件关闭前一个打开的流,整个传输过程中每个文件只会请求一次 
            </summary>
        </member>
        <member name="E:PT.Profile.NetDisk.TransferSendComponent.OnSleepRequest">
            <summary>
            (线程上下文调用)发送线程睡眠请求方法,可移植类库不支持睡眠函数,所以需要从外部调用,客户端响应此事件需调用System.Threading.Thread.Sleep(sleepmillionseconds)
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferSendComponent.Uploading">
            <summary>
            是否正在进行文件上传
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferSendComponent.Id">
            <summary>
            组件实例标识
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferSendComponent.TransferMode">
            <summary>
            发送模式方式 0:离线文件 1:在线文件
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferSendComponent.ObjectType">
            <summary>
            传输对象类型 1:文件 2:文件夹
            </summary>
        </member>
        <member name="P:PT.Profile.NetDisk.TransferSendComponent.ObjectName">
            <summary>
            传输对象(文件或文件夹)名称
            </summary>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendComponent.SendingObject">
            <summary>
            编排后的发送信息
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendingObject.ObjectType">
            <summary>
            传输对象类型 1:文件 2:文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendingObject.PhysicalPathName">
            <summary>
            物理全路径，包括文件夹或文件名
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendingObject.RelativePathName">
            <summary>
            相对路径，包括文件夹或文件名
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendingObject.FolderStatus">
            <summary>
            文件夹名称发送状态 0:未发送创建命令 1:已发送创建命令
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendComponent.SendingObject.FileStatus">
            <summary>
            文件发送状态 0:未开始发送 1:已开始发送 2:已发送完数据并已关闭文件 
            </summary>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferSendArg">
            <summary>
            发送文件参数信息
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.SenderId">
            <summary>
            发送者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.ReceiverId">
            <summary>
            接收者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.TotalLength">
            <summary>
            总大小
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.TransferObjectType">
            <summary>
            传输对象类型 1:文件 2:文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.TransferObjectName">
            <summary>
            传输对象名称
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.ParentDirectory">
            <summary>
            要发送对象当前存放在哪个物理路径
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferSendArg.Folder">
            <summary>
            如果TransferObjectType=2，则必须提供目录信息
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferSendArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferFolder">
            <summary>
            传输文件夹信息
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferFolder.FolderName">
            <summary>
            文件夹名称
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferFolder.SubFolders">
            <summary>
            子文件夹列表
            </summary>
        </member>
        <member name="F:PT.Profile.NetDisk.TransferFolder.Files">
            <summary>
            当前文件夹下的文件列表
            </summary>
        </member>
        <member name="M:PT.Profile.NetDisk.TransferFolder.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.NetDisk.TransferFolderList">
            <summary>
            文件夹列表
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ObjectPolyFlagNames">
            <summary>
            过滤策略参数名称,用于策略过滤表达式
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.All">
            <summary>
            广播,所有人
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.DeptId">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.DeptIdWithSub">
            <summary>
            跨行政区范围的部门,结果考虑下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.DeptIdWithSubInOrg">
            <summary>
            不跨行政区范围的部门,结果考虑下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.RoleName">
            <summary>
            角色路径名称
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.RoleNameWithSub">
            <summary>
            角色路径名称,结果考虑子角色
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.LogClassPathName">
            <summary>
            日志分类路径
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.LogClassPathNameWithSub">
            <summary>
            日志分类路径,结果考虑子分类
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.SuperiorApprovel">
            <summary>
            当前用户的审批上级
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNames.District">
            <summary>
            所属的行政区代码
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper">
            <summary>
            大写字母的过滤策略参数名称,用于提高表达式运算性能
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.All">
            <summary>
            广播,所有人
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.DeptId">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.DeptIdWithSub">
            <summary>
            跨行政区范围的部门,结果考虑下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.DeptIdWithSubInOrg">
            <summary>
            不跨行政区范围的部门,结果考虑下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.RoleName">
            <summary>
            角色路径名称
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.RoleNameWithSub">
            <summary>
            角色路径名称,结果考虑子角色
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.LogClassPathName">
            <summary>
            日志分类路径
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.LogClassPathNameWithSub">
            <summary>
            日志分类路径,结果考虑子分类
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.SuperiorApprovel">
            <summary>
            当前用户的审批上级
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ObjectPolyFlagNamesUpper.District">
            <summary>
            所属行政区划
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.ParamClassNames">
            <summary>
            常量值集合-子系统参数分类名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ParamClassNames.PTDB">
            <summary>
            平台库分类名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ParamClassNames.JabberDB">
            <summary>
            Jabber库分类名称
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ParamClassNames.WEAVERDB">
            <summary>
            泛微库分类名称
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.ServiceIDs">
            <summary>
            平台提供的服务标识定义
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServiceIDs.Organization">
            <summary>
            组织机构服务ID
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServiceIDs.Role">
            <summary>
            角色服务ID
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.ServiceIDs.Subsystem">
            <summary>
            子系统服务ID
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.SpecialIDs">
            <summary>
            平台提供的特殊ID集合
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.PlatformID">
            <summary>
            平台系统对应的子系统标识
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.WeaverSubsystemID">
            <summary>
            泛微oa系统注册的子系统ID
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.Jabber_Wcf_Delegate_UID">
            <summary>
            jabber-wcf消息代理的登录ID
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.Jabber_Wcf_Delegate_PWD">
            <summary>
            jabber-wcf消息代理的登录密码
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.DeptRootID">
            <summary>
            部门根节点标志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.RoleRootID">
            <summary>
            角色目录根节点标志
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.ParamClassRootID">
            <summary>
            注册系统参数分类根节点
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.NetFolderRootID_Public">
            <summary>
            公共网盘虚拟根目录Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.NetFolderRootID_Offline">
            <summary>
            离线文件网盘虚拟根目录Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.NetDiskAdminID">
            <summary>
            网盘内置认证Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.LogCategoryRootID">
            <summary>
            日志分类根节点
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.AdminGUID">
            <summary>
            默认管理员标识
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialIDs.BePortalAppId_FileTransfer">
            <summary>
            文件传输AppId
            </summary>
        </member>
        <member name="T:PT.Profile.Definition.SpecialValues">
            <summary>
            平台提供的特殊常量定义
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.DefaultDomainName">
            <summary>
            缺省域名
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.RelationName_WorkflowApproval">
            <summary>
            关系名称-流程审批
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.DeptPropertyCategoryName_DeptBindId">
            <summary>
            部门扩展属性分类名称-部门绑定Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.UserPropertyCategoryName_UserBindId">
            <summary>
            用户扩展属性分类名称-用户绑定Id
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.UserPropertyCategoryName_Domain">
            <summary>
            用户扩展属性分类名称-域名
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.RuntimeManageRegisterInterval">
            <summary>
            运行时服务注册时间间隔(秒)
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.DirectoryName_AppServerUpdate">
            <summary>
            文件目录名称-服务器升级文件暂存目录
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.FileName_AppServerUpdatePackageConfig">
            <summary>
            文件名称-服务器升级包配置文件
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.AuthorityDenyFirst">
            <summary>
            权限认证时是否采用否优先原则
            </summary>
        </member>
        <member name="F:PT.Profile.Definition.SpecialValues.PlatformCoreFiles">
            <summary>
            平台核心文件列表
            </summary>
        </member>
        <member name="T:PT.Profile.Interface.IDirectoryService">
            <summary>
            IDirectoryService
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IDirectoryService.GetSpecifiedServiceInfoList(System.String)">
            <summary>
            获取指定的服务地址信息
            </summary>
            <param name="ContractsName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Interface.IDirectoryService.GetAllServiceInfoList">
            <summary>
            获取所有服务地址信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Interface.ILog">
            <summary>
            日志记录及查询接口
            </summary>
            <summary>
            日志记录及查询接口
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.ILog.GetLogCategories">
            <summary>
            获取所有日志分类
            </summary>
            <returns>日志分类集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.ILog.UpdateLogCategory(PT.Profile.Types.LogCategory)">
            <summary>
            更新日志分类信息
            </summary>
            <param name="logCategory">日志分类信息</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.DeleteLogCategory(System.Int32)">
            <summary>
            删除日志分类信息
            </summary>
            <param name="logCategoryID">日志分类信息ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.WriteLog(PT.Profile.Types.LogContent)">
            <summary>
            写入一条日志信息
            </summary>
            <param name="lc">日志内容</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.QueryLog(PT.Profile.Types.LogQueryCondition)">
            <summary>
            查询符合条件的日志信息，返回的集合中日志内容是精简信息，不是详细信息
            </summary>
            <param name="lqc">日志查询条件</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.GetLogDetail(System.Int32)">
            <summary>
            获取一条日志信息
            </summary>
            <param name="logDetailID">日志信息ID</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.DeleteLog(PT.Profile.Types.LogQueryCondition)">
            <summary>
            删除符合条件的日志信息
            </summary>
            <param name="lqc">日志查询条件</param>
        </member>
        <member name="M:PT.Profile.Interface.ILog.DeleteAllLog">
            <summary>
            删除所有日志信息
            </summary>
        </member>
        <member name="T:PT.Profile.Interface.IRole">
            <summary>
            平台授权相关服务接口-角色相关
            </summary>
            <summary>
            平台授权相关服务接口-角色权限相关
            </summary>
            <summary>
            平台授权相关服务接口-角色用户权限相关
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IRole.UpdateRoleInfo(PT.Profile.Types.RoleInfo)">
            <summary>
            修改角色信息。
            </summary>
            <param name="roleInfo">要修改的角色。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.CreateRoleInfo(PT.Profile.Types.RoleInfo)">
            <summary>
            创建角色目录
            </summary>
            <param name="roleInfo">角色</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.DeleteRoleInfo(System.String)">
            <summary>
            删除角色
            </summary>
            <param name="roleID">roleID</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleInfoByRoleID(System.String)">
            <summary>
            根据角色id获取角色信息
            </summary>
            <param name="roleID">角色id</param>
            <returns>角色目录信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleInfoByRoleName(System.String)">
            <summary>
            根据角色路径名称获取角色信息
            </summary>
            <param name="rolePathName">角色路径名称，可带路径分隔符'\'表示深层的角色，例如"平台角色\组织机构管理角色"</param>
            <returns>角色信息或null</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleInfosByParentRoleID(System.String,System.Boolean)">
            <summary>
            根据角色id获取下属子角色信息
            </summary>
            <param name="parentRoleID">角色id或PT.Profile.Definition.SpecialIDs.RoleRootID</param>
            <param name="descendantRetrieve">是否第归获取多层子目录下的角色信息</param>
            <returns>角色信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleInfosByParentRoleName(System.String,System.Boolean)">
            <summary>
            根据角色路径名称获取下属子角色信息
            </summary>
            <param name="rolePathName">角色路径名称，可带路径分隔符'\'表示深层的角色，例如"平台角色\组织机构管理角色"</param>
            <param name="descendantRetrieve">是否第归获取多层子目录下的角色信息</param>
            <returns>角色信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleInfos">
            <summary>
            获取所有角色信息
            </summary>
            <returns>角色信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRolePathNamesByUserID(System.String)">
            <summary>
            根据用户ID获取所有与用户有关的角色路径信息
            </summary>
            <param name="userID">用户ID</param>
            <returns>角色路径信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.IsUserInRole(System.String,System.String,System.Boolean)">
            <summary>
            判断用户是否属于角色
            </summary>
            <param name="userID">用户ID</param>
            <param name="rolePathName">角色路径名称，可带路径分隔符'\'表示深层的角色，例如"平台角色\组织机构管理角色"</param>
            <param name="isJudgesubRole">是否判断用户属于子角色</param>
            <returns>是否属于角色</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleAuthoritiesByRoleID(System.String)">
            <summary>
            获取指定角色中的全部角色权限信息。
            </summary>
            <param name="roleID">角色标识。</param>
            <returns>角色中包含子系统权限信息。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleAuthorities">
            <summary>
            获取全部角色权限信息。
            </summary>
            <returns>角色权限信息。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.CreateRoleAuthority(PT.Profile.Types.RoleAuthority)">
            <summary>
            向角色分配子系统权限。
            </summary>
            <param name="roleAuthority">向角色分配的子系统权限信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.DeleteRoleAuthority(PT.Profile.Types.RoleAuthority)">
            <summary>
            从角色中移除子系统权限。
            </summary>
            <param name="roleAuthority">从角色中移除的子系统权限信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.UpdateRoleAuthority(PT.Profile.Types.RoleAuthority)">
            <summary>
            更改角色对子系统权限的设置。可更改为允许或者拒绝。
            </summary>
            <param name="roleAuthority">角色中更改的子系统权限设置。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.CreateRoleMember(PT.Profile.Types.RoleMember)">
            <summary>
            向角色增加用户。
            </summary>
            <param name="roleMember">向角色分配的用户信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.DeleteRoleMember(PT.Profile.Types.RoleMember)">
            <summary>
            从角色中移除用户。
            </summary>
            <param name="roleMember">从角色中移除的用户信息。</param>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleMembersByRoleName(System.String)">
            <summary>
            获取指定路径的角色包含的角色成员信息集合
            </summary>
            <param name="rolePathName">角色全路径名称</param>
            <returns>角色成员信息集合</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetRoleMembers(System.String)">
            <summary>
            获取指定角色中的全部关联用户信息。
            </summary>
            <param name="roleID">角色标识。</param>
            <returns>角色成员列表信息。</returns>
        </member>
        <member name="M:PT.Profile.Interface.IRole.GetAllRoleMembers">
            <summary>
            获取全部角色关联用户信息。
            </summary>
            <returns>角色成员列表信息。</returns>
        </member>
        <member name="T:PT.Profile.Interface.IPlatformCarer">
            <summary>
            守护服务接口
            </summary>
        </member>
        <member name="M:PT.Profile.Interface.IPlatformCarer.CreateAppServer">
            <summary>
            创建应用服务器
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Business.DistrictHelper">
            <summary>
            行政区辅助类
            </summary>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.GetDistrictType(System.String)">
            <summary>
            判断行政区的类型
            </summary>
            <param name="AreaCode">行政区代码4或6位</param>
            <returns>行政区的类型</returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.IsSpecificallyDesignatedCity(System.String)">
            <summary>
            是否是单列市
            </summary>
            <param name="AreaCode">行政区代码4或6位</param>
            <returns>true是单列市,false不是单列市</returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.IsMunicipality(System.String)">
            <summary>
            是否是直辖市
            </summary>
            <param name="AreaCode">行政区代码4或6位</param>
            <returns>true是直辖市,false不是直辖市</returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.IsProvince(System.String)">
            <summary>
            是否是省行政区代码
            </summary>
            <param name="AreaCode">行政区代码4或6位</param>
            <returns>true是省行政区代码,false不是省行政区代码</returns>
        </member>
        <member name="F:PT.Profile.Business.DistrictHelper.DistrictInfosInited">
            <summary>
            是否行政区列表已初始化
            </summary>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.NewDistrict(System.String,System.String)">
            <summary>
            创建区县级行政区
            </summary>
            <param name="areaCode"></param>
            <param name="areaName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.NewCity(System.String,System.String,System.String)">
            <summary>
            创建市级行政区
            </summary>
            <param name="areaCode"></param>
            <param name="areaName"></param>
            <param name="childRealm">子域名</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.NewProvince(System.String,System.String,PT.Profile.Business.ProvinceDistrictTypeEnum,System.String,System.Boolean,System.String)">
            <summary>
            创建省级行政区
            </summary>
            <param name="areaCode"></param>
            <param name="areaName"></param>
            <param name="provinceDistrictType"></param>
            <param name="provinceDomain"></param>
            <param name="useChildRealm"></param>
            <param name="defaultChildRealm"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictHelper.InitDistrictInfos">
            <summary>
            初始化行政区列表
            </summary>
        </member>
        <member name="P:PT.Profile.Business.DistrictHelper.DistrictInfos">
            <summary>
            全国行政区信息，数量不全，完善中
            </summary>
        </member>
        <member name="T:PT.Profile.Business.DistrictInfo">
            <summary>
            行政区基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.Code">
            <summary>
            6位行政区代码
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.Name">
            <summary>
            行政区名称
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.ProvinceDomain">
            <summary>
            省级行政区域名
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.UseChildRealm">
            <summary>
            是否适用子域名
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.DefaultChildRealm">
            <summary>
            默认子域名
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.CityChildRealm">
            <summary>
            地市分中心子域名
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.DistrictLevel">
            <summary>
            行政区级别
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.ProvinceDistrictType">
            <summary>
            省级行政区的分类
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictInfo.SubDistricts">
            <summary>
            下级行政区列表
            </summary>
        </member>
        <member name="T:PT.Profile.Business.DistrictInfoList">
            <summary>
            行政区信息集合类
            </summary>
        </member>
        <member name="M:PT.Profile.Business.DistrictInfoList.AdjustAreaCode6(System.String)">
            <summary>
            调整行政区代码到6位
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictInfoList.FindItemByCode(System.String)">
            <summary>
            根据4位或6位行政区代码查找行政区信息
            </summary>
            <param name="code">4位或6位行政区代码</param>
            <returns>行政区信息或null</returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictInfoList.RecurrenceFindItemByCode(System.String,PT.Profile.Business.DistrictInfoList)">
            <summary>
            第归查找根据6位行政区代码查找行政区信息
            </summary>
            <param name="code"></param>
            <param name="l"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.DistrictInfoList.FindParentDistrict(System.String)">
            <summary>
            找到指定行政区的上级行政区
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Business.DistrictLevelEnum">
            <summary>
            行政区级别类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictLevelEnum.Nation">
            <summary>
            国家
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictLevelEnum.Province">
            <summary>
            省级,直辖市,单列市级别
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictLevelEnum.City">
            <summary>
            地市级别
            </summary>
        </member>
        <member name="F:PT.Profile.Business.DistrictLevelEnum.District">
            <summary>
            区县级别
            </summary>
        </member>
        <member name="T:PT.Profile.Business.ProvinceDistrictTypeEnum">
            <summary>
            省级行政区类型划分
            </summary>
        </member>
        <member name="F:PT.Profile.Business.ProvinceDistrictTypeEnum.Province">
            <summary>
            省级无委
            </summary>
        </member>
        <member name="F:PT.Profile.Business.ProvinceDistrictTypeEnum.MunicipalityCity">
            <summary>
            直辖市
            </summary>
        </member>
        <member name="F:PT.Profile.Business.ProvinceDistrictTypeEnum.SpecificallyDesignated">
            <summary>
            计划单列市 city specifically designated in the state plan
            </summary>
        </member>
        <member name="F:PT.Profile.Business.ProvinceDistrictTypeEnum.AutonomousRegion">
            <summary>
            自治区 autonomous region
            </summary>
        </member>
        <member name="F:PT.Profile.Business.ProvinceDistrictTypeEnum.SpecialRegion">
            <summary>
            特别行政区
            </summary>
        </member>
        <member name="T:PT.Profile.Business.CityDistrictTypeEnum">
            <summary>
            地市级行政区类型划分
            </summary>
        </member>
        <member name="F:PT.Profile.Business.CityDistrictTypeEnum.City">
            <summary>
            （地级）市
            </summary>
        </member>
        <member name="F:PT.Profile.Business.CityDistrictTypeEnum.Region">
            <summary>
            地区
            </summary>
        </member>
        <member name="F:PT.Profile.Business.CityDistrictTypeEnum.Union">
            <summary>
            盟
            </summary>
        </member>
        <member name="F:PT.Profile.Business.CityDistrictTypeEnum.Autonomous">
            <summary>
            自治州
            </summary>
        </member>
        <member name="T:PT.Profile.Business.JabberId">
            <summary>
            JabberId扩展功能访问类,jid一般形式为foo.childrealm@domain
            abcd.haikou@hainan.com
            </summary>
        </member>
        <member name="F:PT.Profile.Business.JabberId.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.Business.JabberId.ChildRealm">
            <summary>
            分中心子域名
            </summary>
        </member>
        <member name="F:PT.Profile.Business.JabberId.Domain">
            <summary>
            域名
            </summary>
        </member>
        <member name="M:PT.Profile.Business.JabberId.DecodeJId(System.String,PT.Profile.Business.JabberId)">
            <summary>
            解码
            </summary>
            <param name="jidString">字符串形式的jid</param>
            <param name="jid">回填类</param>
        </member>
        <member name="M:PT.Profile.Business.JabberId.GetDomainNameViaDeptMember(System.String,PT.Profile.Types.DeptMemberList)">
            <summary>
            根据用户Id和部门成员信息获取整体域名
            </summary>
            <param name="userId"></param>
            <param name="deptMembers"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.JabberId.GetDomainName(System.String,System.String)">
            <summary>
            将子域名和域名合并成完整域名
            </summary>
            <param name="childrealm"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.JabberId.CombineJID(System.String,System.String,System.String)">
            <summary>
            组合id与域名成为JID
            </summary>
            <param name="id">id</param>
            <param name="childrealm">分中心子域名</param>
            <param name="domain">网间标准域名</param>
            <returns>JID</returns>
        </member>
        <member name="M:PT.Profile.Business.JabberId.GetDomainName(System.String)">
            <summary>
            根据行政区代码获取域名后缀 形如"@gnosis"或".haikou@gnosis"
            </summary>
            <param name="areaCode"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.JabberId.GenerateUserJID(System.String,System.String)">
            <summary>
            根据GUID和所属于行政区产生新的用户ID
            </summary>
            <param name="simpleUserID">基本guid</param>
            <param name="areaCode">行政区代码</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Business.JabberId.DecodeDomainName(System.String)">
            <summary>
            返回jid中的域名全称
            </summary>
            <param name="jidString">JID</param>
            <returns>域名全称</returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ExpItem">
            <summary>
            策略表达式中的一个基本比较表达式
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItem.PolyFlag">
            <summary>
            对象标识符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItem.Op">
            <summary>
            操作符号/判断符号
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItem.ParamValue">
            <summary>
            比较值
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.ExpItem.Check">
            <summary>
            校验并返回错误信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.ExpItem.CopyFrom(PT.Profile.ObjectPoly.ExpItem)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="modelItem"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.ExpItem.ToString">
            <summary>
            重写tostring
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ExpItemList">
            <summary>
            ExpItem信息集合类
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ExpItemParseScene">
            <summary>
            单一比较关系表达式解析场景信息
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItemParseScene.polyExpression">
            <summary>
            整体表达式
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItemParseScene.expItem">
            <summary>
            解析出的表达式
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItemParseScene.ParseResult">
            <summary>
            解析结果 0:失败 1:成功
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItemParseScene.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.ExpItemParseScene.ParseIndex">
            <summary>
            开始解析的位置
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyFlagEnum">
            <summary>
            策略表达式标记类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.All">
            <summary>
            广播,所有人
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.DeptId">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.DeptIdWithSub">
            <summary>
            跨行政区范围的部门及下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.DeptIdWithSubInOrg">
            <summary>
            不跨行政区范围的部门及下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.RoleName">
            <summary>
            角色路径名称
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.RoleNameWithSub">
            <summary>
            角色路径名称及其子角色
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.LogClassPathName">
            <summary>
            日志分类路径
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.LogClassPathNameWithSub">
            <summary>
            日志分类路径
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.SuperiorApprovel">
            <summary>
            当前用户的审批上级
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.District">
            <summary>
            所属行政区划
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyFlagEnum.Undefined">
            <summary>
            未定义
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyFlagEnumConverter">
            <summary>
            PolyFlagEnum转换类
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyFlagEnumConverter.EnumFromString(System.String)">
            <summary>
            字符串转枚举
            </summary>
            <param name="estring"></param>
            <returns>PolyFlagEnum</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyFlagEnumConverter.EnumToString(PT.Profile.ObjectPoly.PolyFlagEnum)">
            <summary>
            枚举类型转换为字符串
            </summary>
            <param name="pf"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyInvoker">
            <summary>
            平台对象策略描述表达式实现类
            </summary>
            <summary>
            平台对象策略描述表达式实现类
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.InvokeDebug``1(``0,PT.Profile.ObjectPoly.ExpItemDebugDelegate{``0})">
            <summary>
            执行策略表达式,用于调试
            </summary>
            <typeparam name="T"></typeparam>
            <param name="relativeData"></param>
            <param name="d"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.GetSuitableStringList(PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.GetSuitableStringListDelegate)">
            <summary>
            执行策略表达式,并在必要时调用回调函数获取各个子表达式的符合Id列表,并根据逻辑关系形成最终Id列表
            </summary>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <param name="d">回调委托,此委托计算子表达式</param>
            <returns>最终Id列表</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.AndTwoList(PT.Toolkit.Portable.Collections.StringList,PT.Toolkit.Portable.Collections.StringList)">
            <summary>
            将两个字符列表取交集，计算后放在idsx里
            </summary>
            <param name="idsx"></param>
            <param name="idsy"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.OrTwoList(PT.Toolkit.Portable.Collections.StringList,PT.Toolkit.Portable.Collections.StringList)">
            <summary>
            将两个字符列表取并集，计算后放在idsx里
            </summary>
            <param name="idsx"></param>
            <param name="idsy"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.GetSuitableStringList_NoPriority(PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.GetSuitableStringListDelegate)">
            <summary>
            无括号表达式的快速计算方法
            </summary>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.GetSuitableStringList_Priority(PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.GetSuitableStringListDelegate)">
            <summary>
            有优先级的表达式计算方式
            </summary>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableObject``1(``0,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableObjectDelegate{``0})">
            <summary>
            执行策略表达式,对单一对象进行条件判断，在必要时调用回调函数获取比较值作为参考,并根据逻辑关系形成最终判定
            </summary>
            <typeparam name="T">过滤关联数据泛型类型</typeparam>
            <param name="relativeData">过滤关联数据</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <param name="d">回调委托</param>
            <returns>最终判定</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableObject_NoPriority``1(``0,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableObjectDelegate{``0})">
            <summary>
            无括号表达式的快速计算方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="relativeData"></param>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableObject_Priority``1(``0,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableObjectDelegate{``0})">
            <summary>
            有括号表达式的正常计算方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="relativeData"></param>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableString(System.String,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableStringDelegate)">
            <summary>
            执行策略表达式,对单一字符串对象进行条件判断，在必要时调用回调函数获取比较值作为参考,并根据逻辑关系形成最终判定
            </summary>
            <param name="Id">判定关系关联Id</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <param name="d">回调委托</param>
            <returns>最终判定</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableString_NoPriority(System.String,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableStringDelegate)">
            <summary>
            无括号表达式的快速计算方法
            </summary>
            <param name="Id"></param>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.JudgeSuitableString_Priority(System.String,PT.Toolkit.Portable.ProtoParamList,PT.Profile.ObjectPoly.SuitableStringDelegate)">
            <summary>
            有括号表达式的计算方法
            </summary>
            <param name="Id"></param>
            <param name="dynamicParams"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.QuotedString(System.String)">
            <summary>
            对于包含空格或首字母为双引号的值域转换为双引号模式的值域
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExplainCorrectly">
            <summary>
            表达式是否被成功解释
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.HasBracketOperator">
            <summary>
            表达式是否包含括号操作符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.RelativeId">
            <summary>
            与事务关联Id
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.MiddleFixPolyItems">
            <summary>
            中缀顺序子项集合
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.PostFixPolyItems">
            <summary>
            后缀顺序子项集合
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ToString">
            <summary>
            重写ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.AssemblyPoly">
            <summary>
            组合为字符串形式表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.NeedCurrentUserId">
            <summary>
            解析后使用,判断是否需要使用当前用户Id作为动态参数参照
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsePoly(System.String)">
            <summary>
            解析表达式
            </summary>
            <param name="polyExpression">字符串表达式</param>
            <returns>返回出错信息或空</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ConvertToPostfix(PT.Profile.ObjectPoly.PolyItemList,PT.Profile.ObjectPoly.PolyItemList)">
            <summary>
            中缀表达式转换为后缀表达式
            </summary>
            <param name="middleFix">中缀表达式-输入</param>
            <param name="postFix">中缀表达式-输出</param>
            <returns>返回出错信息或空</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.CheckMiddleFix(PT.Profile.ObjectPoly.PolyItemList)">
            <summary>
            对解析出的策略项列表进行结构化校验
            </summary>
            <returns>返回出错信息或空</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.CheckPolyItemIndexMatch(System.Int32,PT.Profile.ObjectPoly.PolyItemList,PT.Toolkit.Portable.Collections.UIntFlagCollection)">
            <summary>
            检查对应索引对应项是否满足标记条件中的一项
            </summary>
            <param name="index">索引</param>
            <param name="polyItems">列表</param>
            <param name="itemExpects"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.OnParsing(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析总入口
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_Uncertain_AnyChar(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-未确定状态，解析任意字符
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_BaseExp_GetOperator(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-基础比较式-获取操作符号状态
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_BaseExp_GetValue(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-基础比较式-获取比较值
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_BaseExp_GetQuotedString(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-基础比较式-获取双引号括起来的字符串比较值
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_MustAppearCharRequest(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-必须匹配字符
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingEntry_BaseExp_GetQuotedString_Escaping(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            解析入口-基础比较式-获取双引号括起来的字符串比较值-转义处理
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.IsExpectedChar(System.Char,PT.Toolkit.Portable.Collections.UIntFlagCollection)">
            <summary>
            是否指定字符属于期望字符列表范围内
            </summary>
            <param name="cChar"></param>
            <param name="expects"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.GetPositionInfo(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            获取位置描述信息
            </summary>
            <param name="scene"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyInvoker.ParsingSub_KeywordToPolyItem(PT.Toolkit.Portable.StringCustomParseScene{PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene})">
            <summary>
            关键字转换为策略项
            </summary>
            <param name="scene"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene">
            <summary>
            策略表达式解析场景
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.al">
            <summary>
            表达式列表
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.ParseStatus">
            <summary>
            解析拼接状态，0:未确定状态 , 1:正在基本比较式解析
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.BaseExpItemParseStatus">
            <summary>
            当前解析操作状态 0:正在识别策略关键字 1:正在解析比较操作符 2:正在解析比较值 3:解析成功
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.keyword">
            <summary>
            拼接关键字
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.keywordStartIndex">
            <summary>
            关键字开始位置
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.Error">
            <summary>
            解析错误信息
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.Expects">
            <summary>
            执行某个解析步骤后期待并允许接下来收到的字符类型 0:内容结尾,1:分隔符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseScene.UnCompletedItem">
            <summary>
            未完成状态的项
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar">
            <summary>
            期望字符类型
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.EOC">
            <summary>
            结尾标记
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.Other">
            <summary>
            其它未列出的任意字符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.Seperator">
            <summary>
            分隔符标记
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.LeftBracket">
            <summary>
            左括号
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.RightBracket">
            <summary>
            右括号
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.LE">
            <summary>
            小于号（不等号第一位）
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyInvoker.ExpParseExpectChar.Equ">
            <summary>
            等于号（等号第一位）
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyInvokerList">
            <summary>
            PolyInvoker集合类
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.ExpItemDebugDelegate`1">
            <summary>
            调试调用委托
            </summary>
            <typeparam name="T"></typeparam>
            <param name="eI"></param>
            <param name="relativeData"></param>
        </member>
        <member name="T:PT.Profile.ObjectPoly.GetSuitableObjectListDelegate`1">
            <summary>
            符合条件字符串型Id列表回调委托
            </summary>
            <param name="eI">基本表达式</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <returns>符合过滤条件的结果</returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.GetSuitableStringListDelegate">
            <summary>
            符合条件字符串型Id列表回调委托
            </summary>
            <param name="eI">基本表达式</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <returns>符合条件Id列表</returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.SuitableStringDelegate">
            <summary>
            单一字符串型对象的条件判断委托
            </summary>
            <param name="eI">基本表达式</param>
            <param name="Id">将要被判断是否符合条件的目标Id</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <returns>是否符合条件</returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.SuitableObjectDelegate`1">
            <summary>
            单一对象的条件判断委托
            </summary>
            <typeparam name="T">过滤关联数据泛型类型</typeparam>
            <param name="eI">基本表达式</param>
            <param name="relativeData">将要被判断是否符合条件的目标关联数据</param>
            <param name="dynamicParams">需要动态提供的参数信息</param>
            <returns>是否符合条件</returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyExpOperatorEnum">
            <summary>
            基础比较式支持的比较操作符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyExpOperatorEnum.NotEqu">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyExpOperatorEnum.Equ">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyExpOperatorEnum.Undefined">
            <summary>
            未知
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyExpOperatorEnumConverter">
            <summary>
            PolyExpOperatorEnum转换类
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyExpOperatorEnumConverter.EnumFromString(System.String)">
            <summary>
            字符串转枚举
            </summary>
            <param name="estring"></param>
            <returns>PolyOperatorEnum</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyExpOperatorEnumConverter.EnumToString(PT.Profile.ObjectPoly.PolyExpOperatorEnum)">
            <summary>
            枚举转字符串
            </summary>
            <param name="po"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyItemOperatorEnum">
            <summary>
            策略表达式逻辑操作符
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemOperatorEnum.AND">
            <summary>
            与
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemOperatorEnum.OR">
            <summary>
            或
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemOperatorEnum.LB">
            <summary>
            左括号LeftBracket
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemOperatorEnum.RB">
            <summary>
            右括号RightBracket
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemOperatorEnum.Undefined">
            <summary>
            未知
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyItemOperatorEnumConverter">
            <summary>
            PolyLogicalOperatorEnum转换类
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItemOperatorEnumConverter.EnumFromString(System.String)">
            <summary>
            字符串转枚举
            </summary>
            <param name="estring"></param>
            <returns>PolyOperatorEnum</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItemOperatorEnumConverter.EnumToString(PT.Profile.ObjectPoly.PolyItemOperatorEnum)">
            <summary>
            枚举转字符串
            </summary>
            <param name="plo"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItemOperatorEnumConverter.EnumFromCnString(System.String)">
            <summary>
            汉字字符串转枚举
            </summary>
            <param name="cstring"></param>
            <returns>PolyOperatorEnum</returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItemOperatorEnumConverter.EnumToCnString(PT.Profile.ObjectPoly.PolyItemOperatorEnum)">
            <summary>
            枚举转汉字字符串
            </summary>
            <param name="plo"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyItemTypeEnum">
            <summary>
            策略表达式子项类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemTypeEnum.ExpItem">
            <summary>
            基本比较式
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemTypeEnum.Operator">
            <summary>
            操作符号 AND OR ( )
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItemTypeEnum.Undefined">
            <summary>
            未知
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyItem">
            <summary>
            策略表达式解析结果项
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItem.BaseExp">
            <summary>
            可单独计算结果的基本表达式,当ItemType=PolyItemTypeEnum.ExpItem时有效
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItem.ItemOperation">
            <summary>
            基本比较式之间的操作符，当ItemType=PolyItemTypeEnum.Operator时有效
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItem.ItemType">
            <summary>
            子项类型
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItem.StartIndex">
            <summary>
            此项在表达式字符串起始位置
            </summary>
        </member>
        <member name="F:PT.Profile.ObjectPoly.PolyItem.StopIndex">
            <summary>
            此项在表达式字符串结束位置
            </summary>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItem.ToString">
            <summary>
            重写ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItem.GetStartPositionInfo">
            <summary>
            获取开始位置信息返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.ObjectPoly.PolyItem.GetStopPositionInfo">
            <summary>
            获取结束位置信息返回
            </summary>
            <returns></returns>
        </member>
        <member name="P:PT.Profile.ObjectPoly.PolyItem.IsPolyItemOperator">
            <summary>
            是否是基本比较式外的操作符
            </summary>
        </member>
        <member name="P:PT.Profile.ObjectPoly.PolyItem.IsLeftBracket">
            <summary>
            是否是左括号
            </summary>
        </member>
        <member name="P:PT.Profile.ObjectPoly.PolyItem.IsRightBracket">
            <summary>
            是否是右括号
            </summary>
        </member>
        <member name="T:PT.Profile.ObjectPoly.PolyItemList">
            <summary>
            PolyItem集合类
            </summary>
        </member>
        <member name="T:PT.Profile.Business.PlatformObjectNameForbiddenCheck">
            <summary>
            JID扩展功能访问类,jid一般形式为foo.childrealm@domain
            abcd.haikou@hainan.com
            </summary>
        </member>
        <member name="F:PT.Profile.Business.PlatformObjectNameForbiddenCheck.PlatformObjectForbiddenChars">
            <summary>
            平台对象命名时禁用的字符
            </summary>
        </member>
        <member name="F:PT.Profile.Business.PlatformObjectNameForbiddenCheck.PlatformNetDiskForbiddenChars">
            <summary>
            网盘文件夹及文件名禁止出现的字符
            </summary>
        </member>
        <member name="M:PT.Profile.Business.PlatformObjectNameForbiddenCheck.ForbiddenCheckThrow(System.String,System.Boolean)">
            <summary>
            对象命名校验,如果未通过则抛出异常
            </summary>
            <param name="objectName">对象名称</param>
            <param name="isForbidEmptyString">是否禁止使用空串命名</param>
        </member>
        <member name="M:PT.Profile.Business.PlatformObjectNameForbiddenCheck.ForbiddenCheck(System.String,System.Boolean)">
            <summary>
            对象命名校验
            </summary>
            <param name="objectName">对象名称</param>
            <param name="isForbidEmptyString">是否禁止使用空串命名</param>
            <returns>错误信息或空</returns>
        </member>
        <member name="M:PT.Profile.Business.PlatformObjectNameForbiddenCheck.ForbiddenCheck(System.String,System.Boolean,System.Char[])">
            <summary>
            对象命名校验
            </summary>
            <param name="objectName">对象名称</param>
            <param name="isForbidEmptyString">是否禁止使用空串命名</param>
            <param name="ForbiddenChars">禁用字符数组</param>
            <returns>错误信息或空</returns>
        </member>
        <member name="T:PT.Profile.Business.SubsystemEntryHelper">
            <summary>
            业务系统入口地址辅助处理类
            </summary>
        </member>
        <member name="M:PT.Profile.Business.SubsystemEntryHelper.GetWebAddress_ABC(System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            合并基地址+入口页面+页面参数及页面附加参数为一个完整的web地址
            </summary>
            <param name="A">基地址,如http://127.0.0.1</param>
            <param name="B">入口页面,如login.aspx</param>
            <param name="C">页面参数,如fn=5</param>
            <param name="additionalParams">页面附加参数列表,如fn=5</param>
            <returns>完整的web地址</returns>
        </member>
        <member name="M:PT.Profile.Business.SubsystemEntryHelper.GetWebAddress_AC(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            合并基地址+页面参数及页面附加参数为一个完整的web地址
            </summary>
            <param name="A">基地址,如http://127.0.0.1</param>
            <param name="C">页面参数,如login.aspx?fn=5</param>
            <param name="additionalParams">页面附加参数列表,如fn=5</param>
            <returns>完整的web地址</returns>
        </member>
        <member name="M:PT.Profile.Business.SubsystemEntryHelper.GetWebAddress_C(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            合并地址参数及页面附加参数为一个完整的web地址
            </summary>
            <param name="C">地址参数,如http://127.0.0.1/login.aspx?fn=5</param>
            <param name="additionalParams">页面附加参数列表,如fn=5</param>
            <returns>完整的web地址</returns>
        </member>
        <member name="M:PT.Profile.Business.SubsystemEntryHelper.FixAdditionalParams(System.Collections.Generic.List{System.String})">
            <summary>
            检查并修正附加参数列表
            </summary>
            <param name="additionalParams">附加参数</param>
        </member>
        <member name="T:PT.Profile.Types.EditModeEnum">
            <summary>
            用户的工作状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditModeEnum.Normal">
            <summary>
            1 正常
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditModeEnum.Dropdown">
            <summary>
            2 下拉列表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditModeEnum.DropdownEdit">
            <summary>
            3 下拉编辑列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.EditModeEnumConverter">
            <summary>
            提供对EditModeEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.EditModeEnumConverter.EnumToString(PT.Profile.Types.EditModeEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="em">EditModeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.EditModeEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>UserStatus</returns>
        </member>
        <member name="T:PT.Profile.Types.EditValueTypeEnum">
            <summary>
            值类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditValueTypeEnum.Any">
            <summary>
            0 任意类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditValueTypeEnum.Integer">
            <summary>
            1 整数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.EditValueTypeEnum.Double">
            <summary>
            2 浮点数
            </summary>
        </member>
        <member name="T:PT.Profile.Types.EditValueTypeEnumConverter">
            <summary>
            提供对EditValueTypeEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.EditValueTypeEnumConverter.EnumToString(PT.Profile.Types.EditValueTypeEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="vt">EditValueTypeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.EditValueTypeEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>EditValueTypeEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.DeptInfo">
            <summary>
            类DeptInfo:部门基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DeptID">
            <summary>
            机构ID/标识-guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DeptName">
            <summary>
            机构名称 VARCHAR2(128)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DeptPhone">
            <summary>
            机构电话 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DeptFax">
            <summary>
            机构传真 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DistrictCode">
            <summary>
            4位 机构代码/地区代码 VARCHAR2(32)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.ParentDeptID">
            <summary>
            上级机构-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.DisplaySequence">
            <summary>
            显示顺序,用于在组织机构树中排序
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptInfo.IsOrganization">
            <summary>
            是否是无委组织机构或部门
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptInfo.Check">
            <summary>
            检查DeptInfo实例是否正确。
            </summary>
            <returns>空串为校验正确。</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptInfo.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.DeptInfoList">
            <summary>
            用户信息列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptInfoList.FindItemByDeptID(System.String)">
            <summary>
            根据部门id查找部门
            </summary>
            <param name="deptID">部门id</param>
            <returns>部门或null</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptInfoList.FindParentDeptInfoByDeptID(System.String)">
            <summary>
            根据部门id查找上级部门
            </summary>
            <param name="deptID">部门id</param>
            <returns>上级部门或null</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptInfoList.IsChildDept(System.String,System.String)">
            <summary>
            根据现有列表中元素判断两个部门是否有从属关系
            </summary>
            <param name="childDeptID">子部门ID</param>
            <param name="parentDeptID">父部门ID</param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.DeptMember">
            <summary>
            部门成员
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.DeptID">
            <summary>
            机构ID/标识-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.UserID">
            <summary>
            UserID  Guid.subdomain@domain VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.UserDuty">
            <summary>
            职务 VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.ApproveLevel">
            <summary>
            审批级别,用于流程审批处理,值越大级别越高
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.DisplaySequence">
            <summary>
            该用户在部门的用户列表中的显示顺序
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.DistrictCode">
            <summary>
            4位 机构代码/地区代码 VARCHAR2(32)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.RealName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.UniqueUserName">
            <summary>
            用户限定名称,此名称唯一,用户流程处理或单点登录
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.UserSex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMember.UserStatus">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptMember.CopyFromUser(PT.Profile.Types.UserInfo)">
            <summary>
            从用户信息里拷贝数据
            </summary>
            <param name="userInfo"></param>
        </member>
        <member name="M:PT.Profile.Types.DeptMember.CopyFromDept(PT.Profile.Types.DeptInfo)">
            <summary>
            从部门信息里拷贝数据
            </summary>
            <param name="deptInfo"></param>
        </member>
        <member name="M:PT.Profile.Types.DeptMember.Check(System.String@)">
            <summary>
            检查DeptMember实例是否正确。
            </summary>
            <param name="message">发生错误返回的信息。</param>
            <returns>如果正确返回值为true，否则为false。</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptMember.ToString">
            <summary>
            重写ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.DeptMemberList">
            <summary>
            DeptMember关联类列表,提供辅助功能
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptMemberList.GetMaxApproveLevel">
            <summary>
            获取列表中最大审核级别
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.DeptMemberList.FindItemByUserID(System.String)">
            <summary>
            根据用户id查找项目
            </summary>
            <param name="userID">用户id</param>
            <returns>项目</returns>
        </member>
        <member name="T:PT.Profile.Types.Dic_DeptDuty">
            <summary>
            部门职务字典
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Dic_DeptDuty.DeptDuty">
            <summary>
            职务
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Dic_DeptDuty.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="T:PT.Profile.Types.Dic_DeptDutyList">
            <summary>
            Dic_DeptDuty关联类列表,提供辅助功能
            </summary>
        </member>
        <member name="T:PT.Profile.Types.DeptMemberTable">
            <summary>
            部门成员
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMemberTable.DeptID">
            <summary>
            机构ID/标识-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMemberTable.UserID">
            <summary>
            UserID  Guid.subdomain@domain VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMemberTable.UserDuty">
            <summary>
            职务 VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMemberTable.ApproveLevel">
            <summary>
            审批级别,用于流程审批处理,值越大级别越高
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptMemberTable.DisplaySequence">
            <summary>
            该用户在部门的用户列表中的显示顺序
            </summary>
        </member>
        <member name="T:PT.Profile.Types.DeptMemberTableList">
            <summary>
            DeptMemberTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.DeptProperty">
            <summary>
            部门扩展属性
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptProperty.DeptId">
            <summary>
            部门ID/标识  VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptProperty.CategoryName">
            <summary>
            分类名称 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptProperty.PropertyValue">
            <summary>
            属性值  VARCHAR2(2048)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptProperty.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptProperty.Check">
            <summary>
            检查实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptProperty.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.DeptPropertyList">
            <summary>
            DeptProperty列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptPropertyList.FindItem(System.String,System.String)">
            <summary>
            根据部门id和分类名称查找项
            </summary>
            <param name="deptId">部门id</param>
            <param name="categoryName">分类名称</param>
            <returns>DeptProperty 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.DeptPropertyCategory">
            <summary>
            部门扩展属性分类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.CategoryName">
            <summary>
            分类名称 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.PropertyEditMode">
            <summary>
            属性字段编辑模式
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.EditValueType">
            <summary>
            属性字段编辑限制类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.EditValueFormat">
            <summary>
            属性字段编辑限制格式,依据类型不同而不同
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.DefaultValue">
            <summary>
            默认属性值
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DeptPropertyCategory.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptPropertyCategory.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptPropertyCategory.Check">
            <summary>
            检查实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.DeptPropertyCategory.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.DeptPropertyCategoryList">
            <summary>
            DeptPropertyCategory列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DeptPropertyCategoryList.FindItemByCategoryName(System.String)">
            <summary>
            根据分类名查找项
            </summary>
            <param name="categoryName">部门扩展属性分类名称</param>
            <returns>DeptPropertyCategory 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.WorkItemQueryCondition">
            <summary>
            工作提醒项查询条件
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.ItemID">
            <summary>
            工作提醒编号 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.ItemID_Include">
            <summary>
            查询条件包含ItemID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.SubsystemID">
            <summary>
            (如果是业务提醒创建时候必填)业务系统ID,VARCHAR2(36) 用来在调用时候获取入口地址
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.SubsystemID_Include">
            <summary>
            查询条件包含SubsystemID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.UserKeyword">
            <summary>
            业务系统自定义关键字 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.UserKeyword_Include">
            <summary>
            查询条件包含UserKeyword
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemQueryCondition.UserKeyword_IncludeLike">
            <summary>
            查询条件包含UserKeyword时是否使用like进行模糊匹配
            </summary>
        </member>
        <member name="T:PT.Profile.Types.MessageAcceptionTable">
            <summary>
            组件信息接受状态表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcceptionTable.ComponentId">
            <summary>
            组件Id(通道Id) varchar2(50)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcceptionTable.ColumnType">
            <summary>
            组件栏目提醒分类Id,组件自定义 varchar2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcceptionTable.UserId">
            <summary>
            平台用户Id varchar2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcceptionTable.ChangedDate">
            <summary>
            变化时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcceptionTable.Accepted">
            <summary>
            接受状态
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MessageAcceptionTable.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.MessageAcceptionTable.ReplaceNullMember">
            <summary>
            替换值为null的值为空
            </summary>
        </member>
        <member name="T:PT.Profile.Types.MessageAcceptionTableList">
            <summary>
            MessageAcceptionTable类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.MessageAcception">
            <summary>
            组件信息接受状态类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcception.ComponentId">
            <summary>
            组件Id(通道Id) varchar2(50)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MessageAcception.ColumnType">
            <summary>
            组件栏目提醒分类Id varchar2(255)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MessageAcception.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.MessageAcception.ReplaceNullMember">
            <summary>
            替换值为null的值为空
            </summary>
        </member>
        <member name="T:PT.Profile.Types.MessageAcceptionList">
            <summary>
            MessageAcception类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MessageAcceptionList.CopyFrom(PT.Profile.Types.MessageAcceptionTableList)">
            <summary>
            从表结构类中拷贝数据
            </summary>
            <param name="acceptionTables"></param>
        </member>
        <member name="T:PT.Profile.Types.ContentRetrievedItem">
            <summary>
            内容检索结果条目
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.ItemId">
            <summary>
            条目Id VARCHAR2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.ItemExternId">
            <summary>
            关联Id,含义由业务系统定义 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.ItemTitle">
            <summary>
            条目标题,VARCHAR2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.CreateDate">
            <summary>
            生成时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.ItemSource">
            <summary>
            条目来源 0:平台检索库 1:业务系统检索结果
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.StartRule">
            <summary>
            启动规则(组合，参数，插件)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.IsSendPlatformParams">
            <summary>
            启动时是否传递平台参数(CatalogIp,CatalogPort,Code)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.ItemParams">
            <summary>
            启动参数 VARCHAR2(1024)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentRetrievedItem.SubsystemId">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="T:PT.Profile.Types.ContentRetrievedItemList">
            <summary>
            ContentRetrieveItem类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PortalItemStartRuleEnum">
            <summary>
            门户条目启动规则枚举枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalItemStartRuleEnum.AC">
            <summary>
            1 组合，子系统路径与条目参数组合来启动
            Subsystem.SubsystemPath + SubModule.EntryParams
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalItemStartRuleEnum.ABC">
            <summary>
            2 组合，子系统路径+子系统入口+条目本身参数组合来启动
            Subsystem.SubsystemPath +Subsystem.SubsystemEntry+ SubModule.EntryParams
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalItemStartRuleEnum.C">
            <summary>
            3 启动时只使用条目参数来启动，只对bs系统有效
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PortalItemStartRuleEnumConverter">
            <summary>
            提供对PortalItemStartRuleEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="T:PT.Profile.Types.ContentItem">
            <summary>
            内容检索条目
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.ItemId">
            <summary>
            条目Id VARCHAR2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.ItemExternId">
            <summary>
            关联Id,含义由业务系统定义 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.ItemTitle">
            <summary>
            条目标题,VARCHAR2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.CreateDate">
            <summary>
            生成时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.StartRule">
            <summary>
            启动规则(组合，参数，插件)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.IsSendPlatformParams">
            <summary>
            启动时是否传递平台参数(CatalogIp,CatalogPort,Code)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.ItemParams">
            <summary>
            启动参数 VARCHAR2(1024)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.SubsystemId">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.UserPoly">
            <summary>
            用户可见策略,策略表达式 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ContentItem.ContentKeywords">
            <summary>
            关键字列表 每个关键字最长100字节
            </summary>
        </member>
        <member name="T:PT.Profile.Types.ContentItemItemList">
            <summary>
            ContentItem类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchDocResult">
            <summary>
            词条检索文档检索结果信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocResult.DocId">
            <summary>
            文档Id
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocResult.DocSubject">
            <summary>
            文档标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocResult.DocCreateDate">
            <summary>
            文档创建时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchDocResultList">
            <summary>
            GlobalSearchDocResult类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchDocCondition">
            <summary>
            词条检索文档检索条件信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocCondition.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocCondition.Keywords">
            <summary>
            检索关键字
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchDocCondition.SearchWithAndLogic">
            <summary>
            使用多个关键字检索词条时是否使用与操作
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchMailCondition">
            <summary>
            词条检索邮件索条件信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailCondition.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailCondition.Keywords">
            <summary>
            检索关键字
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailCondition.SearchWithAndLogic">
            <summary>
            使用多个关键字检索词条时是否使用与操作
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchMailResult">
            <summary>
            词条检索邮件检索结果信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailResult.MailId">
            <summary>
            MailId
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailResult.MailSubject">
            <summary>
            文档标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchMailResult.MailSendDate">
            <summary>
            邮件发送时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchMailResultList">
            <summary>
            GlobalSearchMailResult类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchWorkflowCondition">
            <summary>
            词条检索流程索条件信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowCondition.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowCondition.Keywords">
            <summary>
            检索关键字
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowCondition.SearchWithAndLogic">
            <summary>
            使用多个关键字检索词条时是否使用与操作
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchWorkflowResult">
            <summary>
            词条检索流程检索结果信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowResult.RequestId">
            <summary>
            RequestId
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowResult.RequestName">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.GlobalSearchWorkflowResult.ReceiveDate">
            <summary>
            当前用户的流程节点接收时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.GlobalSearchWorkflowResultList">
            <summary>
            GlobalSearchWorkflowResult类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PortalMenu">
            <summary>
            通用的WCF调用传入参数类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.MenuId">
            <summary>
            菜单Id,varchar2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.ParentMenuId">
            <summary>
            父菜单Id,varchar2(16),保留未用
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.MenuText">
            <summary>
            菜单标题,varchar2(30)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.MenuImage">
            <summary>
            二进制值方式存储的菜单图片,32x32png
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.DisplaySequence">
            <summary>
            同一级菜单下显示顺序
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PortalMenu.MenuVisiablePoly">
            <summary>
            菜单可见策略(系统管理层面对菜单可见性进行控制),varchar2(300)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.PortalMenu.CopyFrom(PT.Profile.Types.PortalMenu)">
            <summary>
            从其它实例拷贝数据
            </summary>
            <param name="dummyItem"></param>
        </member>
        <member name="M:PT.Profile.Types.PortalMenu.Check(System.Boolean)">
            <summary>
            检查正确性。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="T:PT.Profile.Types.PortalMenuList">
            <summary>
            PortalMenu类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFolderTypeEnum">
            <summary>
            网盘文件夹类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolderTypeEnum.Personal">
            <summary>
            0 个人文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolderTypeEnum.GroupFolder">
            <summary>
            1 群共享文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolderTypeEnum.GroupSubFolder">
            <summary>
            2 群共享子文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolderTypeEnum.OfflineFolder">
            <summary>
            3 离线文件夹
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFolderTypeEnumConverter">
            <summary>
            提供对NetFolderTypeEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFolderTypeEnumConverter.EnumToString(PT.Profile.Types.NetDisk.NetFolderTypeEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="folderType">FolderTypeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFolderTypeEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>ApplicationTypeEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.CreateNetFileArg">
            <summary>
            网盘文件创建参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.CreatorId">
            <summary>
            创建者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.FileName">
            <summary>
            文件名称,VARCHAR2(100)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.ExpiredDate">
            <summary>
            过期清理时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.NeverExpired">
            <summary>
            永不过期标记
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.FileSize">
            <summary>
            文件大小 Integer
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileArg.SharedPoly">
            <summary>
            共享策略，符合条件的人可见并可下载
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.CreateNetFileArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.CreateNetFileResult">
            <summary>
            网盘文件创建结果
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileResult.invokeResult">
            <summary>
            WCF调用返回状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFileResult.FileId">
            <summary>
            如果成功则返回文件标识
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.UploadNetFileContentArg">
            <summary>
            网盘文件数据上传参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.UploadNetFileContentArg.FileId">
            <summary>
            文件Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.UploadNetFileContentArg.DataNumber">
            <summary>
            数据块序号，从0开始
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.UploadNetFileContentArg.FileContent">
            <summary>
            数据内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.UploadNetFileContentArg.ValidContentLen">
            <summary>
            数据内容中有效数据长度(写入长度)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.UploadNetFileContentArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.UploadNetFileContentArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.DownloadNetFileContentArg">
            <summary>
            网盘文件数据下载参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.FileId">
            <summary>
            文件Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.FileOffset">
            <summary>
            读取的文件偏移，从0开始
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.MaxDataLength">
            <summary>
            本次读取数据内容最大长度,单位:字节,默认值为1M字节
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.ClientData">
            <summary>
            客户端定制数据,此值会被函数调用后原封不动地存放在返回结果中,方便客户端事务处理
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.DownloadNetFileContentArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.DownloadNetFileContentResult">
            <summary>
            网盘文件数据下载返回结果
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.invokeResult">
            <summary>
            WCF调用返回状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.FileId">
            <summary>
            文件Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.FileOffset">
            <summary>
            数据所在的文件偏移，从0开始
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.FileContent">
            <summary>
            本次读取数据内容最大长度,单位:字节,默认值为1M字节
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.ValidContentLen">
            <summary>
            数据内容中有效数据长度(写入长度)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.EndOfFile">
            <summary>
            是否是最后一段数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DownloadNetFileContentResult.ClientData">
            <summary>
            客户端定制数据,此值是函数调用时客户端传入的值,方便客户端事务处理
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg">
            <summary>
            网盘文件数据上传完成参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg.FileId">
            <summary>
            文件Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg.FileLength">
            <summary>
            文件总长度
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.CompleteUploadNetFileContentArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.GetNetFilesArg">
            <summary>
            网盘文件获取参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFilesArg.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFilesArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.GetNetFilesArg.CopyFrom(PT.Profile.Types.NetDisk.GetNetFilesArg)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="dummy">其他实例</param>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.GetNetFilesArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.GetNetFilesResult">
            <summary>
            网盘文件获取结果
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFilesResult.invokeResult">
            <summary>
            WCF调用返回状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFilesResult.Files">
            <summary>
            如果成功则返回子文件夹列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.DeleteNetFileArg">
            <summary>
            网盘文件删除参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DeleteNetFileArg.FileId">
            <summary>
            文件Id VARCHAR2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DeleteNetFileArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.DeleteNetFileArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.RenameNetFileArg">
            <summary>
            网盘文件重命名参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFileArg.FileId">
            <summary>
            文件Id VARCHAR2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFileArg.UserId">
            <summary>
            用户Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFileArg.NewFileName">
            <summary>
            文件夹新名称  VARCHAR2(100)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.RenameNetFileArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFile">
            <summary>
            网盘文件类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.FileId">
            <summary>
            文件Id VARCHAR2(16)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.FileName">
            <summary>
            文件名称,VARCHAR2(100)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.FileSize">
            <summary>
            文件大小 Integer
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.ExpiredDate">
            <summary>
            过期清理时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.NeverExpired">
            <summary>
            永不过期标记
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.SharedPoly">
            <summary>
            共享策略，符合条件的人可见并可下载
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.CreatorId">
            <summary>
            创建者Id  VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFile.DisplaySequence">
            <summary>
            序号,在文件夹中的显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFile.CopyFrom(PT.Profile.Types.NetDisk.NetFile)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="dummy"></param>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFile.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFile.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFileList">
            <summary>
            NetFolder类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.CreateNetFolderArg">
            <summary>
            网盘文件夹创建参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.ParentFolderId">
            <summary>
            父级文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.CreatorId">
            <summary>
            创建者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.FolderName">
            <summary>
            文件夹名称,VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.ExpiredDate">
            <summary>
            过期清理时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.NeverExpired">
            <summary>
            永不过期标记
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateNetFolderArg.SharedPoly">
            <summary>
            共享策略，符合条件的人可见并可下载
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.CreateNetFolderArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.GetNetFoldersArg">
            <summary>
            网盘子文件夹获取参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFoldersArg.ParentFolderId">
            <summary>
            父级文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFoldersArg.DescendantRetrieve">
            <summary>
            是否第归获取多级子文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFoldersArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.GetNetFoldersArg.CopyFrom(PT.Profile.Types.NetDisk.GetNetFoldersArg)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="dummy">其他实例</param>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.GetNetFoldersArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.GetNetFoldersResult">
            <summary>
            网盘子文件夹获取结果
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFoldersResult.invokeResult">
            <summary>
            WCF调用返回状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.GetNetFoldersResult.Folders">
            <summary>
            如果成功则返回子文件夹列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.DeleteNetFolderArg">
            <summary>
            网盘文件夹删除参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DeleteNetFolderArg.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.DeleteNetFolderArg.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.DeleteNetFolderArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.RenameNetFolderArg">
            <summary>
            网盘文件夹重命名参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFolderArg.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFolderArg.UserId">
            <summary>
            用户Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.RenameNetFolderArg.NewFolderName">
            <summary>
            文件夹新名称  VARCHAR2(100)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.RenameNetFolderArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFolder">
            <summary>
            网盘文件夹类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.FolderId">
            <summary>
            文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.ParentFolderId">
            <summary>
            父级文件夹Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.FolderName">
            <summary>
            文件夹名称,VARCHAR2(100)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.DisplaySequence">
            <summary>
            在父文件夹中的显示顺序
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.CreateDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.ExpiredDate">
            <summary>
            过期清理时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.NeverExpired">
            <summary>
            永不过期标记
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.SharedPoly">
            <summary>
            共享策略，符合条件的人可见并可下载
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.NetFolder.CreatorId">
            <summary>
            创建者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFolder.CopyFrom(PT.Profile.Types.NetDisk.NetFolder)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="dummy">其他实例</param>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFolder.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.NetFolder.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.NetFolderList">
            <summary>
            NetFolder类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItem">
            <summary>
            工作事务
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ItemID">
            <summary>
            项目编号(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.PersonID">
            <summary>
            人员ID(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.LaunchDate">
            <summary>
            开始时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.DealDate">
            <summary>
            结束时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ThemeMain">
            <summary>
            事务标题(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ThemePrefix">
            <summary>
            事务标题前缀(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ItemStatus">
            <summary>
            工作事务状态(工+个) 0:未办理 1:已办结
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ModuleID">
            <summary>
            模块ID(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ItemHint">
            <summary>
            提示信息(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.RelativePath">
            <summary>
            相对路径,网站地址+相对路径=实际入口(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ItemParams">
            <summary>
            启动参数(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.DeptID">
            <summary>
            部门ID(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItem.ItemFrom">
            <summary>
            事项来源性质  0:业务系统发起的个人事务 1:工作流发起的待办信息
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemList">
            <summary>
            BacklogItem类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemNotify">
            <summary>
            工作事务
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ItemID">
            <summary>
            项目编号(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ThemeMain">
            <summary>
            事务标题(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ThemePrefix">
            <summary>
            事务标题前缀(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.RelPersonID">
            <summary>
            关联人员ID,工作事务状态为未办理时,即ItemStatus=0时候,该字段应包含谁发过来的代办的人员ID,多人用逗号分隔
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.PersonID">
            <summary>
            人员ID(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.LaunchDate">
            <summary>
            开始时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.DealDate">
            <summary>
            结束时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ItemStatus">
            <summary>
            工作事务状态(工+个) 0:待办, 1:已办, 2:办结, 3:我的请求
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.IsUrgency">
            <summary>
            int	是否催办
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.IsSupervise">
            <summary>
            是否督办
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.IsTracing">
            <summary>
            是否跟踪
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ItemHint">
            <summary>
            提示信息(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.RelativePath">
            <summary>
            相对路径,网站地址+相对路径=实际入口(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemNotify.ItemParams">
            <summary>
            启动参数(工+个)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemNotify.ReplaceNullMember">
            <summary>
            替换值为null的值为空
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemPortal">
            <summary>
            工作事务
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemID">
            <summary>
            项目编号，待办事项的唯一标识 (工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemOperation">
            <summary>
            通知项处理方式 0:删除 1:新增 2:修改内容或状态 4:待办数量变化通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.todoWorksCount">
            <summary>
            待办数量 当ItemOperation=4时候有效
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.LaunchDate">
            <summary>
            待办事项创建时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.DealDate">
            <summary>
            待办事项办结时间(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ThemeMain">
            <summary>
            事务标题(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ThemePrefix">
            <summary>
            事务标题前缀(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemStatus">
            <summary>
            待办事项状态(工+个) 0:未办理 1:已办结
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemProperties">
            <summary>
            待办事项附加属性 正常，紧急登，可按位操作
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemHint">
            <summary>
            提示信息,鼠标移动到待办事项后的提示信息，如果为空则以标题作为提示信息(工+个)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.SubsystemID">
            <summary>
            代办项所属子系统
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.BaseAddress">
            <summary>
            网站基地址 http://192.168.3.162:80/login/
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.RelativePath">
            <summary>
            相对路径 PlatLoginOA.jsp
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemParams">
            <summary>
            启动参数 gopage=/docs/docs/DocDsp.jsp?id=430
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPortal.ItemFrom">
            <summary>
            事项来源性质  0:业务系统发起的个人事务 1:工作流发起的待办信息
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemPortal.GetUrl(System.String,System.String,System.String,System.String)">
            <summary>
            获取入口地址
            </summary>
            <param name="catalogIP"></param>
            <param name="catalogPort"></param>
            <param name="userid"></param>
            <param name="districtCode"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemPortal.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemPortalList">
            <summary>
            BacklogItemPortal类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemPortalList.SortByLaunchDateAsc">
            <summary>
            按创建时间排序
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemPropertyEnum">
            <summary>
            用户的工作状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPropertyEnum.Normal">
            <summary>
            0 正常
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemPropertyEnum.Urgent">
            <summary>
            1 紧急
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemQueryCondition">
            <summary>
            工作事务
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.PersonID">
            <summary>
            人员ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.ItemFrom">
            <summary>
            当事项来源性质开关打开后,使用此值过滤事项来源性质 0:业务系统发起的个人事务 1:工作流发起的待办信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.ItemStatus">
            <summary>
            事务状态 0:待办 1:已办结
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.StartRow">
            <summary>
            从第几行开始返回数据 ,1为首行
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.SourceSystems">
            <summary>
            代办项来源，从哪些子系统中查询代办项,子系统Id用逗号分隔,null:取所有子系统待办,空串:返回空列表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemQueryCondition.StopRow">
            <summary>
            从第几行截止返回数据
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemQueryCondition.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NewsItemQueryCondition">
            <summary>
            动态新闻查询条件
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryCondition.PersonID">
            <summary>
            人员ID,查询到的新闻动态是对应该人员能看到的
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryCondition.StartRow">
            <summary>
            从第几行开始返回数据 ,1为首行
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryCondition.StopRow">
            <summary>
            从第几行截止返回数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryCondition.AreaCode">
            <summary>
            按发通知（人）的行政区过滤条件，如果空串则忽略此条件
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryCondition.IsNeedAreaCodeDictionary">
            <summary>
            是否需要在返回结果里提供行政区字典
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsItemQueryCondition.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.NewsItemTable">
            <summary>
            即时消息通知表结构
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ItemID">
            <summary>
            新闻动态编号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.SenderID">
            <summary>
            通知发送者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ReceiverPoly">
            <summary>
            接收者策略
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.CreateDate">
            <summary>
            新闻通知创建日期
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ThemePrefix">
            <summary>
            通知标题前缀
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ThemeMain">
            <summary>
            通知标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ItemHint">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.SubsystemID">
            <summary>
            业务系统ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.RelativePath">
            <summary>
            相对路径,网站地址+相对路径=实际入口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.ItemParams">
            <summary>
            启动参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemTable.DisplaySequence">
            <summary>
            显示顺序，顺序从大往小排序，而且其中大于0的为置顶项
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsItemTable.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NewsItemTableList">
            <summary>
            BacklogItem类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NewsNotify">
            <summary>
            即时消息通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.NewsID">
            <summary>
            即时消息通知ID,此ID唯一，以便修改状态后能够对应到原来的通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.SenderID">
            <summary>
            通知发送者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ReceiverType">
            <summary>
            接收者类型,0:用户 1:部门 2:角色 3:广播 4:跨行政区范围的部门及下级部门部门及下级部门 5:角色及子角色 6:不跨行政区范围的部门及下级部门 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ReceiverID">
            <summary>
            接收者关联ID VARCHAR2(4000)，依据接收者类型，此处含义分别为
            接收者类型为0时:用户ID
            接收者类型为1或4或6时:部门ID
            接收者类型为2或5时:角色路径名称
            接收者类型为3时:空串
            多ID用逗号分隔
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ThemePrefix">
            <summary>
            消息标题前缀
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ThemeMain">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ItemHint">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.RelativePath">
            <summary>
            相对路径,网站地址+相对路径=实际入口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsNotify.ItemParams">
            <summary>
            启动参数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsNotify.Check">
            <summary>
            检查有效性。
            </summary>
            <returns>空串为校验正确。</returns>
        </member>
        <member name="T:PT.Profile.Types.SMReceiveInfo">
            <summary>
            短信接收内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMReceiveInfo.Phone">
            <summary>
            发送方的短信手机号码
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMReceiveInfo.MessageContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SMReceiveInfo.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.SMSendInfoViaPhone">
            <summary>
            接收者号码定制短信消息发送内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaPhone.SenderID">
            <summary>
            短信发送者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaPhone.ReceiverPhone">
            <summary>
            短信接收者手机号码
            多发用逗号分隔
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaPhone.MessageContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SMSendInfoViaPhone.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.SMSendInfoViaIdentity">
            <summary>
            接收者身份定制短信消息发送内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaIdentity.SenderID">
            <summary>
            短信发送者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaIdentity.ReceiverPoly">
            <summary>
            短信接收者策略
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SMSendInfoViaIdentity.MessageContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SMSendInfoViaIdentity.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItem">
            <summary>
            工作提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ItemID">
            <summary>
            工作提醒编号 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ItemTitle">
            <summary>
            (创建时候必填)标题 VARCHAR2(128)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.DealType">
            <summary>
            (创建时候必填)处理方式分类 int 0:业务提醒 1:个人提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.NotifyTime">
            <summary>
            (创建时候必填)提醒时间 DateTime 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.IconID">
            <summary>
            图标ID VARCHAR2(36) 对应WorkItemIcon表中的图标数据,信息条目标记图片16*16宽高
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.IsRemind">
            <summary>
            (创建时候必填)接到此通知时是否弹窗提醒 0:不提醒,1:提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.SubsystemID">
            <summary>
            (如果是业务提醒创建时候必填)业务系统ID,VARCHAR2(36) 用来在调用时候获取入口地址
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.RelativePath">
            <summary>
            (如果是业务提醒创建时候必填)相对路径,VARCHAR2(400)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ItemParams">
            <summary>
            附加参数 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.UserKeyword">
            <summary>
            业务系统自定义关键字 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ItemDescription">
            <summary>
            描述内容 VARCHAR2(4000)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.NotifiedUsers">
            <summary>
            已提醒用户Id列表 VARCHAR2(4000)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ReceiverPoly">
            <summary>
            接收者策略
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItem.ItemStatus">
            <summary>
            (创建时候必填)工作提醒状态 -1:无  0:未办理 1:已办结
            </summary>
        </member>
        <member name="M:PT.Profile.Types.WorkItem.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.WorkItemList">
            <summary>
            WorkItem类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NewsItemPortalNotify">
            <summary>
            动态新闻通知（门户使用，推送时使用）
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortalNotify.areacode">
            <summary>
            行政区
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortalNotify.ItemOperation">
            <summary>
            通知项处理方式 0:删除 1:新增 2:修改内容或排序或置顶  4:数量通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortalNotify.UnReadNewsCount">
            <summary>
            未读通知数量 当ItemOperation=4时候有效
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortalNotify.nip">
            <summary>
            动态
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsItemPortalNotify.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowInfo">
            <summary>
            流程信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowInfo.WorkflowID">
            <summary>
            流程类型编号，必填
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowInfo.WorkflowName">
            <summary>
            流程信息标题,必填
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowInfo.MainTableInfo">
            <summary>
            主表信息,流程附带的文档在主表信息中的某个字段体现，字段名称与表单的附件字段名称相同，字段值存文档ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowInfo.DetailTables">
            <summary>
            明细表信息
            </summary>
        </member>
        <member name="M:PT.Profile.Types.WorkflowInfo.ToPds">
            <summary>
            将类信息输出到公共数据段中
            </summary>
        </member>
        <member name="M:PT.Profile.Types.WorkflowInfo.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTableField">
            <summary>
            一个字段信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTableField.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTableField.FieldValue">
            <summary>
            字段值
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTableField.Visible">
            <summary>
            字段是否可见
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTableField.Editable">
            <summary>
            字段是否可编辑
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTableFieldList">
            <summary>
            WorkflowTableField类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTableRecord">
            <summary>
            一行记录信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTableRecord.Fields">
            <summary>
            行里包含的字段
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTableRecordList">
            <summary>
            WorkflowTableRecord类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTable">
            <summary>
            表信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkflowTable.Records">
            <summary>
            表单的字段信息
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkflowTableList">
            <summary>
            WorkflowTable类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemPortal">
            <summary>
            工作提醒项门户数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.ItemID">
            <summary>
            工作提醒编号 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.ItemOperation">
            <summary>
            工作提醒处理方式 0:删除 1:新增 2:修改内容或状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.IsWorkItemRemind">
            <summary>
            到期是否提醒 0:不提醒,1:提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.IsNotified">
            <summary>
            该工作提醒项对于当前用户是否已提醒过的标记
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.ItemTitle">
            <summary>
            (创建时候必填)标题 VARCHAR2(128)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.DealType">
            <summary>
            (创建时候必填)处理方式分类 int 0:业务提醒 1:个人提醒
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.NotifyTime">
            <summary>
            (创建时候必填)提醒时间 DateTime 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.IconID">
            <summary>
            图标ID VARCHAR2(36) 对应WorkItemIcon表中的图标数据,信息条目标记图片16*16宽高
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.SubsystemID">
            <summary>
            (如果是业务提醒创建时候必填)业务系统ID,VARCHAR2(36) 用来在调用时候获取入口地址
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.RelativePath">
            <summary>
            (如果是业务提醒创建时候必填)相对路径,VARCHAR2(400)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.ItemDescription">
            <summary>
            描述内容 VARCHAR2(4000)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemPortal.ItemStatus">
            <summary>
            (创建时候必填)工作提醒状态 0:未办理 1:已办结
            </summary>
        </member>
        <member name="M:PT.Profile.Types.WorkItemPortal.CopyFrom(PT.Profile.Types.WorkItem,System.String)">
            <summary>
            从工作提醒中拷贝数据
            </summary>
            <param name="wi">WorkItem</param>
            <param name="userId">用户Id</param>
        </member>
        <member name="M:PT.Profile.Types.WorkItemPortal.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:PT.Profile.Types.WorkItemPortal.GetUrl(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获取入口地址
            </summary>
            <param name="catalogIP"></param>
            <param name="catalogPort"></param>
            <param name="userid"></param>
            <param name="areaCode"></param>
            <param name="baseAddress"></param>
            <param name="additionalParams"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.WorkItemPortalList">
            <summary>
            WorkItemPortal类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemMonthPortal">
            <summary>
            工作提醒月集合门户数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemMonthPortal.Month">
            <summary>
            当前月份 1~12
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemMonthPortal.WorkItems">
            <summary>
            该月包含的工作提醒
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemMonthPortalList">
            <summary>
            WorkItemMonthPortal类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemYearPortal">
            <summary>
            工作提醒年集合门户数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemYearPortal.Year">
            <summary>
            当前年份
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemYearPortal.WorkItemMonths">
            <summary>
            该月包含的工作提醒
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemYearPortalList">
            <summary>
            WorkItemYearPortal类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemResultPortal">
            <summary>
            工作提醒查询结果门户数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemResultPortal.Icons">
            <summary>
            关联图标列表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemResultPortal.WorkItemYears">
            <summary>
            工作提醒集合
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemIcon">
            <summary>
            工作提醒图标数据
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemIcon.IconID">
            <summary>
            图标ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemIcon.Descriptions">
            <summary>
            图标描述 VARCHAR2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.WorkItemIcon.IconImage">
            <summary>
            图标内容
            </summary>
        </member>
        <member name="T:PT.Profile.Types.WorkItemIconList">
            <summary>
            WorkItemIcon类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.MailNotifyPortal">
            <summary>
            邮件通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MailNotifyPortal.UnReadMailsCount">
            <summary>
            未读邮件数量
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MailNotifyPortal.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:PT.Profile.Types.AlertItem">
            <summary>
            告警项
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ItemID">
            <summary>
            项目编号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ReceiverType">
            <summary>
            (创建时候必填)接收者类型,0:用户 1:部门 2:角色 3:广播 4:跨行政区范围的部门及下级部门部门及下级部门 5:角色及子角色 6:不跨行政区范围的部门及下级部门
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ReceiverID">
            <summary>
            接收者关联ID VARCHAR2(4000)，依据接收者类型，此处含义分别为
            接收者类型为0时:用户ID
            接收者类型为1或4或6时:部门ID
            接收者类型为2或5时:角色路径名称
            接收者类型为3时:空串
            多ID用逗号分隔
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.LaunchDate">
            <summary>
            告警项产生时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ItemTitle">
            <summary>
            告警项显示信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ItemTip">
            <summary>
            告警项tooltip信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ProcessType">
            <summary>
            告警项处理机制 0:并发（每个可以看到此告警项的用户都拥有自己的处理状态） 1:串行（每个可以看到此告警项的用户都共享同一个处理状态）
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.ItemStatus">
            <summary>
            告警项状态 0:未办理 1:已办理
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.RelativePath">
            <summary>
            处理告警项的功能入口相对地址及参数(子系统地址加相对地址=实际地址)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AlertItem.SubsystemID">
            <summary>
            相关子系统ID
            </summary>
        </member>
        <member name="T:PT.Profile.Types.AlertItemList">
            <summary>
            AlertItem类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemTable">
            <summary>
            待办工作表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ItemID">
            <summary>
            待办工作编号 varchar2(50)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.SenderID">
            <summary>
            发起者或修改者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ReceiverPoly">
            <summary>
            接收者策略
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.LaunchDate">
            <summary>
            创建或更新时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.DealDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ThemeMain">
            <summary>
            在门户待办列表显示的标题内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ThemePrefix">
            <summary>
            待办工作标题前缀,如新台
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ItemHint">
            <summary>
            描述或Tooltip信息 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ItemStatus">
            <summary>
            待办工作状态 0:未办理 1:已办
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.SubsystemID">
            <summary>
            业务系统ID,平台需要通过此值获取网站基地址,网站基地址+相对路径=实际入口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.RelativePath">
            <summary>
            相对路径
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BacklogItemTable.ItemParams">
            <summary>
            启动参数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemTable.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.BacklogItemTable.ReplaceNullMember">
            <summary>
            替换值为null的值为空
            </summary>
        </member>
        <member name="T:PT.Profile.Types.BacklogItemTableList">
            <summary>
            BacklogItemTable类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.OnlineTable">
            <summary>
            gnosis-online
            </summary>
        </member>
        <member name="F:PT.Profile.Types.OnlineTable.objectsequence">
            <summary>
            自动序号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.OnlineTable.collectionowner">
            <summary>
            JID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.OnlineTable.start">
            <summary>
            上线时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.OnlineTable.end">
            <summary>
            下线时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.OnlineTableList">
            <summary>
            OnlineTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.authregTable">
            <summary>
            gnosis-authreg
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.collectionowner">
            <summary>
            JID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.objectsequence">
            <summary>
            自动序号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.username">
            <summary>
            username
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.realm">
            <summary>
            realm
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.password">
            <summary>
            password
            </summary>
        </member>
        <member name="F:PT.Profile.Types.authregTable.character">
            <summary>
            character
            </summary>
        </member>
        <member name="T:PT.Profile.Types.authregTableList">
            <summary>
            authregTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.activeTable">
            <summary>
            gnosis-active
            </summary>
        </member>
        <member name="F:PT.Profile.Types.activeTable.collectionowner">
            <summary>
            JID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.activeTable.objectsequence">
            <summary>
            自动序号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.activeTable.time">
            <summary>
            time
            </summary>
        </member>
        <member name="T:PT.Profile.Types.activeTableList">
            <summary>
            activeTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.sensor_capTable">
            <summary>
            gnosis-sensor-cap
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sensor_capTable.collectionowner">
            <summary>
            JID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sensor_capTable.objectsequence">
            <summary>
            自动序号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sensor_capTable.xml">
            <summary>
            xml
            </summary>
        </member>
        <member name="T:PT.Profile.Types.sensor_capTableList">
            <summary>
            sensor_capTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.sboardTable">
            <summary>
            gnosis-sboard
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sboardTable.name">
            <summary>
            name
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sboardTable.addr">
            <summary>
            addr
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sboardTable.domain">
            <summary>
            domain
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sboardTable.tp">
            <summary>
            type
            </summary>
        </member>
        <member name="F:PT.Profile.Types.sboardTable.port">
            <summary>
            port
            </summary>
        </member>
        <member name="T:PT.Profile.Types.sboardTableList">
            <summary>
            sboardTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LogCategory">
            <summary>
            日志分类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogCategory.CategoryName">
            <summary>
            分类名称 varchar2(100) 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogCategory.CategoryID">
            <summary>
            分类ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogCategory.ParentCategoryID">
            <summary>
            父分类ID
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogCategory.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.LogCategoryList">
            <summary>
            LogCategory类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogCategoryList.FindItemByCategoryID(System.Int32)">
            <summary>
            根据日志分类id检索项目
            </summary>
            <param name="categoryID">角色id</param>
            <returns>符合条件的日志分类</returns>
        </member>
        <member name="T:PT.Profile.Types.LogContent">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogContent.logType">
            <summary>
            日志类型,见LogType定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogContent.BusinessType">
            <summary>
            业务操作类型名称,便于按业务操作查询,可为空 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogContent.UserID">
            <summary>
            涉及的业务操作人员ID,便于按业务操作查询,可为空 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogContent.LogInfo">
            <summary>
            自定义的日志信息 2048字节
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogContent.CategoryName">
            <summary>
            日志目录路径名称,或服务实现名称,多级用'\'字符分隔.每级名称最长 100字节
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogContent.Check">
            <summary>
            检查LogContent实例是否正确。
            </summary>
            <returns>空串为校验正确。</returns>
        </member>
        <member name="T:PT.Profile.Types.LogDetail">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.LogType">
            <summary>
            日志类型,见LogType定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.BusinessType">
            <summary>
            业务操作类型名称,便于按业务操作查询,可为空 VARCHAR2(72) ,当日志输出到运行时管理控制台时,存放日志分类名称
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.UserID">
            <summary>
            涉及的业务操作人员ID,便于按业务操作查询,可为空 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.LogInfo">
            <summary>
            日志信息摘要,前20字节
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.CategoryID">
            <summary>
            所属分类ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.LogDetailID">
            <summary>
            明细ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogDetail.LogTime">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LogDetailList">
            <summary>
            LogDetail类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LogQueryCondition">
            <summary>
            日志查询条件
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.LogTypes">
            <summary>
            日志类型集合,见LogType定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.CategoryID">
            <summary>
            查询的分类ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.QueryTimeBegin">
            <summary>
            查询的开始时间范围
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.QueryTimeEnd">
            <summary>
            查询的结束时间范围
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.UseTimeRange">
            <summary>
            是否使用时间范围条件进行查询
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.UseLogOper">
            <summary>
            是否使用操作人条件进行查询
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.LogOper">
            <summary>
            操作人Id
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.BusinessType">
            <summary>
            业务操作类型名称,便于按业务操作查询,可为空 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.UseBusinessType">
            <summary>
            是否使用业务操作类型名称条件进行查询
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.UserID">
            <summary>
            涉及的业务操作人员ID,便于按业务操作查询,可为空 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogQueryCondition.UseUserID">
            <summary>
            是否使用涉及的业务操作人员ID条件进行查询
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogQueryCondition.Check">
            <summary>
            检查LogQueryCondition实例是否正确。
            </summary>
            <returns>空串为校验正确。</returns>
        </member>
        <member name="T:PT.Profile.Types.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogType.Debug">
            <summary>
            0 调试信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogType.Filing">
            <summary>
            1 备案信息,此类日志不会被清理程序自动删除
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogType.Warn">
            <summary>
            2 警告信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogType.Error">
            <summary>
            3 错误信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LogType.Fatal">
            <summary>
            4 致命错误信息
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LogTypeList">
            <summary>
            LogType列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogTypeList.ToString">
            <summary>
            将包含的类型转换为字符串表示形式，每个类型用逗号分隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.LogTypeList.FromString(System.String)">
            <summary>
            从字符串表示形式转换为类型
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:PT.Profile.Types.LogTypeConverter">
            <summary>
            提供对LogType的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.LogTypeConverter.EnumToString(PT.Profile.Types.LogType)">
            <summary>
            枚举转成别名
            </summary>
            <param name="userStatus">LogType</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.LogTypeConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>LogType</returns>
        </member>
        <member name="T:PT.Profile.Types.NewsItemPortal">
            <summary>
            动态新闻通知（门户使用，获取列表时使用）
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.ItemID">
            <summary>
            新闻动态编号
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.SenderID">
            <summary>
            通知发送者 guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.CreateDate">
            <summary>
            新闻创建日期
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.ThemePrefix">
            <summary>
            消息标题前缀
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.ThemeMain">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.ItemHint">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.BaseAddress">
            <summary>
            网站基地址 http://192.168.3.162:80/login/
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.RelativePath">
            <summary>
            相对路径 PlatLoginOA.jsp
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.ItemParams">
            <summary>
            启动参数 gopage=/docs/docs/DocDsp.jsp?id=430
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemPortal.DisplaySequence">
            <summary>
            显示顺序，顺序从大往小排序，而且其中大于0的为置顶项
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsItemPortal.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NewsItemPortal.GetUrl(System.String,System.String,System.String)">
            <summary>
            获取入口地址
            </summary>
            <param name="catalogIP"></param>
            <param name="catalogPort"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.NewsItemQueryResult">
            <summary>
            即时消息通知
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryResult.AreaDictionaries">
            <summary>
            行政区字典(元素的ParamName =4位行政区代码，ParamValue=行政区名称)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NewsItemQueryResult.NewsItemPortals">
            <summary>
            符合条件的动态列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NewsItemPortalList">
            <summary>
            NewsItemPortal类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PlatformParam">
            <summary>
            平台定制字典信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PlatformParam.ParamName">
            <summary>
            参数名称 varchar2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PlatformParam.ParamValue">
            <summary>
            参数内容 
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PlatformParamlList">
            <summary>
            PlatformParam类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.PlatformConfigParam">
            <summary>
            平台配置信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PlatformConfigParam.ParamName">
            <summary>
            参数名称 varchar2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.PlatformConfigParam.ParamData">
            <summary>
            参数内容 blob 
            </summary>
        </member>
        <member name="T:PT.Profile.Types.RoleAuthority">
            <summary>
            角色权限关联信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleAuthority.RoleID">
            <summary>
            角色ID/标识-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleAuthority.SubsystemID">
            <summary>
            子系统ID-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleAuthority.AuthorityName">
            <summary>
            权限名称 VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleAuthority.AuthorityFlag">
            <summary>
            授权标记
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthority.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthority.Check">
            <summary>
            检查RoleAuthority实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="T:PT.Profile.Types.RoleAuthorityList">
            <summary>
            RoleAuthority类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthorityList.FindItemByPrimaryKey(System.String,System.String,System.String)">
            <summary>
            根据主键检索项目
            </summary>
            <param name="roleID">角色id</param>
            <param name="subsystemID">subsystemID</param>
            <param name="authorityName">authorityName</param>
            <returns>符合条件的角色成员</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthorityList.HasAuthority(System.String)">
            <summary>
            在整个列表中过滤，判断权限名称对应的权限是否有效，判断过程使用否优先规则
            </summary>
            <param name="AuthorityName">权限名称</param>
            <returns>是否有权</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthorityList.HasAuthority(System.String,System.String)">
            <summary>
            在整个列表中过滤，判断某个子系统中的权限名称对应的权限是否有效，判断过程使用否优先规则
            </summary>
            <param name="subsystemID">子系统id</param>
            <param name="AuthorityName">权限名称</param>
            <returns>是否有权</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleAuthorityList.FilterRoleIDs(System.String,System.String,PT.Toolkit.Portable.Collections.StringList,System.Int32)">
            <summary>
            根据子系统ID和权限名称,过滤出包含权限的角色信息并将角色ID填充到列表
            </summary>
            <param name="subsystemID">子系统ID</param>
            <param name="authorityName">权限名称</param>
            <param name="roleIDsHasAuthority">角色ID列表</param>
            <param name="authFlag">0:过滤授权标记为否的信息,1:过滤授权标记为true的信息,2:忽略授权标记</param>
        </member>
        <member name="T:PT.Profile.Types.RoleEx">
            <summary>
            角色信息扩展
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleEx.m_RoleInfo">
            <summary>
            分类信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleEx.m_RoleAuthorities">
            <summary>
            分类参数信息集合-BPM.Type.Registry.RegistryParam
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleEx.m_SubRoleInfoExs">
            <summary>
            子分类集合
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleEx.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleEx.Check">
            <summary>
            校验
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.RoleInfo">
            <summary>
            角色基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleInfo.RoleID">
            <summary>
            角色ID/标识-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleInfo.ParentRoleID">
            <summary>
            上级角色ID,VARCHAR2(36),第一级的目录的上级目录ID为PT.Profile.Definition.RoleRootID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleInfo.RoleName">
            <summary>
            角色名称 varchar2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleInfo.DisplaySequence">
            <summary>
            角色显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleInfo.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.RoleInfo.Check">
            <summary>
            检查RoleInfo实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>        
        </member>
        <member name="M:PT.Profile.Types.RoleInfo.CopyFrom(PT.Profile.Types.RoleInfo)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:PT.Profile.Types.RoleInfoList">
            <summary>
            RoleInfo类列表,提供高级访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleInfoList.FindItemByRoleID(System.String)">
            <summary>
            根据角色id检索项目
            </summary>
            <param name="roleID">id</param>
            <returns>符合条件的角色</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleInfoList.FindItemByRoleNameAndParentID(System.String,System.String)">
            <summary>
            根据角色名称和父角色id检索项目
            </summary>
            <param name="roleName">角色名称</param>
            <param name="parentRoleID">id</param>
            <returns>符合条件的角色</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleInfoList.GetRolePathByRoleID(System.String)">
            <summary>
            根据角色id查找角色并取得全路径名称，前提是角色列表必须提供全路径中的所有角色
            </summary>
            <param name="roleID"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.RoleInfoList.GetRoleByRolePath(System.String)">
            <summary>
            根据角色路径名称在列表中定位到对应角色
            </summary>
            <param name="rolePathName"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.RoleMember">
            <summary>
            角色包含的用户信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMember.RoleID">
            <summary>
            角色ID/标识-Guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMember.UserID">
            <summary>
            用户ID/标识-Guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMember.UserStatus">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMember.RealName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleMember.Check">
            <summary>
            检查DeptMember实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.RoleMember.ToString">
            <summary>
            重写object.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.RoleMemberList">
            <summary>
            RoleMember类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RoleMemberList.FindItemByRoleIDAndUserID(System.String,System.String)">
            <summary>
            根据角色id和用户id检索项目
            </summary>
            <param name="roleID">角色id</param>
            <param name="userID">用户id</param>
            <returns>符合条件的角色成员</returns>
        </member>
        <member name="T:PT.Profile.Types.RoleMemberTable">
            <summary>
            角色包含的用户信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMemberTable.RoleID">
            <summary>
            角色ID/标识-Guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RoleMemberTable.UserID">
            <summary>
            用户ID/标识-Guid
            </summary>
        </member>
        <member name="T:PT.Profile.Types.RoleMemberTableList">
            <summary>
            RoleMemberTable列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.ConsoleLogQueryCondition">
            <summary>
            控制台日志查询条件
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ConsoleLogQueryCondition.LogTypes">
            <summary>
            日志类型集合,见LogType定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ConsoleLogQueryCondition.CategoryName">
            <summary>
            查询的分类名称,空则忽略分类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ConsoleLogQueryCondition.StartId">
            <summary>
            从指定的 文本Id对应的ConsoleText开始获取 ，如果小于缓存的第一个Id则自动适配第一个有效的LogDetail 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ConsoleLogQueryCondition.RetrieveCount">
            <summary>
            获取LogDetail的数量
            </summary>
        </member>
        <member name="T:PT.Profile.Types.RuntimeAppServer">
            <summary>
            运行时应用服务器信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.ServiceIp">
            <summary>
            运行时管理服务Ip
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.ServicePort">
            <summary>
            运行时管理服务端口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.ServiceType">
            <summary>
            运行时管理服务器类型 0:应用服务器 ,1:守护服务器
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.ServerContainerType">
            <summary>
            容器类型 0:以windows服务方式启动,1:以测试服务器方式启动
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.ServerPath">
            <summary>
            服务器程序所在路径
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.RegisterTime">
            <summary>
            在目录服务注册时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.RuntimeAppServer.WcfServicePorts">
            <summary>
            运行时管理服务所在应用服务器中发布的WCF服务端口或守护服务控制端口
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RuntimeAppServer.CopyFrom(PT.Profile.Types.RuntimeAppServer)">
            <summary>
            从其它实例拷贝数据
            </summary>
            <param name="dummy">子系统信息</param>
        </member>
        <member name="T:PT.Profile.Types.RuntimeAppServerList">
            <summary>
            RuntimeAppServer列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.RuntimeAppServerList.FindItemByPrimaryKey(System.String,System.String)">
            <summary>
            根据关键值查找项目
            </summary>
            <param name="ServiceIp">运行时管理服务Ip</param>
            <param name="ServicePort">运行时管理服务端口</param>
            <returns>RuntimeManageService</returns>
        </member>
        <member name="M:PT.Profile.Types.RuntimeAppServerList.UnsafeAddAndSort(PT.Profile.Types.RuntimeAppServer)">
            <summary>
            添加并按IP+RTM端口排序,线程非安全
            </summary>
            <param name="runtimeAppServer"></param>
        </member>
        <member name="T:PT.Profile.Types.AppBitEnum">
            <summary>
            应用程序或操作系统的位数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppBitEnum.X86">
            <summary>
            32位版本
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppBitEnum.X64">
            <summary>
            64位版本
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppBitEnum.Other">
            <summary>
            未知或兼容
            </summary>
        </member>
        <member name="T:PT.Profile.Types.AppBitEnumConverter">
            <summary>
            提供对AppBitEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.AppBitEnumConverter.EnumToString(PT.Profile.Types.AppBitEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="applicationType">ApplicationTypeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.AppBitEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>ApplicationTypeEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.AppTypeEnum">
            <summary>
            子系统的应用程序类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppTypeEnum.BS">
            <summary>
            1 BS
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppTypeEnum.CS">
            <summary>
            2 CS
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppTypeEnum.Other">
            <summary>
            3 其它支撑系统
            </summary>
        </member>
        <member name="F:PT.Profile.Types.AppTypeEnum.Mobile">
            <summary>
            4 移动应用
            </summary>
        </member>
        <member name="T:PT.Profile.Types.AppTypeConverter">
            <summary>
            提供对AppTypeEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.AppTypeConverter.EnumToString(PT.Profile.Types.AppTypeEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="applicationType">ApplicationTypeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.AppTypeConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>ApplicationTypeEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.DocumentInfo">
            <summary>
            类-文档资源
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.DocumentID">
            <summary>
            文档ID weaver:id
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.DocumentName">
            <summary>
            文档名称,必填 weaver:docSubject
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.mainDirID">
            <summary>
            主目录ID(一级目录),必填 weaver:maincategory
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.subDirID">
            <summary>
            分目录ID(二级目录),必填 weaver:subcategory
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.secDirID">
            <summary>
            子目录ID(三级目录),必填 weaver:seccategory
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocumentInfo.Attachments">
            <summary>
            附件列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.DocumentInfoList">
            <summary>
            DocumentInfo类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.DocumentInfoList.FindItemByDocumentID(System.Int32)">
            <summary>
            根据文档ID检索项目
            </summary>
            <param name="docid">docid</param>
            <returns>符合条件的信息</returns>
        </member>
        <member name="T:PT.Profile.Types.DocAttachmentInfo">
            <summary>
            类-文档附件信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocAttachmentInfo.DocumentID">
            <summary>
            文档ID weaver:docid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocAttachmentInfo.AttachmentID">
            <summary>
            附件ID weaver:imagefileid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocAttachmentInfo.FileName">
            <summary>
            附件文件名 weaver:filename
            </summary>
        </member>
        <member name="F:PT.Profile.Types.DocAttachmentInfo.AttachmentContent">
            <summary>
            附件文件内容 weaver:filecontent-base64string
            </summary>
        </member>
        <member name="T:PT.Profile.Types.DocAttachmentInfoList">
            <summary>
            DocAttachmentInfo类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg">
            <summary>
            创建在线文件传输事务参数
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.SenderId">
            <summary>
            发送者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.ReceiverId">
            <summary>
            接收者Id VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.TotalLength">
            <summary>
            总大小
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.TransferObjectType">
            <summary>
            传输对象类型 1:文件 2:文件夹
            </summary>
        </member>
        <member name="F:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.TransferObjectName">
            <summary>
            传输对象名称
            </summary>
        </member>
        <member name="M:PT.Profile.Types.NetDisk.CreateOnlineNetTransferArg.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.SysParam">
            <summary>
            子系统参数信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.DropdownListFlag">
            <summary>
            描述参数值为下拉列表模式的标记，如果参数值在管理界面想显示为下拉列表形式，参数描述要以此值为开头
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.DropdownEditFlag">
            <summary>
            描述参数值为下拉编辑模式的标记，如果参数值在管理界面想显示为下拉编辑形式，参数描述要以此值为开头
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.ParamClassID">
            <summary>
            参数分类-Guid VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.ParamName">
            <summary>
            参数名称,VARCHAR2(100)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.ParamValue">
            <summary>
            参数值,VARCHAR2(2048)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.Descriptions">
            <summary>
            参数描述 VARCHAR2(200),可以使用此值格式化参数值的显示模式
            DDL a,b,c -下拉列表
            DDE a,b,c -下拉列表可编辑
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParam.DisplaySequence">
            <summary>
            序号,当同一分类中的参数显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParam.CopyFrom(PT.Profile.Types.SysParam)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="sysParam"></param>
        </member>
        <member name="M:PT.Profile.Types.SysParam.IsDropDownListMode">
            <summary>
            根据参数描述判断是否将参数值以下拉列表形式展现
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParam.IsDropDownEditMode">
            <summary>
            根据参数描述判断是否将参数值以下拉编辑形式展现
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParam.GetDropDownItems">
            <summary>
            从描述内容解析出下拉项供参数配置界面选择
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParam.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.SysParamList">
            <summary>
            SysParam类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParamList.FindItemByParamName(System.String,System.Boolean)">
            <summary>
            根据名称查找对应参数
            </summary>
            <param name="paramName">参数名称</param>
            <param name="bCaseSensitive">是否大小写敏感</param>
            <returns>参数或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamList.FindItemByParamClassIdAndParamName(System.String,System.String,System.Boolean)">
            <summary>
            根据分类Id和名称查找对应参数
            </summary>
            <param name="paramClassId">参数分类Id</param>
            <param name="paramName">参数名称</param>
            <param name="bCaseSensitive">是否大小写敏感</param>
            <returns>参数或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamList.GetParamValueByParamName(System.String,System.Boolean)">
            <summary>
            从参数数组中找到指定名称的参数并将值返回，如果没有该参数则返回空字符串""
            </summary>
            <param name="paramName"></param>
            <param name="bCaseSensitive">是否大小写敏感</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamList.FilterListByParamClassId(System.String)">
            <summary>
            从列表中根据参数分类Id过滤列表
            </summary>
            <param name="paramClassId">参数所属分类ID</param>
            <returns>参数列表</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamList.AddParamToListAndSortByDisplaySequence(PT.Profile.Types.SysParam,PT.Profile.Types.SysParamList)">
            <summary>
            将参数增加到参数列表并且按显示顺序排序
            </summary>
            <param name="sp">参数</param>
            <param name="lst">参数列表</param>
        </member>
        <member name="T:PT.Profile.Types.SysParamClass">
            <summary>
            子系统参数信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClass.SubsystemID">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClass.ParamClassID">
            <summary>
            参数分类 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClass.ParentParamClassID">
            <summary>
            父级分类ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClass.ParamClassName">
            <summary>
            分类名称,VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClass.DisplaySequence">
            <summary>
            在父分类中的显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParamClass.CopyFrom(PT.Profile.Types.SysParamClass)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="paramClass"></param>
        </member>
        <member name="M:PT.Profile.Types.SysParamClass.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClass.FindParamClassByParamClassName(PT.Profile.Types.SysParamClass[],System.String,System.Boolean)">
            <summary>
            从参数分类数组中找到指定名称的参数分类并将值返回，如果没有该参数则返回null。
            </summary>
            <param name="paramClasses">参数分类数组</param>
            <param name="paramClassName">要查找的分类名称</param>
            <param name="bCaseSensitive">是否大小写敏感</param>
            <returns>参数分类或null。</returns>
        </member>
        <member name="T:PT.Profile.Types.SysParamClassList">
            <summary>
            SysParamClass类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.FindItemByParamClassID(System.String)">
            <summary>
            根据分类Id检索项目
            </summary>
            <param name="paramClassID">分类Id</param>
            <returns>符合条件的分类</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.FindItemByParentParamClassIDAndName(System.String,System.String,System.String)">
            <summary>
            根据父分类Id和子分类名称检索子分类
            </summary>
            <param name="subsystemId">子系统Id,传空则忽略</param>
            <param name="parentParamClassID">父分类Id</param>
            <param name="paramClassName">子分类名称</param>
            <returns>符合条件的分类</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.FindItemBySubsystemIdAndName(System.String,System.String)">
            <summary>
            根据分类名称获取的分类信息。
            </summary>
            <param name="subsystemID">相关的注册系统</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <returns>分类信息或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.FindItemBySubsystemIdAndName(System.String,System.String,PT.Profile.Types.SysParamClassList)">
            <summary>
            根据分类名称获取的分类信息。
            </summary>
            <param name="subsystemID">相关的注册系统</param>
            <param name="paramClassPathName">参数分类的全路径名称。使用路径分隔符分隔，如："数据库\\台站库"</param>
            <param name="srcParamClasses">用于检索数据的参数分类列表</param>
            <returns>分类信息或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.FilterListBySubsystemIdAndParentId(System.String,System.String,System.Boolean)">
            <summary>
            从列表中获取某个子系统的给定的父节下所有子参数分类列表
            </summary>
            <param name="subsystemID">子系统ID,传递null或空串则忽略此过滤条件,只有在Root下才有不同子系统分类并存情况</param>
            <param name="parentParamClassID">父分类ID，子系统根ID可传PT.Profile.Definition.SpecialIDs.ParamClassRootID</param>
            <param name="descendantRetrieve">是否第归获取多级子分类</param>
            <returns>参数分类列表</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.RecursiveFilterChildParamClasses(System.String,System.String,PT.Profile.Types.SysParamClassList,PT.Profile.Types.SysParamClassList)">
            <summary>
            第归过滤子分类列表
            </summary>
            <param name="subsystemID">子系统ID,传递null或空串则忽略此过滤条件,只有在Root下才有不同子系统分类并存情况</param>
            <param name="currentParentParamClassID">当前父节点ID</param>
            <param name="outputParamClasses">输出列表</param>
            <param name="originalParamClasses">原始数据列表</param>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassList.AddParamClassToListAndSortByDisplaySequence(PT.Profile.Types.SysParamClass,PT.Profile.Types.SysParamClassList)">
            <summary>
            将分类增加到分类列表并且按显示顺序排序
            </summary>
            <param name="spc">参数分类</param>
            <param name="lst">参数分类列表</param>
        </member>
        <member name="T:PT.Profile.Types.SysParamClassEx">
            <summary>
            子系统参数类信息扩展
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClassEx.ParamClass">
            <summary>
            分类信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClassEx.Params">
            <summary>
            分类参数信息集合-BPM.Type.Registry.RegistryParam
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysParamClassEx.SubParamClasses">
            <summary>
            子分类集合
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.FindSubSysParamClassExByName(System.String)">
            <summary>
            根据名称查找子分类
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.GetSysParamClassExByClassPathName(System.String)">
            <summary>
            按路径查找子分类
            </summary>
            <param name="paramClassPathName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.GetSysParam(System.String,System.String)">
            <summary>
            根据路径和参数名查找参数
            </summary>
            <param name="paramClassPathName"></param>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.GetSysParamValue(System.String,System.String)">
            <summary>
            根据路径和参数名查找参数
            </summary>
            <param name="paramClassPathName"></param>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.Check">
            <summary>
            校验
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.Create(PT.Profile.Interface.ISubsystem,System.String)">
            <summary>
            创建SysParamClassEx并获得子系统下所有分类及分类下的参数,第一层为虚拟分类root
            </summary>
            <param name="iSubsystem">子系统ID</param>
            <param name="subsystemID">子系统ID</param>
            <returns>SysParamClassEx</returns>
        </member>
        <member name="M:PT.Profile.Types.SysParamClassEx.GetSysParamClassExRecurrence(PT.Profile.Interface.ISubsystem,PT.Profile.Types.SysParamClassEx)">
            <summary>
            第归获取参数
            </summary>
            <param name="iSubsystem"></param>
            <param name="parentParamClassEx"></param>
        </member>
        <member name="T:PT.Profile.Types.MachineDeploy">
            <summary>
            已部署或准备部署的物理机信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MachineDeploy.MachineIP">
            <summary>
            物理机IP VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MachineDeploy.ControlPort">
            <summary>
            总控端口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.MachineDeploy.DisplaySequence">
            <summary>
            在界面列表里显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MachineDeploy.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.MachineDeployList">
            <summary>
            MachineDeploy类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.MachineDeployList.FindItemByMachineIP(System.String)">
            <summary>
            根据ip检索项目
            </summary>
            <param name="machineIP">ip</param>
            <returns>符合条件的物理机信息</returns>
        </member>
        <member name="T:PT.Profile.Types.SysDeploy">
            <summary>
            子系统在物理机器上服务部署信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysDeploy.MachineIP">
            <summary>
            物理机IP VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysDeploy.WcfPort">
            <summary>
            Wcf端口
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysDeploy.SubsystemID">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysDeploy.SubsystemVersion">
            <summary>
            该服务当前部署的版本号VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysDeploy.ContainerBits">
            <summary>
            要求的承载容器位数,根据服务及实际运行环境不同，需要分别提供32位或64位容器(应用程序服务器)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysDeploy.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.SysDeployList">
            <summary>
            SysDeploy类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysDeployList.FindItemByMachineIPAndSubsystemID(System.String,System.String)">
            <summary>
            根据ip检索项目
            </summary>
            <param name="machineIP">ip</param>
            <param name="subsystemID">subsystemID</param>
            <returns>符合条件的信息</returns>
        </member>
        <member name="M:PT.Profile.Types.SysDeployList.GetItemsByIP(System.String)">
            <summary>
            以IP作为过滤条件获得子集合
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.ServiceBindingType">
            <summary>
            客户端与服务端通信绑定类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ServiceBindingType.BasicHttpBinding">
            <summary>
            BasicHttpBinding
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ServiceBindingType.WebHttpBinding">
            <summary>
            WebHttpBinding
            </summary>
        </member>
        <member name="T:PT.Profile.Types.ServiceBindingTypeConverter">
            <summary>
            提供对ServiceBindingType的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.ServiceBindingTypeConverter.EnumToString(PT.Profile.Types.ServiceBindingType)">
            <summary>
            枚举转成别名
            </summary>
            <param name="applicationType">ServiceBindingType</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.ServiceBindingTypeConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>ServiceBindingType</returns>
        </member>
        <member name="T:PT.Profile.Types.ServiceDeploy">
            <summary>
            子系统服务部署信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ServiceDeploy.ServiceID">
            <summary>
            子系统服务ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.ServiceDeploy.MachineIP">
            <summary>
            服务ip地址 VARCHAR2(64)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.ServiceDeploy.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.ServiceDeployList">
            <summary>
            ServiceDeploy类列表,提供高级检索
            </summary>
        </member>
        <member name="M:PT.Profile.Types.ServiceDeployList.FindItemByMachineIPAndServiceID(System.String,System.String)">
            <summary>
            根据ip检索项目
            </summary>
            <param name="machineIP">ip</param>
            <param name="serviceID">serviceid</param>
            <returns>符合条件的信息</returns>
        </member>
        <member name="M:PT.Profile.Types.ServiceDeployList.GetItemsByIP(System.String)">
            <summary>
            以IP作为过滤条件获得子集合
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.SysService">
            <summary>
            类-注册系统系统服务信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.SubsystemID">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.ServiceID">
            <summary>
            子系统服务标识,同时也是接口全称及终结点名称 VARCHAR2(128)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.DisplayName">
            <summary>
            服务显示名称 VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.AssemblyFile">
            <summary>
            服务入口程序集名称 VARCHAR2(256)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.ImplementClassName">
            <summary>
            服务实现类名称 VARCHAR2(128)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.ReceiveTimeout">
            <summary>
            连接失效间隔 单位:分钟 默认:10分钟 限制范围 1-1000
            获取或设置连接在撤消之前保持非活动状态的最大时间间隔，在此时间间隔内未接收任何应用程序消息。
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.SendTimeout">
            <summary>
            传输失效间隔 单位:分钟  默认:1分钟 限制范围 1-1000 
            获取或设置在传输引发异常之前可用于完成写入操作的时间间隔。
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.MaxReceivedMessageSize">
            <summary>
            BasicHttpBinding协议下此绑定的通道上可以接收的消息的最大大小 单位:字节 默认:160 * 1024(160k)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysService.BindingType">
            <summary>
            客户端和服务之间的通信所用的协议
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysService.CopyFrom(PT.Profile.Types.SysService)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:PT.Profile.Types.SysService.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.SysServiceList">
            <summary>
            SysService类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysServiceList.FindItemByServiceID(System.String)">
            <summary>
            根据服务ID检索项目
            </summary>
            <param name="serviceID">serviceID</param>
            <returns>符合条件的信息</returns>
        </member>
        <member name="M:PT.Profile.Types.SysServiceList.GetItemsBySubsystemID(System.String)">
            <summary>
            以SubsystemID作为过滤条件获得子集合
            </summary>
            <param name="subsystemID"></param>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessSubject">
            <summary>
            业务分类信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessSubject.BusinessName">
            <summary>
            业务分类名称 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessSubject.BusinessImage">
            <summary>
            业务图片 blob
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessSubject.IsShow">
            <summary>
            是否显示 integer
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessSubject.DisplaySequence">
            <summary>
            显示顺序 integer
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessSubject.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessSubjectList">
            <summary>
            BusinessSubject列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessSubjectList.FindItemByName(System.String)">
            <summary>
            根据分类名称查找项
            </summary>
            <param name="subjectName">分类名称</param>
            <returns>BusinessSubject 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.SubModule">
            <summary>
            子系统功能模块信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.SubsystemID">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.BusinessName">
            <summary>
            业务分类名称 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.SubModuleID">
            <summary>
            模块ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.SubModuleName">
            <summary>
            模块名称 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.Descriptions">
            <summary>
            模块描述 VARCHAR2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.AuthorityContent">
            <summary>
            权限内容，子系统权限名称集合，通过空格分隔  VARCHAR2(1024)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.Authorities">
            <summary>
            权限列表
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.SubModuleImage">
            <summary>
            模块图标，图片信息 59*59 png
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.ParamsType">
            <summary>
            启动规则(组合，参数，插件)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.IsSendPlatformParams">
            <summary>
            启动模块时是否传递平台参数(CatalogIp,CatalogPort,Code)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.EntryParams">
            <summary>
            启动参数 VARCHAR2(1024)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.AuthorityType">
            <summary>
            模块访问时的权限间校验规则(与,或,禁止,允许)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModule.DisplaySequence">
            <summary>
            子模块显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModule.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModule.FixMembersAfterLoadFromDB">
            <summary>
            在从数据库装载后，修正成员数据
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModule.CopyFrom(PT.Profile.Types.SubModule,System.Boolean)">
            <summary>
            复制其它实例信息
            </summary>
            <param name="subModule"></param>
            <param name="IsCotainImage">是否克隆图片信息</param>
        </member>
        <member name="M:PT.Profile.Types.SubModule.AuthorityContentFromList(PT.Toolkit.Portable.Collections.StringList)">
            <summary>
            权限信息从列表转换为长字符串
            </summary>
            <param name="authorities">列表</param>
            <returns>长字符串</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModule.AuthorityContentToList(System.String,PT.Toolkit.Portable.Collections.StringList)">
            <summary>
            权限信息从长字符串解析到列表
            </summary>
            <param name="authContent">长字符串</param>
            <param name="authorities">列表</param>
        </member>
        <member name="T:PT.Profile.Types.SubModuleList">
            <summary>
            SubModule列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModuleList.CloneItems(System.Boolean)">
            <summary>
            克隆列表并返回
            </summary>
            <param name="IsCotainImage">是否克隆图片信息</param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SubModuleList.FindItemByName(System.String)">
            <summary>
            根据名称检索项目
            </summary>
            <param name="subModuleName">名称</param>
            <returns>符合条件的模块,或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModuleList.FindItemByModuleID(System.String)">
            <summary>
            根据ID检索项目
            </summary>
            <param name="subModuleID">模块ID</param>
            <returns>符合条件的模块,或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModuleList.FixMembersAfterLoadFromDB">
            <summary>
            在从数据库读取后修正成员信息
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModuleList.AuthorityContentToList">
            <summary>
            将每个项目权限信息从长字符串解析到列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.SubModuleAuthorityCheckEnum">
            <summary>
            模块权限认证方式枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModuleAuthorityCheckEnum.And">
            <summary>
            1,与
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModuleAuthorityCheckEnum.Or">
            <summary>
            2,或
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModuleAuthorityCheckEnum.Forbid">
            <summary>
            3,不做权限判断,一直禁止
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModuleAuthorityCheckEnum.Allow">
            <summary>
            4,不做权限判断,一直允许
            </summary>
        </member>
        <member name="T:PT.Profile.Types.SubModuleAuthorityCheckEnumConverter">
            <summary>
            提供对SubModuleAuthorityCheckEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModuleAuthorityCheckEnumConverter.EnumToString(PT.Profile.Types.SubModuleAuthorityCheckEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="paramsType">SubModuleAuthorityCheckEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModuleAuthorityCheckEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>SubModuleAuthorityCheckEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.SubModulParamsTypeEnum">
            <summary>
            子系统参数类型枚举
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.ComposeAC">
            <summary>
            1 组合，子系统路径与功能模块本身入口参数组合来启动
            Subsystem.SubsystemPath + SubModule.EntryParams
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.ComposeABC">
            <summary>
            2 组合，子系统路径+子系统入口+功能模块本身入口参数组合来启动
            Subsystem.SubsystemPath +Subsystem.SubsystemEntry+ SubModule.EntryParams
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.ParametersOnly">
            <summary>
            3 启动时只使用模块本身入口参数来启动，只对bs系统有效
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.Assembly">
            <summary>
            4 启动时调用模块指定的dll中的入口函数来启动
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.Executable">
            <summary>
            5 可执行文件exe
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubModulParamsTypeEnum.Mobile">
            <summary>
            6 移动应用模块
            </summary>
        </member>
        <member name="T:PT.Profile.Types.SubModulParamsTypeEnumConverter">
            <summary>
            提供对SubModulParamsTypeEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubModulParamsTypeEnumConverter.EnumToString(PT.Profile.Types.SubModulParamsTypeEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="paramsType">SubModulParamsTypeEnum</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.SubModulParamsTypeEnumConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>SubModulParamsTypeEnum</returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessGroup">
            <summary>
            业务分类信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroup.BusinessName">
            <summary>
            业务分类名称 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroup.SubModules">
            <summary>
            业务分类下包含的模块列表
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessGroup.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessGroupList">
            <summary>
            BusinessGroup列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessGroupList.FindItemByName(System.String)">
            <summary>
            根据分类名称查找项
            </summary>
            <param name="subjectName">分类名称</param>
            <returns>BusinessSubject 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessGroupSubModule">
            <summary>
            功能模块信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroupSubModule.SubModuleName">
            <summary>
            模块名称 VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroupSubModule.Descriptions">
            <summary>
            模块描述,鼠标悬浮提示 VARCHAR2(255)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroupSubModule.SubModuleImageAddress">
            <summary>
            模块对应图片文件名称，59*59 png，由泛微提供网站图片存储目录位置，调用前写入图片，图片路径动态拼成
            </summary>
        </member>
        <member name="F:PT.Profile.Types.BusinessGroupSubModule.UrlAddress">
            <summary>
            模块对应BS页面入口地址
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessGroupSubModule.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.BusinessGroupSubModuleList">
            <summary>
            BusinessGroupSubModule列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.BusinessGroupSubModuleList.FindItemByName(System.String)">
            <summary>
            根据名称检索项目
            </summary>
            <param name="subModuleName">名称</param>
            <returns>符合条件的模块,或null</returns>
        </member>
        <member name="T:PT.Profile.Types.Subsystem">
            <summary>
            子系统基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.SubsystemID">
            <summary>
            子系统ID VARCHAR2(36)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.SubsystemName">
            <summary>
            系统名称 VARCHAR2(256)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.ApplicationType">
            <summary>
            子系统应用类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.IsShow">
            <summary>
            子系统是否显示在单点登录中
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.Descriptions">
            <summary>
            系统描述
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.SubsystemPath">
            <summary>
            子系统地址 VARCHAR2(512)
            BS系统存放WEB地址如:http://192.168.2.177:80/mysite
            CS系统无效
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.SubsystemEntry">
            <summary>
            系统入口页面 VARCHAR2(512)
            BS系统存放默认页面如:Default.aspx
            CS系统存放启动文件名:abc.exe
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.SubsystemIcon">
            <summary>
            显示图片
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Subsystem.DeployDir">
            <summary>
            部属目录(相对目录) VARCHAR2(128)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.Subsystem.ToString">
            <summary>
            重写object.ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.Subsystem.Check">
            <summary>
            检查DeptMember实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.Subsystem.CopyFrom(PT.Profile.Types.Subsystem)">
            <summary>
            从其它实例拷贝数据
            </summary>
            <param name="subsystem">子系统信息</param>
        </member>
        <member name="T:PT.Profile.Types.SubsystemList">
            <summary>
            SubsystemInfo列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubsystemList.FindItemByID(System.String)">
            <summary>
            根据id查找项目
            </summary>
            <param name="subSystemID"></param>
            <returns>Subsystem</returns>
        </member>
        <member name="M:PT.Profile.Types.SubsystemList.FindItemByName(System.String)">
            <summary>
            根据Name查找项目
            </summary>
            <param name="subSystemName"></param>
            <returns>Subsystem</returns>
        </member>
        <member name="T:PT.Profile.Types.SubsystemEx">
            <summary>
            提供对整个注册信息（子系统、服务、参数、权限）的数据集合，导入导出及基于xml架构的校验
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.subsystem">
            <summary>
            子系统基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.SysServices">
            <summary>
            子系统服务信息集合
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.rootParamClassEx">
            <summary>
            子系统根分类信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.rootRoleEx">
            <summary>
            子系统预置角色信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.SysAuthorities">
            <summary>
            子系统权限信息集合
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SubsystemEx.SubModules">
            <summary>
            功能模块集合
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubsystemEx.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubsystemEx.Check">
            <summary>
            校验
            </summary>
            <returns>校验没通过则包含错误信息</returns>
        </member>
        <member name="T:PT.Profile.Types.SubsystemExList">
            <summary>
            SubsystemEx类列表,提供扩展功能访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SubsystemExList.GetSysParamsByClassName(System.String,System.String)">
            <summary>
            根据系统ID和路径获取参数集合
            </summary>
            <param name="subsystemID"></param>
            <param name="paramClassPathName"></param>
            <returns></returns>
        </member>
        <member name="M:PT.Profile.Types.SubsystemExList.FindItemBySubsystemID(System.String)">
            <summary>
            根据子系统ID检索项目
            </summary>
            <param name="subsystemID">subsystemID</param>
            <returns>符合条件的信息</returns>
        </member>
        <member name="T:PT.Profile.Types.SysAuthority">
            <summary>
            子系统基本信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysAuthority.SubsystemID">
            <summary>
            注册系统ID-Guid
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysAuthority.AuthorityName">
            <summary>
            权限名称,不允许包含空格
            </summary>
        </member>
        <member name="F:PT.Profile.Types.SysAuthority.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysAuthority.CopyFrom(PT.Profile.Types.SysAuthority)">
            <summary>
            从其他实例拷贝数据
            </summary>
            <param name="sa"></param>
        </member>
        <member name="M:PT.Profile.Types.SysAuthority.Check">
            <summary>
            校验类成员取值是否正确
            </summary>
            <returns>错误字符串或空串</returns>
        </member>
        <member name="T:PT.Profile.Types.SysAuthorityList">
            <summary>
            SysAuthorityList列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.SysAuthorityList.FindItemByName(System.String)">
            <summary>
            根据名称检索项目
            </summary>
            <param name="authorityName">权限名称</param>
            <returns>符合条件的权限,或null</returns>
        </member>
        <member name="M:PT.Profile.Types.SysAuthorityList.FindItemByIDAndName(System.String,System.String)">
            <summary>
            根据系统ID和名称检索项目
            </summary>
            <param name="subSystemID">系统ID</param>
            <param name="authorityName">权限名称</param>
            <returns>符合条件的权限,或null</returns>
        </member>
        <member name="T:PT.Profile.Types.Dic_UserEducation">
            <summary>
            学历字典
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Dic_UserEducation.UserEducation">
            <summary>
            学历
            </summary>
        </member>
        <member name="F:PT.Profile.Types.Dic_UserEducation.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="T:PT.Profile.Types.Dic_UserEducationList">
            <summary>
            Dic_UserEducation关联类列表,提供辅助功能
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LeaderRelation">
            <summary>
            人员上下级关系
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LeaderRelation.UserID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="F:PT.Profile.Types.LeaderRelation.LeaderID">
            <summary>
            领导ID
            </summary>
        </member>
        <member name="T:PT.Profile.Types.LeaderRelationList">
            <summary>
            LeaderRelation类列表,提供高级检索
            </summary>
        </member>
        <member name="T:PT.Profile.Types.TimeRange">
            <summary>
            时间段
            </summary>
        </member>
        <member name="F:PT.Profile.Types.TimeRange.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.TimeRange.LogoutTime">
            <summary>
            登出时间
            </summary>
        </member>
        <member name="T:PT.Profile.Types.TimeRangeList">
            <summary>
            时间段列表
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserConfiguration">
            <summary>
            用户定制信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserConfiguration.UserID">
            <summary>
            用户ID/标识-Guid@domain.com VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserConfiguration.CategoryName">
            <summary>
            配置分类名称，用户自定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserConfiguration.Configuration">
            <summary>
            配置内容
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserConfigurationList">
            <summary>
            用户扩展属性列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserInfo">
            <summary>
            用户基本信息,不能增删属性,否则会和泛微组织机构同步时出错
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserID">
            <summary>
            用户ID/标识-Guid VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.SafePlatformCode">
            <summary>
            4A安全平台人员代码 VARCHAR2(12)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.RealName">
            <summary>
            姓名 VARCHAR2(32)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UniqueUserName">
            <summary>
            限定名称,此名称唯一,用户流程处理或单点登录
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserPassword">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserSex">
            <summary>
            性别，男,女
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserBirthDay">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserJoinDate">
            <summary>
            入职日期
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserPhone">
            <summary>
            联系电话 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserMobile">
            <summary>
            移动电话 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserFax">
            <summary>
            传真 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserEmail">
            <summary>
            电子邮件 VARCHAR2(200)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserEducation">
            <summary>
            学历,累积字典 VARCHAR2(64)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserPicture">
            <summary>
            照片,可为null
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserStatus">
            <summary>
            用户状态，见枚举UserStatus定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserInfo.UserLeaveDate">
            <summary>
            离职日期
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserInfo.Check">
            <summary>
            检查UserInfo实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.UserInfo.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.UserInfoList">
            <summary>
            用户信息列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserInfoList.FindItemByUserID(System.String)">
            <summary>
            根据用户id查找项
            </summary>
            <param name="userID">用户id</param>
            <returns>UserInfo 或 null</returns>
        </member>
        <member name="M:PT.Profile.Types.UserInfoList.FindItemByUserName(System.String)">
            <summary>
            根据用户名查找项
            </summary>
            <param name="userName">userName</param>
            <returns>UserInfo 或 null</returns>
        </member>
        <member name="M:PT.Profile.Types.UserInfoList.FindItemByUniqueUserName(System.String)">
            <summary>
            根据用户限定名查找项
            </summary>
            <param name="uniqueUserName">uniqueUserName</param>
            <returns>UserInfo 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.UserOnlineInfo">
            <summary>
            用户在线信息类,包含用户基本信息及上下线信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.UserGuid">
            <summary>
            用户标识(GUID)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.UserName">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.LoginTime">
            <summary>
            用户登录时间
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.OrgGuid">
            <summary>
            用户所属组织标识
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.OrgName">
            <summary>
            用户所属组织名称
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserOnlineInfo.Sex">
            <summary>
            用户性别
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserOnlineInfoList">
            <summary>
            UserOnlineInfo列表,提供扩展访问
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserRelation">
            <summary>
            用户关系信息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserRelation.RelationName">
            <summary>
            关系名称
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserRelation.UserId">
            <summary>
            用户ID/标识-Guid.subrealm@domain VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserRelation.SuperiorUserID">
            <summary>
            上级用户Id
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserRelation.CopyFrom(PT.Profile.Types.UserRelation)">
            <summary>
            从其它实例拷贝数据
            </summary>
            <param name="dummy">其它实例</param>
        </member>
        <member name="T:PT.Profile.Types.UserRelationList">
            <summary>
            UserRelation列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserRelationList.FindItemByNameAndUserId(System.String,System.String)">
            <summary>
            根据关系名称和用户Id获取关系
            </summary>
            <param name="relationName">关系名称</param>
            <param name="userId">用户Id</param>
            <returns>关系</returns>
        </member>
        <member name="T:PT.Profile.Types.UserStatusEnum">
            <summary>
            用户的工作状态
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Normal">
            <summary>
            1 正常
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Out">
            <summary>
            2 外出
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Forbid">
            <summary>
            3 禁止使用
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Leave">
            <summary>
            4 已离职
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Background">
            <summary>
            5 后台用户(后台用户不允许在单点登录中登录，一般为后台服务程序使用)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserStatusEnum.Debuger">
            <summary>
            6 调试者,系统维护调试人员用,可在单点登录上登录,但不会显示在在线人员列表中,其它在线用户也不会收到上线提示
            </summary>
        </member>
        <member name="T:PT.Profile.Types.UserStatusConverter">
            <summary>
            提供对UserStatusEnum的类型和别名之间的转换
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserStatusConverter.EnumToString(PT.Profile.Types.UserStatusEnum)">
            <summary>
            枚举转成别名
            </summary>
            <param name="userStatus">UserStatus</param>
            <returns>别名</returns>
        </member>
        <member name="M:PT.Profile.Types.UserStatusConverter.EnumFromString(System.String)">
            <summary>
            别名转成枚举
            </summary>
            <param name="s">别名</param>
            <returns>UserStatus</returns>
        </member>
        <member name="T:PT.Profile.Types.UserProperty">
            <summary>
            用户扩展属性
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserProperty.UserId">
            <summary>
            用户ID/标识  VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserProperty.CategoryName">
            <summary>
            分类名称 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserProperty.PropertyValue">
            <summary>
            属性值  VARCHAR2(2048)
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserProperty.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserProperty.Check">
            <summary>
            检查实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.UserProperty.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.UserPropertyList">
            <summary>
            用户扩展属性列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyList.FindItem(System.String,System.String)">
            <summary>
            根据用户id和分类名称查找项
            </summary>
            <param name="userID">用户id</param>
            <param name="categoryName">分类名称</param>
            <returns>UserProperty 或 null</returns>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyList.FindFirstItemByCategoryNameAndValue(System.String,System.String)">
            <summary>
            根据分类名称和属性值查找第一个匹配项
            </summary>
            <param name="categoryName">分类名称</param>
            <param name="propValue">属性值</param>
            <returns>UserProperty 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.UserPropertyCategory">
            <summary>
            用户扩展属性分类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.CategoryName">
            <summary>
            分类名称 VARCHAR2(72)
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.PropertyEditMode">
            <summary>
            属性字段编辑模式
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.EditValueType">
            <summary>
            属性字段编辑限制类型
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.EditValueFormat">
            <summary>
            属性字段编辑限制格式,依据类型不同而不同
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.DefaultValue">
            <summary>
            默认属性值
            </summary>
        </member>
        <member name="F:PT.Profile.Types.UserPropertyCategory.DisplaySequence">
            <summary>
            显示顺序
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyCategory.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyCategory.Check">
            <summary>
            检查实例是否正确。
            </summary>
            <returns>如果正确返回值为空串，否则为错误信息。</returns>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyCategory.ToString">
            <summary>
            重写object.ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:PT.Profile.Types.UserPropertyCategoryList">
            <summary>
            UserPropertyCategory列表,提供扩展访问
            </summary>
        </member>
        <member name="M:PT.Profile.Types.UserPropertyCategoryList.FindItemByCategoryName(System.String)">
            <summary>
            根据分类名查找项
            </summary>
            <param name="categoryName">userName</param>
            <returns>UserProperty 或 null</returns>
        </member>
        <member name="T:PT.Profile.Types.InvokeResult">
            <summary>
            通用的WCF调用返回结果类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.Status">
            <summary>
            供查询调用返回状态使用,调用状态 -1:调用发生异常并附带异常信息 ,0:调用失败并附带失败信息 , 1:成功 ,2:操作完成但带有警告信息 
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.ExternMessage">
            <summary>
            供查询调用返回状态使用,如果调用失败或产生异常,则存放对应消息
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.Int64Result">
            <summary>
            64位整数结果,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.DoubleResult">
            <summary>
            双精度浮点结果,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.StringResult">
            <summary>
            字符串结果,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.BinaryResult">
            <summary>
            二进制结果,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeResult.BinaryResultLength">
            <summary>
            二进制结果的有效长度
            </summary>
        </member>
        <member name="M:PT.Profile.Types.InvokeResult.SetError(System.String)">
            <summary>
            设置错误消息和状态
            </summary>
            <param name="errorMessage">错误消息</param>
        </member>
        <member name="M:PT.Profile.Types.InvokeResult.SetException(System.Exception)">
            <summary>
            设置异常消息和状态
            </summary>
            <param name="ex">异常</param>
        </member>
        <member name="T:PT.Profile.Types.InvokeArg">
            <summary>
            通用的WCF调用传入参数类
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeArg.Int64Value">
            <summary>
            64位整数值,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeArg.DoubleValue">
            <summary>
            双精度浮点值,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeArg.StringValue">
            <summary>
            字符串值,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeArg.BinaryValue">
            <summary>
            二进制值,含义由被调用方定义
            </summary>
        </member>
        <member name="F:PT.Profile.Types.InvokeArg.BinaryValueLength">
            <summary>
            二进制值的有效长度
            </summary>
        </member>
    </members>
</doc>
